[["index.html", "Molecular mechanisms underlying response to influenza in grey seals (Halichoerus grypus), a potential wild reservoir 1 Publication Information 1.1 Authors 1.2 Abstract", " Molecular mechanisms underlying response to influenza in grey seals (Halichoerus grypus), a potential wild reservoir Christina McCosker 2025-07-17 1 Publication Information McCosker, C. M., Unal, E., Gigliotti, A., Puryear, W. B., Runstadler, J. A., Murray, K. T., King, B. L., &amp; Cammen, K. M. (2025). Molecular Mechanisms Underlying Response to Influenza in Grey Seals (Halichoerus grypus), a Potential Wild Reservoir. Molecular Ecology, e70012. https://doi.org/10.1111/mec.70012 1.1 Authors Christina M. McCosker1, Ebru Unal2,3, Alayna Gigliotti1, Wendy B. Puryear4, Jonathan A. Runstadler4, Kimberly T. Murray5, Benjamin L. King6, Kristina M. Cammen1 1School of Marine Sciences, University of Maine, Orono, ME, USA 2Mystic Aquarium, Mystic, CT, USA 3Department of Marine Sciences, University of Connecticut, Groton, CT, USA 4 Cummings School of Veterinary Medicine, Tufts University, North Grafton, MA, USA 5 NOAA Northeast Fisheries Science Center, Woods Hole, MA, USA 6 Department of Molecular and Biomedical Sciences, University of Maine, Orono, ME, USA 1.2 Abstract RNA viruses are infamous for their ability to cross species barriers, posing threats to global health and security. Influenza A virus (IAV) is naturally found in avian hosts but periodically spills over into marine wildlife. IAV outbreaks occur in the Northwest Atlantic, but grey seals (Halichoerus grypus) appear to be less susceptible to IAV compared to other species. The subclinical nature of IAV infection in addition to life history factors suggest grey seals are a potential wild reservoir host for IAV. We investigated differential gene expression among grey seals naturally exposed to IAV to elucidate genetic mechanisms involved in grey seal disease resistance. RNA sequencing was conducted on blood samples (N = 31) collected from grey seal pups in Massachusetts, US between 2014 and 2019. Samples were grouped for analysis based on presence/absence of viral RNA and antibodies. In the presence of IAV RNA, we observed widespread down-regulation of genes, including immune genes, potentially as a result of IAV-induced host shutoff. Immune down-regulation occurred in acute stage of IAV infection (+ viral RNA, - antibodies), followed by up-regulation of protein production in peak stage (+ viral RNA, + antibodies), possibly as a result of increased viral replication. Evidence of an activated immune response was observed in late stage of infection (- viral RNA, + antibodies) with up-regulated adaptive immunity genes. We hypothesize that the combination of down- and up-regulated immune gene expression may prevent overstimulation of the immune response, acting as an adaptation in grey seals to resist IAV-associated mortality. "],["loc-gene-identification.html", "2 LOC Gene Identification 2.1 Libraries 2.2 Load data 2.3 Extract gene sequences 2.4 Blast sequences 2.5 Process BLASTn Results 2.6 Combine with prior LOC ID master list 2.7 Update &amp; tidy gene count matrices 2.8 Hemoglobin", " 2 LOC Gene Identification 2.1 Libraries library(tidyverse) library(Biostrings) library(BSgenome) library(gridExtra) 2.2 Load data txome_genes &lt;- read.table(&quot;Input Files/txome_genecounts.txt&quot;) %&gt;% rownames_to_column(var=&quot;gene&quot;) txome_map &lt;- read.table(&quot;Input Files/txome_transcript-gene_map.txt&quot;, header=1) txome_seqs &lt;- readDNAStringSet( &quot;C:/Users/Christina/OneDrive - University of Maine System/hg-rna/txome_denovo_GG.okay_trim.txt&quot;, format = &quot;fasta&quot;, seek.first.rec = TRUE, use.names = TRUE) gnome_genes &lt;- read.table(&quot;Input Files/gnome_genecounts.txt&quot;) %&gt;% rownames_to_column(var=&quot;gene&quot;) gnome_map &lt;- read.table(&quot;Input Files/gnome_transcript-gene_map.txt&quot;, header=1) gnome_seqs &lt;- readDNAStringSet( &quot;C:/Users/Christina/OneDrive - University of Maine System/hg-rna/gnome_Transcript_Seqs_exons_trim.txt&quot;, format = &quot;fasta&quot;, seek.first.rec = TRUE, use.names = TRUE) meta &lt;- read.csv(&quot;Input Files/metadata.csv&quot;) %&gt;% mutate(rna=ifelse(disease_stage==&quot;acute&quot;, &quot;Virus+&quot;, ifelse(disease_stage==&quot;peak&quot;, &quot;Virus+&quot;, &quot;Virus-&quot;))) 2.3 Extract gene sequences 2.3.1 Extract LOC genes from gene count matrices txome_loc &lt;- txome_genes %&gt;% select(gene) %&gt;% filter(str_detect(gene, &quot;^LOC&quot;)) gnome_loc &lt;- gnome_genes %&gt;% select(gene) %&gt;% filter(str_detect(gene, &quot;^LOC&quot;)) 2.3.2 Extract transcript IDs for all sequence IDs txome_loc_txpts &lt;- merge(txome_loc, txome_map, by.x=&quot;gene&quot;, by.y=&quot;gene_id&quot;, all.x=TRUE) gnome_loc_txpts &lt;- merge(gnome_loc, gnome_map, by.x=&quot;gene&quot;, by.y=&quot;gene_id&quot;, all.x=TRUE) 2.3.3 Extract transcript sequences for blast txome_loc_seq &lt;- getSeq(x = txome_seqs, txome_loc_txpts$transcript_id) gnome_loc_seq &lt;- getSeq(x = gnome_seqs, gnome_loc_txpts$transcript_id) 2.3.4 Export sequences writeXStringSet(txome_loc_seq, &quot;Output Files/txome_loc_seqs.fasta&quot;) writeXStringSet(gnome_loc_seq, &quot;Output Files/gnome_loc_seqs.fasta&quot;) 2.4 Blast sequences blastn against nt database with code: blastn -db nt -query input.fasta -max_target_seqs 2 -max_hsps 1 -evalue 0.01 -perc_identity 80 -outfmt “10 std qcovs qcovhsp stitle” -out output.csv -remote 2.5 Process BLASTn Results 2.5.1 Transcriptome 2.5.1.1 Read in &amp; tidy results txome_blast &lt;- read.table(&quot;Input Files/txome_loc_blastresults.csv&quot;, header=FALSE, sep=&quot;,&quot;, col.names=paste0(&quot;V&quot;, seq_len(24)), fill=TRUE, quote=&quot;&quot;) %&gt;% mutate_all(as.character) %&gt;% mutate_if(is.character, ~replace_na(.,&quot;&quot;)) %&gt;% mutate(V15=paste0(V15, V16, V17, V18, V19, V20, V21, V22, V23, V24)) %&gt;% select(!c(16:24)) %&gt;% setNames(c(&quot;transcript_id&quot;, &quot;sseqid&quot;, &quot;pident&quot;, &quot;length&quot;, &quot;mismatch&quot;, &quot;gapopen&quot;, &quot;qstart&quot;, &quot;qend&quot;, &quot;sstart&quot;, &quot;send&quot;, &quot;evalue&quot;, &quot;bitscore&quot;, &quot;qcovs&quot;, &quot;qcovhsp&quot;, &quot;stitle&quot;)) %&gt;% select(transcript_id, pident, qcovs, evalue, stitle) %&gt;% left_join(., txome_map) 2.5.1.2 Prepare output dataframes txome_geneassignments &lt;- data.frame(matrix(ncol = 6, nrow = 0)) %&gt;% setNames(c(&quot;transcript_id&quot;, &quot;pident&quot;, &quot;qcovs&quot;, &quot;evalue&quot;, &quot;stitle&quot;, &quot;gene_id&quot;)) txome_needcheck &lt;- data.frame(matrix(ncol = 6, nrow = 0)) %&gt;% setNames(c(&quot;transcript_id&quot;, &quot;pident&quot;, &quot;qcovs&quot;, &quot;evalue&quot;, &quot;stitle&quot;, &quot;gene_id&quot;)) 2.5.1.3 Loop for (i in 1:nrow(txome_loc)) { data &lt;- txome_blast[txome_blast$gene_id==txome_loc[i,1],] # Remove lines with vague terms in stitle title data &lt;- data[grep(&quot;uncharacterized&quot;, data$stitle, invert = TRUE),] data &lt;- data[grep(&quot;genome assembly&quot;, data$stitle, invert = TRUE),] data &lt;- data[grep(&quot; chromosome&quot;, data$stitle, invert=TRUE),] if (nrow(data)==0) { next } # Extract gene names in () for (i in 1:nrow(data)) { stitle &lt;- data[i,]$stitle {if(grepl(&#39;\\\\(&#39;, stitle)) { newstitle &lt;- str_extract(stitle, &quot;(?&lt;=\\\\()([^()]*?)(?=\\\\)[^()]*$)&quot;) } else{newstitle &lt;- NA} } data[i,]$stitle &lt;- newstitle } # Select first stitle for each ID in transcript data &lt;- data[ !duplicated(data$transcript_id), ] # Select only unique stitles for each gene (across transcripts) data &lt;- data %&gt;% distinct(stitle, .keep_all=TRUE) # Exclude rows with irrelevant gene names (NA, LOCs, long names) data &lt;- data %&gt;% filter(!stitle==&quot;NA&quot; &amp; !stitle==&quot;&quot; &amp; !grepl(&quot;^LOC&quot;, stitle) &amp; !nchar(stitle) &gt; 20) # If there is one row left of the dataframe, save to a list {if((nrow(data))==1) { txome_geneassignments &lt;- rbind(data, txome_geneassignments) } else{txome_needcheck &lt;- rbind(data, txome_needcheck)} } # End Loop } 2.5.2 Genome 2.5.2.1 Read in &amp; configure gnome blastn files gnome_blast &lt;- read.csv(&quot;Input Files/gnome_loc_blastresults.csv&quot;, header=FALSE, sep=&quot;,&quot;, col.names=paste0(&quot;V&quot;, seq_len(21)), fill=TRUE, quote=&quot;&quot;) %&gt;% mutate_all(as.character) %&gt;% mutate_if(is.character, ~replace_na(.,&quot;&quot;)) %&gt;% mutate(V15=paste0(V15, V16, V17, V18, V19, V20, V21)) %&gt;% select(!c(16:21)) %&gt;% setNames(c(&quot;transcript_id&quot;, &quot;sseqid&quot;, &quot;pident&quot;, &quot;length&quot;, &quot;mismatch&quot;, &quot;gapopen&quot;, &quot;qstart&quot;, &quot;qend&quot;, &quot;sstart&quot;, &quot;send&quot;, &quot;evalue&quot;, &quot;bitscore&quot;, &quot;qcovs&quot;, &quot;qcovhsp&quot;, &quot;stitle&quot;)) %&gt;% select(transcript_id, pident, qcovs, evalue, stitle) %&gt;% left_join(., gnome_map) 2.5.2.2 Prepare output dataframes gnome_geneassignments &lt;- data.frame(matrix(ncol = 6, nrow = 0)) %&gt;% setNames(c(&quot;transcript_id&quot;, &quot;pident&quot;, &quot;qcovs&quot;, &quot;evalue&quot;, &quot;stitle&quot;, &quot;gene_id&quot;)) gnome_needcheck &lt;- data.frame(matrix(ncol = 6, nrow = 0)) %&gt;% setNames(c(&quot;transcript_id&quot;, &quot;pident&quot;, &quot;qcovs&quot;, &quot;evalue&quot;, &quot;stitle&quot;, &quot;gene_id&quot;)) 2.5.2.3 Loop for (i in 1:nrow(gnome_loc)) { data &lt;- gnome_blast[gnome_blast$gene_id==gnome_loc[i,1],] # Remove lines with vague terms in stitle title data &lt;- data[grep(&quot;uncharacterized&quot;, data$stitle, invert = TRUE),] data &lt;- data[grep(&quot;genome assembly&quot;, data$stitle, invert = TRUE),] data &lt;- data[grep(&quot; chromosome&quot;, data$stitle, invert=TRUE),] if (nrow(data)==0) { next } # Extract gene names in () for (i in 1:nrow(data)) { stitle &lt;- data[i,]$stitle {if(grepl(&#39;\\\\(&#39;, stitle)) { newstitle &lt;- str_extract(stitle, &quot;(?&lt;=\\\\()([^()]*?)(?=\\\\)[^()]*$)&quot;) } else{newstitle &lt;- NA} } data[i,]$stitle &lt;- newstitle } # Select first stitle for each ID in transcript data &lt;- data[ !duplicated(data$transcript_id), ] # Select only unique stitles for each gene (across transcripts) data &lt;- data %&gt;% distinct(stitle, .keep_all=TRUE) # Exclude rows with irrelevant gene names (NA, LOCs, long names) data &lt;- data %&gt;% filter(!stitle==&quot;NA&quot; &amp; !stitle==&quot;&quot; &amp; !grepl(&quot;^LOC&quot;, stitle) &amp; !nchar(stitle) &gt; 20 &amp; pident &gt; 89) # If there is one row left of the dataframe, save to a list {if((nrow(data))==1) { gnome_geneassignments &lt;- rbind(data, gnome_geneassignments) } else{gnome_needcheck &lt;- rbind(data, gnome_needcheck)} } # End Loop } 2.5.3 Combine Transcriptome &amp; Genome Blast Results Note: For duplicates, only using genes for which both T &amp; G blasts yielded the same result (distinct()) blast_all &lt;- bind_rows(txome_geneassignments, gnome_geneassignments) %&gt;% select(stitle, gene_id) %&gt;% distinct() %&gt;% distinct(gene_id, .keep_all=TRUE) %&gt;% mutate(stitle=toupper(stitle)) 2.6 Combine with prior LOC ID master list LOCs identified through blastn &amp; manually through extracting NCBI’s description null_loc &lt;- read.csv(&quot;Input Files/TG_nullset_masterLOC.csv&quot;) %&gt;% mutate(symbol=ifelse(gene==&quot;LOC118528561&quot;, &quot;ANKRD13A&quot;, symbol)) %&gt;% filter(!grepl(&#39;LOC&#39;, symbol)) loc_update &lt;- merge(blast_all, null_loc, by.x=&quot;gene_id&quot;, by.y=&quot;gene&quot;, all=TRUE) %&gt;% mutate_all(~replace(., is.na(.), 0)) for (i in 1:nrow(loc_update)) { if(loc_update$stitle[i]==&quot;0&quot; &amp;&amp; !loc_update$symbol[i]==&quot;0&quot;) { loc_update$stitle[i] &lt;- loc_update$symbol[i] } else{loc_update$stitle[i] &lt;- loc_update$stitle[i]} } loc_update &lt;- loc_update %&gt;% select(!symbol) write.csv(loc_update, &quot;Output Files/rna_locid_all.csv&quot;) 2.7 Update &amp; tidy gene count matrices Replace LOCs with new IDs &amp; aggregate gene counts txome_genes_update &lt;- txome_genes %&gt;% mutate(gene=ifelse(gene %in% loc_update$gene_id, loc_update[match(gene, loc_update$gene_id),2], gene)) %&gt;% aggregate(. ~ gene, sum) gnome_genes_update &lt;- gnome_genes %&gt;% mutate(gene=ifelse(gene %in% loc_update$gene_id, loc_update[match(gene, loc_update$gene_id),2], gene)) %&gt;% aggregate(. ~ gene, sum) 2.8 Hemoglobin 2.8.1 Extract hemoglobin genes Hemoglobin genes identified from Harrington et al. 2020 (suppl table 1) and from NCBI gray seal gene search for “hemoglobin” hemoglobin_genes &lt;- c(&quot;HBA1&quot;, &quot;HBA2&quot;, &quot;HBB&quot;, &quot;HBBP1&quot;, &quot;HBD&quot;, &quot;HBE1&quot;, &quot;HBG1&quot;, &quot;HBG2&quot;, &quot;HBM&quot;, &quot;HBQ1&quot;, &quot;HBZ&quot;, &quot;HBZP1&quot;,&quot;AHSP&quot;, &quot;RHEX&quot;, &quot;LOC118528782&quot;, &quot;LOC118528783&quot;, &quot;LOC118528784&quot;, &quot;LOC118528786&quot;, &quot;LOC118528797&quot;, &quot;LOC118530184&quot;, &quot;LOC118530187&quot;) 2.8.2 Prop of total gene counts t_all &lt;- txome_genes_update %&gt;% pivot_longer(!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% group_by(sample) %&gt;% summarise(total=sum(expression)) g_all &lt;- gnome_genes_update %&gt;% pivot_longer(!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% group_by(sample) %&gt;% summarise(total=sum(expression)) t_hemo &lt;- txome_genes_update %&gt;% filter(gene %in% hemoglobin_genes) %&gt;% pivot_longer(!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% group_by(sample) %&gt;% summarise(hemoglobin=sum(expression)) %&gt;% merge(., t_all, by=&quot;sample&quot;) %&gt;% mutate(Transcriptome = (hemoglobin/total)*100) g_hemo &lt;- gnome_genes_update %&gt;% filter(gene %in% hemoglobin_genes) %&gt;% pivot_longer(!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% group_by(sample) %&gt;% summarise(hemoglobin=sum(expression)) %&gt;% merge(., g_all, by=&quot;sample&quot;) %&gt;% mutate(Genome = (hemoglobin/total)*100) hemo_plotdata &lt;- merge(t_hemo, g_hemo, by=&quot;sample&quot;) %&gt;% select(sample, Transcriptome, Genome) %&gt;% pivot_longer(!sample, names_to=&quot;approach&quot;, values_to=&quot;prop&quot;) %&gt;% merge(., meta, by=&quot;sample&quot;) %&gt;% mutate(approach=factor(approach, levels=c(&quot;Transcriptome&quot;, &quot;Genome&quot;)), disease_stage=factor(disease_stage, levels=c(&quot;control&quot;, &quot;acute&quot;, &quot;peak&quot;, &quot;late&quot;)), rna=factor(rna, levels=c(&quot;Virus-&quot;, &quot;Virus+&quot;))) hemo_plot1 &lt;- ggplot(hemo_plotdata, aes(x=rna, y=prop)) + geom_boxplot() + facet_grid(~approach) + labs(x=&quot;Influenza Viral RNA Status&quot;, y=NULL) + theme_bw() + theme(panel.grid=element_blank()) hemo_plot2 &lt;- ggplot(hemo_plotdata, aes(x=disease_stage, y=prop)) + geom_boxplot() + facet_grid(~approach) + labs(x=&quot;Influenza Stage&quot;, y=NULL) + scale_x_discrete(labels=c(&quot;Control&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;)) + theme_bw() + theme(panel.grid=element_blank()) hemo_plot &lt;- grid.arrange(hemo_plot1, hemo_plot2, ncol=1, left=&quot;Proportion of Hemoglobin Reads&quot;) ggsave(&quot;Figures/supplemental_hemoplot.jpg&quot;, hemo_plot, width=5, height=6, units=&quot;in&quot;) 2.8.3 Remove hemoglobin genes txome_hemo &lt;- txome_genes_update %&gt;% filter(!gene %in% hemoglobin_genes) gnome_hemo &lt;- gnome_genes_update %&gt;% filter(!gene %in% hemoglobin_genes) 2.8.4 Export new gene count matrices write.csv(txome_hemo, &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, row.names=FALSE) write.csv(gnome_hemo, &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, row.names=FALSE) "],["male-v-female-dge.html", "3 Male v Female DGE 3.1 Transcriptome - edgeR 3.2 Genome - edgeR", " 3 Male v Female DGE 3.1 Transcriptome - edgeR 3.1.1 Libraries library(dplyr) library(edgeR) library(ggfortify) library(gplots) 3.1.2 Data SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) Raw &lt;- read.csv(file = &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) 3.1.3 Differential Gene Expression Analysis 3.1.3.1 DGElist DGE &lt;- DGEList(counts=Raw, group=SampleInfo$sex) DGE$samples ## group lib.size norm.factors ## Hg11513 female 2842670 1 ## Hg1354 female 3618804 1 ## Hg1403 female 6100522 1 ## Hg1404 female 3533565 1 ## Hg908b female 5871501 1 ## Hg1274 male 3026478 1 ## Hg1407 male 4238107 1 ## Hg1256 female 4573826 1 ## Hg1265 unknown 2979315 1 ## Hg1288 female 2823770 1 ## Hg266 female 3543715 1 ## Hg1402 male 6560784 1 ## Hg270 male 3772971 1 ## Hg1261 female 1943267 1 ## Hg1272 female 4708624 1 ## Hg1380 female 3204059 1 ## Hg1387 female 4158987 1 ## Hg1397 female 4343361 1 ## Hg1421 female 4508013 1 ## Hg1528 female 2894695 1 ## Hg861a female 5407908 1 ## Hg862a female 4075756 1 ## Hg934 female 3956989 1 ## Hg1262 female 4653972 1 ## Hg1273 female 5011031 1 ## Hg1282 female 2951861 1 ## Hg1283 female 4658064 1 ## Hg1286 female 4284639 1 ## Hg1351 female 1430600 1 ## Hg1516 female 4688415 1 ## Hg1527 female 3763080 1 3.1.3.2 Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] length(rownames(DGE$counts)) ## [1] 13093 3.1.3.3 Normalize based on library sizes DGE &lt;- calcNormFactors(DGE) 3.1.3.4 Estimate Dispersion On average, the true abundance for each gene can vary up or down by xx% (BCV) between replicates Differentially expressed = needs to vary by more than xx% # Overall common dispersion DGE &lt;- estimateCommonDisp(DGE, verbose = TRUE) ## Disp = 0.18267 , BCV = 0.4274 # Dispersion trend based on gene abundance DGE &lt;- estimateTrendedDisp(DGE) # Tagwise dispersion - allows different dispersion for each gene DGE &lt;- estimateTagwiseDisp(DGE, verbose = TRUE) ## Using interpolation to estimate tagwise dispersion. plotBCV(DGE) 3.1.4 Exploratory Plots 3.1.4.1 Normalized counts CPM &lt;- cpm(DGE, normalized.lib.sizes = TRUE, log = TRUE) %&gt;% data.frame() boxplot(CPM, las = 2, ylab = &quot;log2 CPM&quot;, main = &quot;Normalized Data&quot;) 3.1.4.2 Cluster dendrogram Males = 1274, 1407, 1402, 270 Unknown = 1265 RawDist &lt;- dist(t(CPM), method = &quot;euclidean&quot;) plot(hclust(RawDist, method = &quot;average&quot;), xlab=&quot;Average Euclidean Distance&quot;) 3.1.4.3 PCA Plots PCA &lt;- prcomp(t(RawDist)) # PCs 1-2 autoplot(PCA, data=SampleInfo, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) # PCs 3-4 autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) 3.1.5 Test for DEGs et &lt;- exactTest(DGE, pair=c(&quot;male&quot;, &quot;female&quot;)) 3.1.5.1 Select DEGs by fold change &amp; pvalue Uncorrected p &lt; 0.05 log2FC &gt; 1 (2-fold change) results &lt;- topTags(et, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) nrow(results) ## [1] 198 write.csv(results, &quot;Output Files/txome_sex_edgeR_degs.csv&quot;) 3.1.5.2 DEG Heatmap jpeg(&quot;Figures/transcriptome_sex_edgeR_heatmap.jpg&quot;, width=9, height=9, units=&#39;in&#39;, res=900) heatmap.2(as.matrix(CPM[rownames(CPM) %in% rownames(results), ]), scale = &quot;row&quot;, trace = &quot;none&quot;, margins=c(5,8), cexRow = 0.5, labRow=FALSE) dev.off() ## png ## 2 3.2 Genome - edgeR 3.2.1 Libraries library(dplyr) library(edgeR) library(ggfortify) library(gplots) 3.2.2 Data SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) Raw &lt;- read.csv(file = &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) 3.2.3 Differential Gene Expression Analysis 3.2.3.1 DGElist DGE &lt;- DGEList(counts=Raw, group=SampleInfo$sex) DGE$samples ## group lib.size norm.factors ## Hg11513 female 3894792 1 ## Hg1354 female 4928497 1 ## Hg1403 female 7571672 1 ## Hg1404 female 4696012 1 ## Hg908b female 7291936 1 ## Hg1274 male 3984216 1 ## Hg1407 male 5400490 1 ## Hg1256 female 5728747 1 ## Hg1265 unknown 3851318 1 ## Hg1288 female 3740785 1 ## Hg266 female 4414778 1 ## Hg1402 male 8016958 1 ## Hg270 male 4804685 1 ## Hg1261 female 2938200 1 ## Hg1272 female 6665010 1 ## Hg1380 female 4719984 1 ## Hg1387 female 5562169 1 ## Hg1397 female 5747795 1 ## Hg1421 female 5958925 1 ## Hg1528 female 3655704 1 ## Hg861a female 6717503 1 ## Hg862a female 5273447 1 ## Hg934 female 5089019 1 ## Hg1262 female 5954066 1 ## Hg1273 female 6511255 1 ## Hg1282 female 3997507 1 ## Hg1283 female 5907705 1 ## Hg1286 female 5521600 1 ## Hg1351 female 2230773 1 ## Hg1516 female 6012343 1 ## Hg1527 female 4895128 1 3.2.3.2 Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] length(rownames(DGE$counts)) ## [1] 14063 3.2.3.3 Normalize based on library sizes DGE &lt;- calcNormFactors(DGE) 3.2.3.4 Estimate Dispersion On average, the true abundance for each gene can vary up or down by xx% (BCV) between replicates Differentially expressed = needs to vary by more than xx% # Overall common dispersion DGE &lt;- estimateCommonDisp(DGE, verbose = TRUE) ## Disp = 0.22568 , BCV = 0.4751 # Dispersion trend based on gene abundance DGE &lt;- estimateTrendedDisp(DGE) # Tagwise dispersion - allows different dispersion for each gene DGE &lt;- estimateTagwiseDisp(DGE, verbose = TRUE) ## Using interpolation to estimate tagwise dispersion. plotBCV(DGE) 3.2.4 Exploratory Plots 3.2.4.1 Normalized counts CPM &lt;- cpm(DGE, normalized.lib.sizes = TRUE, log = TRUE) %&gt;% data.frame() boxplot(CPM, las = 2, ylab = &quot;log2 CPM&quot;, main = &quot;Normalized Data&quot;) 3.2.4.2 Cluster dendrogram Males = 1274, 1407, 1402, 270 Unknown = 1265 RawDist &lt;- dist(t(CPM), method = &quot;euclidean&quot;) plot(hclust(RawDist, method = &quot;average&quot;), xlab=&quot;Average Euclidean Distance&quot;) 3.2.4.3 PCA Plots PCA &lt;- prcomp(t(RawDist)) # PCs 1-2 autoplot(PCA, data=SampleInfo, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) # PCs 3-4 autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) 3.2.5 Test for DEGs et &lt;- exactTest(DGE, pair=c(&quot;male&quot;, &quot;female&quot;)) 3.2.5.1 Select DEGs by fold change &amp; pvalue Uncorrected p &lt; 0.05 log2FC &gt; 1 (2-fold change) results &lt;- topTags(et, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) nrow(results) ## [1] 343 write.csv(results, &quot;Output Files/gnome_sex_edgeR_degs.csv&quot;) 3.2.5.2 DEG Heatmap jpeg(&quot;Figures/genome_sex_edgeR_heatmap.jpg&quot;, width=9, height=9, units=&#39;in&#39;, res=900) heatmap.2(as.matrix(CPM[rownames(CPM) %in% rownames(results), ]), scale = &quot;row&quot;, trace = &quot;none&quot;, margins=c(5,8), cexRow = 0.5, labRow=FALSE) dev.off() ## png ## 2 "],["virus-vs-virus--dge.html", "4 Virus+ vs Virus- DGE 4.1 Transcriptome - edgeR - Females 4.2 Genome - edgeR - Females 4.3 Transcriptome Null Set - edgeR - Females 4.4 Genome Null Set - edgeR - Females 4.5 Refine GO/KEGG", " 4 Virus+ vs Virus- DGE 4.1 Transcriptome - edgeR - Females 4.1.1 Libraries library(tidyverse) library(edgeR) library(ggfortify) library(kableExtra) library(knitr) library(WebGestaltR) 4.1.2 Data SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(RNA=ifelse(disease_stage==&quot;acute&quot; | disease_stage==&quot;peak&quot;, &quot;virus+&quot;, &quot;virus-&quot;)) %&gt;% filter(!sex==&quot;male&quot;) #Raw RSEM Gene Counts Raw &lt;- read.csv(file = &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 4.1.3 Differential Gene Expression Analysis 4.1.3.1 DGElist #Create DGE Object with counts &amp; sample groups DGE &lt;- DGEList(counts = Raw, group = SampleInfo$RNA) #Check DGE Object Samples, Groups, Lib Size, and Norm Factor DGE$samples ## group lib.size norm.factors ## Hg11513 virus+ 2842670 1 ## Hg1354 virus+ 3618804 1 ## Hg1403 virus+ 6100522 1 ## Hg1404 virus+ 3533565 1 ## Hg908b virus+ 5871501 1 ## Hg1256 virus+ 4573826 1 ## Hg1265 virus+ 2979315 1 ## Hg1288 virus+ 2823770 1 ## Hg266 virus+ 3543715 1 ## Hg1261 virus- 1943267 1 ## Hg1272 virus- 4708624 1 ## Hg1380 virus- 3204059 1 ## Hg1387 virus- 4158987 1 ## Hg1397 virus- 4343361 1 ## Hg1421 virus- 4508013 1 ## Hg1528 virus- 2894695 1 ## Hg861a virus- 5407908 1 ## Hg862a virus- 4075756 1 ## Hg934 virus- 3956989 1 ## Hg1262 virus- 4653972 1 ## Hg1273 virus- 5011031 1 ## Hg1282 virus- 2951861 1 ## Hg1283 virus- 4658064 1 ## Hg1286 virus- 4284639 1 ## Hg1351 virus- 1430600 1 ## Hg1516 virus- 4688415 1 ## Hg1527 virus- 3763080 1 4.1.3.2 Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] length(rownames(DGE$counts)) ## [1] 11387 postfilter &lt;- rownames(DGE$counts) write.table(postfilter, &quot;Output Files/txome_female_edgeR_viralRNA_postfilter.txt&quot;, row.name=FALSE, col.name=FALSE, quote=FALSE) 4.1.3.3 Normalize based on library sizes DGE &lt;- calcNormFactors(DGE) 4.1.3.4 Estimate Dispersion On average, the true abundance for each gene can vary up or down by xx% (BCV) between replicates Differentially expressed = needs to vary by more than xx% # Overall common dispersion DGE &lt;- estimateCommonDisp(DGE, verbose = TRUE) ## Disp = 0.16755 , BCV = 0.4093 # Dispersion trend based on gene abundance DGE &lt;- estimateTrendedDisp(DGE) # Tagwise dispersion - allows different dispersion for each gene DGE &lt;- estimateTagwiseDisp(DGE, verbose = TRUE) ## Using interpolation to estimate tagwise dispersion. plotBCV(DGE) 4.1.4 Exploratory Plots 4.1.4.1 Normalized counts CPM &lt;- cpm(DGE, normalized.lib.sizes = TRUE, log = TRUE) %&gt;% data.frame() boxplot(CPM, las = 2, ylab = &quot;log2 CPM&quot;, main = &quot;Normalized Data&quot;) write.csv(CPM, &quot;Output Files/txome_female_edgeR_viralRNA_normcounts.csv&quot;) 4.1.4.2 Cluster dendrogram RawDist &lt;- dist(t(CPM), method = &quot;euclidean&quot;) plot(hclust(RawDist, method = &quot;average&quot;), xlab=&quot;Average Euclidean Distance&quot;) 4.1.4.3 PCA Plots PCA &lt;- prcomp(t(RawDist)) # PCs 1-2 autoplot(PCA, data=SampleInfo, colour=&quot;RNA&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) # PCs 3-4 autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;RNA&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) 4.1.5 Test for DEGs et &lt;- exactTest(DGE, pair=c(&quot;virus-&quot;, &quot;virus+&quot;)) write.csv(et, &quot;Output Files/txome_female_edgeR_viralRNA_DGE_results.csv&quot;) 4.1.5.1 Select DEGs by fold change &amp; pvalue Uncorrected p &lt; 0.05 log2FC &gt; 1 (2-fold change) results &lt;- topTags(et, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results) ## [1] 136 write.csv(results, &quot;Output Files/txome_female_edgeR_viralRNA_DEG.csv&quot;) 4.1.5.2 Make sure genes are up/down regulated in Virus+ vs Virus- Visually compare gene expression across viral RNA status to ensure directional change is correct. CPM %&gt;% rownames_to_column(var=&quot;gene&quot;) %&gt;% filter(gene %in% results$gene) %&gt;% pivot_longer(cols=!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% mutate(RNA=ifelse(sample %in% SampleInfo$sample, SampleInfo[match(sample, SampleInfo$sample), 8], NA)) %&gt;% filter(gene %in% results$gene[1:10]) %&gt;% mutate(RNA=factor(RNA, levels=c(&quot;virus-&quot;, &quot;virus+&quot;))) %&gt;% ggplot(., aes(x=RNA, y=expression)) + geom_boxplot() + facet_wrap(~gene) 4.1.5.3 Heatmap # Add +/- to sample names to indicate IAV status sampiav &lt;- SampleInfo %&gt;% select(sample, RNA) %&gt;% mutate(sample=ifelse(RNA==&quot;virus+&quot;, paste0(sample, &quot; (+)&quot;), paste0(sample, &quot; (-)&quot;))) CPMiav &lt;- CPM %&gt;% as.data.frame() %&gt;% setNames(sampiav$sample) %&gt;% as.matrix() # Heatmap of top 100 DE genes (50 up and 50 down) topde &lt;- data.frame(rbind(slice_min(results, logFC, n=50), slice_max(results, logFC, n=50))) jpeg(filename=&quot;Figures/heatmap_top100.jpeg&quot;, width=8, height=5, units=&quot;in&quot;, res=300) heatmap.2(as.matrix(CPMiav[rownames(CPMiav) %in% topde$gene,]), scale=&quot;row&quot;, trace=&quot;none&quot;, dendrogram=&quot;column&quot;, key=FALSE, labRow=FALSE, lmat=rbind(c(4,3), c(2,1)), lwid=c(0.05,1), lhei=c(0.2, 1), margins=c(5,2.5)) dev.off() ## png ## 2 ## All genes - gene expression patterns not clear heatmap.2(as.matrix(CPMiav), scale=&quot;row&quot;, trace=&quot;none&quot;, dendrogram=&quot;column&quot;, key=FALSE, labRow=FALSE, lmat=rbind(c(4,3), c(2,1)), lwid=c(0.05,1), lhei=c(0.2, 1), colsep=c(2,5), margins=c(5,2.5)) 4.1.6 GO Enrichment Analysis 4.1.6.1 Configure Gene Lists background &lt;- rownames(CPM) up &lt;- results %&gt;% filter(logFC&gt;=1) down &lt;- results %&gt;% filter(logFC &lt; 1) 4.1.6.2 Up-regulated genes 4.1.6.2.1 Biological Process go_bp_up &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, go=&quot;bp&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.1.6.2.2 Molecular Function go_mf_up &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... ## Warning in oraEnrichment(interestGeneList, referenceGeneList, geneSet, minNum = ## minNum, : No significant gene set is identified based on FDR 0.05! 4.1.6.2.3 Cellular Component go_cc_up &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... ## Warning in oraEnrichment(interestGeneList, referenceGeneList, geneSet, minNum = ## minNum, : No significant gene set is identified based on FDR 0.05! 4.1.6.3 Down-regulated Genes 4.1.6.3.1 Biological Process go_bp_down &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, go=&quot;bp&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.1.6.3.2 Molecular Function go_mf_down &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, go=&quot;mf&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.1.6.3.3 Cellular Component go_cc_down &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, go=&quot;cc&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.1.6.4 Save Results go &lt;- bind_rows(go_bp_down, go_bp_up, go_cc_down, go_mf_down) go &lt;- go %&gt;% select(!link &amp; !overlapId) go %&gt;% mutate(across(where(is.numeric), \\(x) round(x, digits=5))) %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;, font_size=9) geneSet description size overlap expect enrichmentRatio pValue FDR userId direction go GO:0045087 innate immune response 491 26 5.07520 5.12295 0.00000 0.00000 IFI6;C1QB;NR1H3;ACTG1;C1QC;C2;C1QA;NECTIN2;CFB;CFD;HLA-DQA1;MNDA;UBC;APOBEC3G;DHX58;RPL13A;APOE;MX2;AXL;SOCS1;UBA52;ISG15;IFIT3;AIF1;MX1;RSAD2 down bp GO:0002253 activation of immune response 370 18 3.82449 4.70651 0.00000 0.00009 C1QB;NR1H3;ACTG1;C1QC;C2;C1QA;RPS3;NECTIN2;CD79A;CFB;ACTB;CFD;HLA-DQA1;MNDA;UBC;DHX58;UBA52;RSAD2 down bp GO:0050778 positive regulation of immune response 476 20 4.92016 4.06491 0.00000 0.00010 C1QB;NR1H3;ACTG1;C1QC;C2;C1QA;RPS3;NECTIN2;HLX;CD79A;CFB;IDO1;ACTB;CFD;HLA-DQA1;MNDA;UBC;DHX58;UBA52;RSAD2 down bp GO:0072376 protein activation cascade 38 7 0.39279 17.82143 0.00000 0.00012 C1QB;C1QC;C2;GP1BB;C1QA;CFB;CFD down bp GO:0006956 complement activation 27 6 0.27908 21.49887 0.00000 0.00026 C1QB;C1QC;C2;C1QA;CFB;CFD down bp GO:0019221 cytokine-mediated signaling pathway 458 18 4.73410 3.80220 0.00000 0.00070 IL32;IFI6;NR1H3;RACK1;HLA-DQA1;UBC;MPL;HSPA8;CARD14;MX2;AXL;SOCS1;UBA52;ISG15;COL1A2;IFIT3;MX1;RSAD2 down bp GO:0019058 viral life cycle 208 12 2.14998 5.58144 0.00000 0.00101 ITGB5;NECTIN2;UBC;HSPA8;APOBEC3G;APOE;AXL;UBA52;ISG15;DDX5;MX1;RSAD2 down bp GO:0006614 SRP-dependent cotranslational protein targeting to membrane 83 8 0.85793 9.32481 0.00000 0.00117 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12 down bp GO:0031347 regulation of defense response 438 17 4.52737 3.75494 0.00000 0.00117 C1QB;NR1H3;C1QC;C2;C1QA;NECTIN2;GPSM3;CFB;IDO1;MNDA;UBC;APOBEC3G;DHX58;APOE;SOCS1;UBA52;RSAD2 down bp GO:0030449 regulation of complement activation 22 5 0.22740 21.98748 0.00000 0.00123 C1QB;C1QC;C2;C1QA;CFB down bp GO:0006613 cotranslational protein targeting to membrane 87 8 0.89927 8.89608 0.00000 0.00129 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12 down bp GO:2000257 regulation of protein activation cascade 23 5 0.23774 21.03150 0.00000 0.00129 C1QB;C1QC;C2;C1QA;CFB down bp GO:0045047 protein targeting to ER 93 8 0.96129 8.32214 0.00000 0.00187 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12 down bp GO:0072599 establishment of protein localization to endoplasmic reticulum 96 8 0.99230 8.06207 0.00001 0.00220 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12 down bp GO:0006958 complement activation, classical pathway 13 4 0.13437 29.76766 0.00001 0.00239 C1QB;C1QC;C2;C1QA down bp GO:0006413 translational initiation 167 10 1.72619 5.79311 0.00001 0.00254 RPS26;RPL36;RPS3;RPS14;ATF4;RPL13A;EIF4G2;RPL14;UBA52;RPS12 down bp GO:0002920 regulation of humoral immune response 31 5 0.32043 15.60402 0.00001 0.00407 C1QB;C1QC;C2;C1QA;CFB down bp GO:0000184 nuclear-transcribed mRNA catabolic process, nonsense-mediated decay 108 8 1.11634 7.16629 0.00001 0.00407 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12 down bp GO:0060337 type I interferon signaling pathway 53 6 0.54783 10.95225 0.00002 0.00407 IFI6;MX2;ISG15;IFIT3;MX1;RSAD2 down bp GO:0071357 cellular response to type I interferon 53 6 0.54783 10.95225 0.00002 0.00407 IFI6;MX2;ISG15;IFIT3;MX1;RSAD2 down bp GO:0006612 protein targeting to membrane 147 9 1.51946 5.92316 0.00002 0.00472 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12;RTP5 down bp GO:0034340 response to type I interferon 57 6 0.58918 10.18367 0.00002 0.00566 IFI6;MX2;ISG15;IFIT3;MX1;RSAD2 down bp GO:0050866 negative regulation of cell activation 118 8 1.21970 6.55898 0.00003 0.00613 BPI;NR1H3;HLX;IDO1;MNDA;APOE;AXL;SOCS1 down bp GO:0070972 protein localization to endoplasmic reticulum 119 8 1.23004 6.50386 0.00003 0.00625 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12 down bp GO:0006959 humoral immune response 93 7 0.96129 7.28187 0.00005 0.00936 BPI;C1QB;C1QC;C2;C1QA;CFB;CFD down bp GO:0045069 regulation of viral genome replication 65 6 0.67187 8.93030 0.00005 0.01010 HSPA8;APOBEC3G;ISG15;DDX5;MX1;RSAD2 down bp GO:0098542 defense response to other organism 252 11 2.60479 4.22299 0.00005 0.01010 BPI;IFI6;BATF2;CEBPE;APOBEC3G;DHX58;MX2;ISG15;IFIT3;MX1;RSAD2 down bp GO:0050792 regulation of viral process 130 8 1.34374 5.95353 0.00006 0.01010 NECTIN2;HSPA8;APOBEC3G;APOE;ISG15;DDX5;MX1;RSAD2 down bp GO:1903900 regulation of viral life cycle 100 7 1.03365 6.77214 0.00007 0.01285 NECTIN2;HSPA8;APOBEC3G;ISG15;DDX5;MX1;RSAD2 down bp GO:0002455 humoral immune response mediated by circulating immunoglobulin 23 4 0.23774 16.82520 0.00008 0.01368 C1QB;C1QC;C2;C1QA down bp GO:0006402 mRNA catabolic process 270 11 2.79084 3.94146 0.00010 0.01646 RPS26;RPL36;RPS3;RPS14;UBC;HSPA8;RPL13A;RPL14;UBA52;RPS12;DDX5 down bp GO:0002695 negative regulation of leukocyte activation 106 7 1.09567 6.38881 0.00011 0.01670 BPI;NR1H3;HLX;IDO1;MNDA;AXL;SOCS1 down bp GO:0000956 nuclear-transcribed mRNA catabolic process 183 9 1.89157 4.75795 0.00011 0.01670 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12;DDX5 down bp GO:0002673 regulation of acute inflammatory response 47 5 0.48581 10.29201 0.00012 0.01711 C1QB;C1QC;C2;C1QA;CFB down bp GO:0043903 regulation of symbiosis, encompassing mutualism through parasitism 146 8 1.50912 5.30109 0.00013 0.01831 NECTIN2;HSPA8;APOBEC3G;APOE;ISG15;DDX5;MX1;RSAD2 down bp GO:0030168 platelet activation 112 7 1.15768 6.04656 0.00015 0.02091 ACTG1;GP1BB;ACTB;MPL;APOE;AXL;COL1A2 down bp GO:0009636 response to toxic substance 283 11 2.92522 3.76040 0.00015 0.02091 G6PD;RPS3;RACK1;EEF2;ACTB;PCGF2;ATF4;APOE;AXL;UBA52;TXNIP down bp GO:0051607 defense response to virus 151 8 1.56081 5.12556 0.00016 0.02130 IFI6;APOBEC3G;DHX58;MX2;ISG15;IFIT3;MX1;RSAD2 down bp GO:0002757 immune response-activating signal transduction 338 12 3.49372 3.43473 0.00018 0.02301 NR1H3;ACTG1;RPS3;NECTIN2;CD79A;ACTB;HLA-DQA1;MNDA;UBC;DHX58;UBA52;RSAD2 down bp GO:0010608 posttranscriptional regulation of gene expression 392 13 4.05189 3.20838 0.00019 0.02336 RPS3;RACK1;EEF2;RPS14;EIF5A;UBC;NCL;HSPA8;ATF4;RPL13A;EIF4G2;UBA52;DDX5 down bp GO:0006401 RNA catabolic process 292 11 3.01825 3.64450 0.00020 0.02481 RPS26;RPL36;RPS3;RPS14;UBC;HSPA8;RPL13A;RPL14;UBA52;RPS12;DDX5 down bp GO:0090150 establishment of protein localization to membrane 245 10 2.53243 3.94877 0.00021 0.02517 RPS26;RPL36;RPS3;RACK1;RPS14;RPL13A;RPL14;UBA52;RPS12;RTP5 down bp GO:0019079 viral genome replication 85 6 0.87860 6.82905 0.00024 0.02765 HSPA8;APOBEC3G;ISG15;DDX5;MX1;RSAD2 down bp GO:0070613 regulation of protein processing 57 5 0.58918 8.48639 0.00029 0.03326 C1QB;C1QC;C2;C1QA;CFB down bp GO:0002697 regulation of immune effector process 256 10 2.64613 3.77910 0.00030 0.03346 C1QB;C1QC;C2;C1QA;NECTIN2;HLX;CFB;APOBEC3G;DHX58;RSAD2 down bp GO:0050727 regulation of inflammatory response 210 9 2.17066 4.14621 0.00031 0.03374 C1QB;NR1H3;C1QC;C2;C1QA;GPSM3;CFB;IDO1;APOE down bp GO:0002764 immune response-regulating signaling pathway 360 12 3.72113 3.22483 0.00032 0.03415 NR1H3;ACTG1;RPS3;NECTIN2;CD79A;ACTB;HLA-DQA1;MNDA;UBC;DHX58;UBA52;RSAD2 down bp GO:1903317 regulation of protein maturation 59 5 0.60985 8.19872 0.00034 0.03466 C1QB;C1QC;C2;C1QA;CFB down bp GO:0050865 regulation of cell activation 363 12 3.75214 3.19818 0.00034 0.03466 BPI;NR1H3;RPS3;NECTIN2;HLX;IDO1;MNDA;MPL;APOE;AXL;SOCS1;AIF1 down bp GO:0045071 negative regulation of viral genome replication 33 4 0.34110 11.72665 0.00035 0.03466 APOBEC3G;ISG15;MX1;RSAD2 down bp GO:0007596 blood coagulation 214 9 2.21200 4.06871 0.00036 0.03466 ACTG1;GP1BB;USF1;ACTB;MPL;HMG20B;APOE;AXL;COL1A2 down bp GO:0035455 response to interferon-alpha 14 3 0.14471 20.73105 0.00036 0.03466 MX2;AXL;IFIT3 down bp GO:0050817 coagulation 216 9 2.23268 4.03104 0.00038 0.03604 ACTG1;GP1BB;USF1;ACTB;MPL;HMG20B;APOE;AXL;COL1A2 down bp GO:0002683 negative regulation of immune system process 265 10 2.73916 3.65075 0.00039 0.03671 BPI;NR1H3;C1QC;HLX;IDO1;MNDA;DHX58;TSC22D3;AXL;SOCS1 down bp GO:0007599 hemostasis 218 9 2.25335 3.99406 0.00041 0.03716 ACTG1;GP1BB;USF1;ACTB;MPL;HMG20B;APOE;AXL;COL1A2 down bp GO:1901361 organic cyclic compound catabolic process 484 14 5.00285 2.79841 0.00042 0.03808 RPS26;RPL36;RPS3;RPS14;IDO1;UBC;HSPA8;APOBEC3G;RPL13A;APOE;RPL14;UBA52;RPS12;DDX5 down bp GO:0006412 translation 489 14 5.05453 2.76979 0.00047 0.04148 RPS26;RPL36;RPS3;RACK1;EEF2;RPS14;EIF5A;NCL;ATF4;RPL13A;EIF4G2;RPL14;UBA52;RPS12 down bp GO:0006605 protein targeting 324 11 3.34901 3.28455 0.00049 0.04273 RPS26;RPL36;RPS3;RPS14;UBC;HSPA8;RPL13A;RPL14;UBA52;RPS12;RTP5 down bp GO:0015701 bicarbonate transport 17 3 0.03228 92.95098 0.00000 0.01930 CA2;SLC4A1;RHAG up bp GO:0072562 blood microparticle 46 7 0.46867 14.93587 0.00000 0.00014 C1QB;ACTG1;C1QC;CFB;ACTB;HSPA8;APOE down cc GO:0022626 cytosolic ribosome 94 9 0.95772 9.39734 0.00000 0.00014 RPS26;RPL36;RPS3;RACK1;RPS14;RPL13A;RPL14;UBA52;RPS12 down cc GO:0022627 cytosolic small ribosomal subunit 35 6 0.35660 16.82571 0.00000 0.00027 RPS26;RPS3;RACK1;RPS14;UBA52;RPS12 down cc GO:0005840 ribosome 192 10 1.95619 5.11198 0.00002 0.00279 RPS26;RPL36;RPS3;RACK1;EEF2;RPS14;RPL13A;RPL14;UBA52;RPS12 down cc GO:0015935 small ribosomal subunit 58 6 0.59093 10.15345 0.00003 0.00279 RPS26;RPS3;RACK1;RPS14;UBA52;RPS12 down cc GO:0044445 cytosolic part 193 10 1.96638 5.08549 0.00003 0.00279 RPS26;RPL36;RPS3;RACK1;RPS14;HSPA8;RPL13A;RPL14;UBA52;RPS12 down cc GO:0044391 ribosomal subunit 157 9 1.59959 5.62643 0.00003 0.00281 RPS26;RPL36;RPS3;RACK1;RPS14;RPL13A;RPL14;UBA52;RPS12 down cc GO:0005581 collagen trimer 28 4 0.28528 14.02143 0.00017 0.01412 C1QB;C1QC;C1QA;COL1A2 down cc GO:0005198 structural molecule activity 407 17 4.17174 4.07504 0.00000 0.00060 RPS26;ACTG1;SORBS3;RPL36;RPS3;RACK1;DES;RPS14;ACTB;HSPB6;RPL13A;APOE;TPM2;RPL14;UBA52;RPS12;COL1A2 down mf GO:0003735 structural constituent of ribosome 133 8 1.36325 5.86834 0.00006 0.02771 RPS26;RPL36;RPS3;RPS14;RPL13A;RPL14;UBA52;RPS12 down mf GO:0004252 serine-type endopeptidase activity 74 6 0.75850 7.91037 0.00010 0.03103 C1QB;C1QC;C2;C1QA;CFB;CFD down mf write.csv(go, &quot;Output Files/txome_female_edgeR_viralRNA_go.csv&quot;, row.names=FALSE) 4.1.7 KEGG Analysis kegg &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... write.csv(kegg, &quot;Output Files/txome_female_edgeR_viralRNA_kegg.csv&quot;) 4.2 Genome - edgeR - Females 4.2.1 Libraries library(tidyverse) library(edgeR) library(ggfortify) library(kableExtra) library(knitr) library(WebGestaltR) 4.2.2 Data SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(RNA=ifelse(disease_stage==&quot;acute&quot; | disease_stage==&quot;peak&quot;, &quot;virus+&quot;, &quot;virus-&quot;)) %&gt;% filter(!sex==&quot;male&quot;) #Raw RSEM Gene Counts Raw &lt;- read.csv(file = &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 4.2.3 Differential Gene Expression Analysis 4.2.3.1 DGElist #Create DGE Object with counts &amp; sample groups DGE &lt;- DGEList(counts = Raw, group = SampleInfo$RNA) #Check DGE Object Samples, Groups, Lib Size, and Norm Factor DGE$samples ## group lib.size norm.factors ## Hg11513 virus+ 3894792 1 ## Hg1354 virus+ 4928497 1 ## Hg1403 virus+ 7571672 1 ## Hg1404 virus+ 4696012 1 ## Hg908b virus+ 7291936 1 ## Hg1256 virus+ 5728747 1 ## Hg1265 virus+ 3851318 1 ## Hg1288 virus+ 3740785 1 ## Hg266 virus+ 4414778 1 ## Hg1261 virus- 2938200 1 ## Hg1272 virus- 6665010 1 ## Hg1380 virus- 4719984 1 ## Hg1387 virus- 5562169 1 ## Hg1397 virus- 5747795 1 ## Hg1421 virus- 5958925 1 ## Hg1528 virus- 3655704 1 ## Hg861a virus- 6717503 1 ## Hg862a virus- 5273447 1 ## Hg934 virus- 5089019 1 ## Hg1262 virus- 5954066 1 ## Hg1273 virus- 6511255 1 ## Hg1282 virus- 3997507 1 ## Hg1283 virus- 5907705 1 ## Hg1286 virus- 5521600 1 ## Hg1351 virus- 2230773 1 ## Hg1516 virus- 6012343 1 ## Hg1527 virus- 4895128 1 4.2.3.2 Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] length(rownames(DGE$counts)) ## [1] 11969 postfilter &lt;- rownames(DGE$counts) write.table(postfilter, &quot;Output Files/gnome_female_edgeR_viralRNA_postfilter.txt&quot;, row.name=FALSE, col.name=FALSE, quote=FALSE) 4.2.3.3 Normalize based on library sizes DGE &lt;- calcNormFactors(DGE) 4.2.3.4 Estimate Dispersion On average, the true abundance for each gene can vary up or down by xx% (BCV) between replicates Differentially expressed = needs to vary by more than xx% # Overall common dispersion DGE &lt;- estimateCommonDisp(DGE, verbose = TRUE) ## Disp = 0.20107 , BCV = 0.4484 # Dispersion trend based on gene abundance DGE &lt;- estimateTrendedDisp(DGE) # Tagwise dispersion - allows different dispersion for each gene DGE &lt;- estimateTagwiseDisp(DGE, verbose = TRUE) ## Using interpolation to estimate tagwise dispersion. plotBCV(DGE) 4.2.4 Exploratory Plots 4.2.4.1 Normalized counts CPM &lt;- cpm(DGE, normalized.lib.sizes = TRUE, log = TRUE) %&gt;% data.frame() boxplot(CPM, las = 2, ylab = &quot;log2 CPM&quot;, main = &quot;Normalized Data&quot;) write.csv(CPM, &quot;Output Files/gnome_female_edgeR_viralRNA_normcounts.csv&quot;) 4.2.4.2 Cluster dendrogram RawDist &lt;- dist(t(CPM), method = &quot;euclidean&quot;) plot(hclust(RawDist, method = &quot;average&quot;), xlab=&quot;Average Euclidean Distance&quot;) 4.2.4.3 PCA Plots PCA &lt;- prcomp(t(RawDist)) # PCs 1-2 autoplot(PCA, data=SampleInfo, colour=&quot;RNA&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) # PCs 3-4 autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;RNA&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) 4.2.5 Test for DEGs et &lt;- exactTest(DGE, pair=c(&quot;virus-&quot;, &quot;virus+&quot;)) write.csv(et, &quot;Output Files/gnome_female_edgeR_viralRNA_DGE_results.csv&quot;) 4.2.5.1 Select DEGs by fold change &amp; pvalue Uncorrected p &lt; 0.05 log2FC &gt; 1 (2-fold change) results &lt;- topTags(et, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results) ## [1] 132 write.csv(results, &quot;Output Files/gnome_female_edgeR_viralRNA_DEG.csv&quot;) 4.2.5.2 Make sure genes are up/down regulated in Virus+ vs Virus- Visually compare gene expression across viral RNA status to ensure directional change is correct. CPM %&gt;% rownames_to_column(var=&quot;gene&quot;) %&gt;% filter(gene %in% results$gene) %&gt;% pivot_longer(cols=!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% mutate(RNA=ifelse(sample %in% SampleInfo$sample, SampleInfo[match(sample, SampleInfo$sample), 8], NA)) %&gt;% filter(gene %in% results$gene[1:10]) %&gt;% mutate(RNA=factor(RNA, levels=c(&quot;virus-&quot;, &quot;virus+&quot;))) %&gt;% ggplot(., aes(x=RNA, y=expression)) + geom_boxplot() + facet_wrap(~gene) 4.2.6 GO Enrichment Analysis 4.2.6.1 Configure Gene Lists background &lt;- rownames(CPM) up &lt;- results %&gt;% filter(logFC&gt;=1) down &lt;- results %&gt;% filter(logFC &lt; 1) 4.2.6.2 Up-regulated genes 4.2.6.2.1 Biological Process go_bp_up &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, go=&quot;bp&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.2.6.2.2 Molecular Function go_mf_up &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... ## Warning in oraEnrichment(interestGeneList, referenceGeneList, geneSet, minNum = ## minNum, : No significant gene set is identified based on FDR 0.05! 4.2.6.2.3 Cellular Component go_cc_up &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... ## Warning in oraEnrichment(interestGeneList, referenceGeneList, geneSet, minNum = ## minNum, : No significant gene set is identified based on FDR 0.05! 4.2.6.3 Down-regulated Genes 4.2.6.3.1 Biological Process go_bp_down &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, go=&quot;bp&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.2.6.3.2 Molecular Function go_mf_down &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, go=&quot;mf&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.2.6.3.3 Cellular Component go_cc_down &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, go=&quot;cc&quot;) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... 4.2.6.4 Save Results go &lt;- bind_rows(go_bp_down, go_bp_up, go_cc_down, go_mf_down) go &lt;- go %&gt;% select(!link &amp; !overlapId) go %&gt;% mutate(across(where(is.numeric), \\(x) round(x, digits=5))) %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;, font_size=9) geneSet description size overlap expect enrichmentRatio pValue FDR userId direction go GO:0060337 type I interferon signaling pathway 59 8 0.50066 15.97902 0.00000 0.00005 IFI6;IFITM3;OASL;MX1;MX2;IRF7;ZBP1;ISG15 down bp GO:0071357 cellular response to type I interferon 59 8 0.50066 15.97902 0.00000 0.00005 IFI6;IFITM3;OASL;MX1;MX2;IRF7;ZBP1;ISG15 down bp GO:0072376 protein activation cascade 39 7 0.33094 21.15171 0.00000 0.00005 C1QB;C2;C1QC;C1QA;GP1BB;CFB;CFD down bp GO:0034340 response to type I interferon 63 8 0.53460 14.96447 0.00000 0.00006 IFI6;IFITM3;OASL;MX1;MX2;IRF7;ZBP1;ISG15 down bp GO:0006956 complement activation 27 6 0.22911 26.18783 0.00000 0.00008 C1QB;C2;C1QC;C1QA;CFB;CFD down bp GO:0006959 humoral immune response 97 9 0.82311 10.93409 0.00000 0.00010 C1QB;C2;C1QC;C1QA;CFB;CFD;LCN2;CXCL10;CAMP down bp GO:0098542 defense response to other organism 270 13 2.29114 5.67403 0.00000 0.00028 IFI6;BATF2;IFITM3;OASL;APOBEC3G;MX1;MX2;DHX58;IRF7;LCN2;ISG15;CXCL10;CAMP down bp GO:0030449 regulation of complement activation 22 5 0.18669 26.78301 0.00000 0.00058 C1QB;C2;C1QC;C1QA;CFB down bp GO:0051607 defense response to virus 163 10 1.38317 7.22977 0.00000 0.00059 IFI6;IFITM3;OASL;APOBEC3G;MX1;MX2;DHX58;IRF7;ISG15;CXCL10 down bp GO:2000257 regulation of protein activation cascade 23 5 0.19517 25.61853 0.00000 0.00059 C1QB;C2;C1QC;C1QA;CFB down bp GO:0009615 response to virus 219 11 1.85837 5.91917 0.00000 0.00101 IFI6;IFITM3;OASL;APOBEC3G;MX1;MX2;DHX58;IRF7;LCN2;ISG15;CXCL10 down bp GO:0006958 complement activation, classical pathway 13 4 0.11031 36.26007 0.00000 0.00138 C1QB;C2;C1QC;C1QA down bp GO:0002920 regulation of humoral immune response 31 5 0.26306 19.00730 0.00001 0.00215 C1QB;C2;C1QC;C1QA;CFB down bp GO:0031347 regulation of defense response 458 15 3.88645 3.85956 0.00001 0.00215 C1QB;NR1H3;C2;C1QC;C1QA;CFB;IDO1;NCR3;APOBEC3G;DHX58;IRF7;APOE;ZBP1;LILRA5;SOCS1 down bp GO:0045071 negative regulation of viral genome replication 34 5 0.28851 17.33018 0.00001 0.00304 IFITM3;OASL;APOBEC3G;MX1;ISG15 down bp GO:0006954 inflammatory response 441 14 3.74220 3.74112 0.00002 0.00571 C1QB;NR1H3;C2;C1QC;C1QA;CFB;IDO1;SIGLEC1;NCR3;GAL;APOE;APOL3;LILRA5;CXCL10 down bp GO:0002455 humoral immune response mediated by circulating immunoglobulin 22 4 0.18669 21.42641 0.00003 0.00917 C1QB;C2;C1QC;C1QA down bp GO:0043901 negative regulation of multi-organism process 107 7 0.90797 7.70950 0.00003 0.00917 IFITM3;OASL;APOBEC3G;MX1;DHX58;ISG15;CAMP down bp GO:0002673 regulation of acute inflammatory response 46 5 0.39034 12.80927 0.00004 0.01092 C1QB;C2;C1QC;C1QA;CFB down bp GO:0019221 cytokine-mediated signaling pathway 485 14 4.11557 3.40172 0.00005 0.01306 IFI6;NR1H3;IL15RA;IFITM3;OASL;MPL;MX1;MX2;IRF7;ZBP1;LCN2;SOCS1;ISG15;CXCL10 down bp GO:1903901 negative regulation of viral life cycle 49 5 0.41580 12.02502 0.00006 0.01348 IFITM3;OASL;APOBEC3G;MX1;ISG15 down bp GO:0019079 viral genome replication 88 6 0.74674 8.03490 0.00010 0.02159 ATG16L2;IFITM3;OASL;APOBEC3G;MX1;ISG15 down bp GO:0050727 regulation of inflammatory response 220 9 1.86686 4.82094 0.00010 0.02159 C1QB;NR1H3;C2;C1QC;C1QA;CFB;IDO1;APOE;LILRA5 down bp GO:0070613 regulation of protein processing 56 5 0.47520 10.52190 0.00011 0.02255 C1QB;C2;C1QC;C1QA;CFB down bp GO:1903317 regulation of protein maturation 58 5 0.49217 10.15907 0.00013 0.02562 C1QB;C2;C1QC;C1QA;CFB down bp GO:0048525 negative regulation of viral process 59 5 0.50066 9.98688 0.00014 0.02674 IFITM3;OASL;APOBEC3G;MX1;ISG15 down bp GO:0050778 positive regulation of immune response 490 13 4.15800 3.12651 0.00023 0.04085 C1QB;NR1H3;C2;C1QC;C1QA;HLX;CFB;IDO1;CFD;NCR3;DHX58;IRF7;ZBP1 down bp GO:0043903 regulation of symbiosis, encompassing mutualism through parasitism 146 7 1.23891 5.65011 0.00023 0.04085 IFITM3;OASL;APOBEC3G;MX1;APOE;ISG15;CAMP down bp GO:0045069 regulation of viral genome replication 66 5 0.56006 8.92767 0.00023 0.04085 IFITM3;OASL;APOBEC3G;MX1;ISG15 down bp GO:0015701 bicarbonate transport 16 3 0.04202 71.38702 0.00001 0.04491 CA2;SLC4A1;RHAG up bp GO:0072562 blood microparticle 45 5 0.38203 13.08812 0.00004 0.02457 C1QB;C1QC;CFB;APOE;ACTA1 down cc GO:0004252 serine-type endopeptidase activity 68 6 0.51862 11.56927 0.00001 0.01059 C1QB;C2;C1QC;C1QA;CFB;CFD down mf GO:0008236 serine-type peptidase activity 81 6 0.61776 9.71248 0.00003 0.01059 C1QB;C2;C1QC;C1QA;CFB;CFD down mf GO:0017171 serine hydrolase activity 82 6 0.62539 9.59403 0.00004 0.01059 C1QB;C2;C1QC;C1QA;CFB;CFD down mf write.csv(go, &quot;Output Files/gnome_female_edgeR_viralRNA_go.csv&quot;) 4.2.7 KEGG Analysis kegg &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ## Loading the functional categories... ## Loading the ID list... ## Loading the reference list... ## Performing the enrichment analysis... write.csv(kegg, &quot;Output Files/gnome_female_edgeR_viralRNA_kegg.csv&quot;) 4.3 Transcriptome Null Set - edgeR - Females 4.3.1 Libraries library(tidyverse) library(edgeR) library(WebGestaltR) 4.3.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(RNA=ifelse(disease_stage==&quot;acute&quot; | disease_stage==&quot;peak&quot;, &quot;virus+&quot;, &quot;virus-&quot;)) %&gt;% filter(!sex==&quot;male&quot;) Raw &lt;- read.csv(file = &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 4.3.3 Loop Differential Gene Expression Analysis 4.3.3.1 Configure inputs &amp; set up results lists rna &lt;- SampleInfo$RNA degenes &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) postfilter &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 4.3.3.2 Loop Random number generator used to generate 9 for set.seed() function. set.seed(9) for (i in 1:1000) { #Shuffle group assignments without replacement groups &lt;- sample(rna, replace = FALSE, prob = NULL) # Create DGE Object DGE &lt;- DGEList(counts=Raw, group=groups) # Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] postfilter[[i]] &lt;- DGE %&gt;% &#39;[[&#39;(1) %&gt;% rownames() # Normalize based on library sizes &amp; calculate dispersion DGE &lt;- calcNormFactors(DGE) DGE &lt;- estimateCommonDisp(DGE) DGE &lt;- estimateTrendedDisp(DGE) DGE &lt;- estimateTagwiseDisp(DGE) # Test for DEGs et &lt;- exactTest(DGE, pair=c(&quot;virus-&quot;, &quot;virus+&quot;)) # Select DEGs by fold change &amp; pvalue results &lt;- topTags(et, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) # Save output to list degenes[[i]] &lt;- results$gene # End loop } 4.3.3.3 Save lists of DEGs # Postfilter List postfilter_df &lt;- data.frame(postfilter[[1]]) write.csv(postfilter_df, file = &quot;Output Files/txome_female_edgeR_viralRNA_null_DEG_postfilter.csv&quot;, row.names = FALSE) # DEGs max_length &lt;- max(unlist(lapply(degenes, length))) filled &lt;- lapply(degenes, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) df &lt;- do.call(cbind, filled) write.csv(df, file = &quot;Output Files/txome_female_edgeR_viralRNA_null_DEG.csv&quot;, row.names = FALSE) 4.3.4 GO Enrichment Analysis 4.3.4.1 Import data degenes &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_DEG.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) postfilter &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_DEG_postfilter.csv&quot;) 4.3.4.2 Set up results lists go_bp &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 4.3.4.3 Loop for (i in 1:1000) { genes &lt;- degenes[[i]] background &lt;- postfilter[,1] bp_test &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp[[i]] &lt;- bp_test$description mf_test &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf[[i]] &lt;- mf_test$description cc_test &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc[[i]] &lt;- cc_test$description } 4.3.4.4 Save files max_length &lt;- max(unlist(lapply(go_bp, length))) go_bp_filled &lt;- lapply(go_bp, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_final &lt;- do.call(cbind, go_bp_filled) write.csv(go_bp_final, file = &quot;Output Files/txome_female_edgeR_viralRNA_null_GO_bp.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf, length))) go_mf_filled &lt;- lapply(go_mf, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_final &lt;- do.call(cbind, go_mf_filled) write.csv(go_mf_final, file = &quot;Output Files/txome_female_edgeR_viralRNA_null_GO_mf.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc, length))) go_cc_filled &lt;- lapply(go_cc, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_final &lt;- do.call(cbind, go_cc_filled) write.csv(go_cc_final, file = &quot;Output Files/txome_female_edgeR_viralRNA_null_GO_cc.csv&quot;, row.names = FALSE) 4.3.5 KEGG Analysis 4.3.5.1 Set up results lists kegg &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 4.3.5.2 Loop for (i in 164:1000) { genes &lt;- degenes[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg[[i]] &lt;- NA, kegg[[i]] &lt;- test$description) } 4.3.5.3 Save results max_length &lt;- max(unlist(lapply(kegg, length))) kegg &lt;- lapply(kegg, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg &lt;- do.call(cbind, kegg) write.csv(kegg, file = &quot;Output Files/txome_female_edgeR_viralRNA_null_kegg.csv&quot;, row.names = FALSE) 4.4 Genome Null Set - edgeR - Females 4.4.1 Libraries library(tidyverse) library(edgeR) library(WebGestaltR) 4.4.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(RNA=ifelse(disease_stage==&quot;acute&quot; | disease_stage==&quot;peak&quot;, &quot;virus+&quot;, &quot;virus-&quot;)) %&gt;% filter(!sex==&quot;male&quot;) Raw &lt;- read.csv(file = &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 4.4.3 Loop Differential Gene Expression Analysis 4.4.3.1 Configure inputs &amp; set up results lists rna &lt;- SampleInfo$RNA degenes &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) postfilter &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 4.4.3.2 Loop Random number generator used to generate 9 for set.seed() function. set.seed(9) for (i in 1:1000) { #Shuffle group assignments without replacement groups &lt;- sample(rna, replace = FALSE, prob = NULL) # Create DGE Object DGE &lt;- DGEList(counts=Raw, group=groups) # Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] postfilter[[i]] &lt;- DGE %&gt;% &#39;[[&#39;(1) %&gt;% rownames() # Normalize based on library sizes &amp; calculate dispersion DGE &lt;- calcNormFactors(DGE) DGE &lt;- estimateCommonDisp(DGE) DGE &lt;- estimateTrendedDisp(DGE) DGE &lt;- estimateTagwiseDisp(DGE) # Test for DEGs et &lt;- exactTest(DGE, pair=c(&quot;virus-&quot;, &quot;virus+&quot;)) # Select DEGs by fold change &amp; pvalue results &lt;- topTags(et, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) # Save output to list degenes[[i]] &lt;- results$gene # End loop } 4.4.3.3 Save lists of DEGs # Postfilter Lists postfilter_df &lt;- data.frame(postfilter[[1]]) write.csv(postfilter_df, file = &quot;Output Files/gnome_female_edgeR_viralRNA_null_DEG_postfilter.csv&quot;, row.names = FALSE) # DEGs max_length &lt;- max(unlist(lapply(degenes, length))) filled &lt;- lapply(degenes, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) df &lt;- do.call(cbind, filled) write.csv(df, file = &quot;Output Files/gnome_female_edgeR_viralRNA_null_DEG.csv&quot;, row.names = FALSE) 4.4.4 GO Enrichment Analysis 4.4.4.1 Import data degenes &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_DEG.csv&quot;) postfilter &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_DEG_postfilter.csv&quot;) 4.4.4.2 Set up results lists go_bp &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 4.4.4.3 Loop for (i in 1:1000) { genes &lt;- degenes[[i]] background &lt;- postfilter[,1] bp_test &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp[[i]] &lt;- bp_test$description mf_test &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf[[i]] &lt;- mf_test$description cc_test &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc[[i]] &lt;- cc_test$description } 4.4.4.4 Save files max_length &lt;- max(unlist(lapply(go_bp, length))) go_bp_filled &lt;- lapply(go_bp, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_final &lt;- do.call(cbind, go_bp_filled) write.csv(go_bp_final, file = &quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_bp.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf, length))) go_mf_filled &lt;- lapply(go_mf, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_final &lt;- do.call(cbind, go_mf_filled) write.csv(go_mf_final, file = &quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_mf.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc, length))) go_cc_filled &lt;- lapply(go_cc, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_final &lt;- do.call(cbind, go_cc_filled) write.csv(go_cc_final, file = &quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_cc.csv&quot;, row.names = FALSE) 4.4.5 KEGG Analysis 4.4.5.1 Set up results lists kegg &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 4.4.5.2 Loop for (i in 1:1000) { genes &lt;- degenes[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg[[i]] &lt;- NA, kegg[[i]] &lt;- test$description) } 4.4.5.3 Save results max_length &lt;- max(unlist(lapply(kegg, length))) kegg &lt;- lapply(kegg, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg &lt;- do.call(cbind, kegg) write.csv(kegg, file = &quot;Output Files/gnome_female_edgeR_viralRNA_null_kegg.csv&quot;, row.names = FALSE) 4.5 Refine GO/KEGG *Based on Null Set results 4.5.1 Libraries library(tidyverse) library(kableExtra) library(knitr) library(ggh4x) library(gridExtra) 4.5.2 Data 4.5.2.1 GO/KEGG Data txome_go &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_go.csv&quot;) t_null_bp &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_GO_bp.csv&quot;) t_null_mf &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_GO_mf.csv&quot;) t_null_cc &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_GO_cc.csv&quot;) txome_kegg &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_kegg.csv&quot;) t_kegg &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_kegg.csv&quot;) gnome_go &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_go.csv&quot;, row.names=1) g_null_bp &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_bp.csv&quot;) g_null_mf &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_mf.csv&quot;) g_null_cc &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_cc.csv&quot;) gnome_kegg &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_kegg.csv&quot;) g_kegg &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_kegg.csv&quot;) 4.5.2.2 Raw Gene Expression t_raw &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_normcounts.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) g_raw &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_normcounts.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) meta &lt;- read.csv(&quot;Input Files/metadata.csv&quot;) 4.5.3 Transcriptome 4.5.3.1 GO Term 4.5.3.1.1 What terms are overrepresented in &gt;10% of nullsets? # BP t_null_bp_10 &lt;- t_null_bp %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF t_null_mf_10 &lt;- t_null_mf %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC t_null_cc_10 &lt;- t_null_cc %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 4.5.3.1.2 Filter results final_t_bp &lt;- txome_go %&gt;% filter(go==&quot;bp&quot; &amp; !description %in% t_null_bp_10$value) final_t_mf &lt;- txome_go %&gt;% filter(go==&quot;mf&quot; &amp; !description %in% t_null_mf_10$value) final_t_cc &lt;- txome_go %&gt;% filter(go==&quot;cc&quot; &amp; !description %in% t_null_cc_10$value) 4.5.3.2 KEGG Pathway 4.5.3.2.1 What pathways are overrepreesented in &gt;10% of nullsets? t_kegg_10 &lt;- t_kegg %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 4.5.3.2.2 Filter Results txome_kegg_final &lt;- txome_kegg %&gt;% filter(!description %in% t_kegg_10$value) txome_kegg %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) 4.5.4 Genome 4.5.4.1 GO Term 4.5.4.1.1 What terms are overrepresented in &gt;10% of nullsets? # BP g_null_bp_10 &lt;- g_null_bp %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF g_null_mf_10 &lt;- g_null_mf %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC g_null_cc_10 &lt;- g_null_cc %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 4.5.4.1.2 Filter results final_g_bp &lt;- gnome_go %&gt;% filter(go==&quot;bp&quot; &amp; !description %in% g_null_bp_10$value) final_g_mf &lt;- gnome_go %&gt;% filter(go==&quot;mf&quot; &amp; !description %in% g_null_mf_10$value) final_g_cc &lt;- gnome_go %&gt;% filter(go==&quot;cc&quot; &amp; !description %in% g_null_cc_10$value) 4.5.4.2 KEGG Pathway 4.5.4.2.1 What pathways are overrepreesented in &gt;10% of nullsets? g_kegg_10 &lt;- g_kegg %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 4.5.4.2.2 Filter Results gnome_kegg_final &lt;- gnome_kegg %&gt;% filter(!description %in% g_kegg_10$value) gnome_kegg %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) 4.5.5 GO Term Figure t_final &lt;- rbind(final_t_bp, final_t_mf, final_t_cc) %&gt;% mutate(approach=&quot;Transcriptome&quot;) write.csv(t_final, &quot;Output Files/txome_female_edgeR_viralRNA_go_refined.csv&quot;, row.names=FALSE) g_final &lt;- rbind(final_g_bp, final_g_mf, final_g_cc) %&gt;% mutate(approach= &quot;Genome&quot;) write.csv(g_final, &quot;Output Files/gnome_female_edgeR_viralRNA_go_refined.csv&quot;, row.names=FALSE) go_all &lt;- rbind(t_final, g_final) go_fig &lt;- go_all %&gt;% mutate(go=factor( ifelse(go==&quot;bp&quot;, &quot;BP&quot;, ifelse(go==&quot;cc&quot;, &quot;CC&quot;, &quot;MF&quot;)), levels=c(&quot;BP&quot;, &quot;CC&quot;, &quot;MF&quot;)), enrichmentRatio=ifelse(direction==&quot;down&quot;, enrichmentRatio*-1, enrichmentRatio)) %&gt;% ggplot(data=., aes(x=fct_reorder(description, enrichmentRatio, .desc=TRUE), y=enrichmentRatio, fill=factor(approach))) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + scale_fill_manual(values=c(&quot;slategray3&quot;, &quot;slategrey&quot;), name=NULL) + labs(x=&quot;GO Term&quot;, y=&quot;Enrichment Ratio&quot;) + scale_x_discrete(labels = function(description) str_wrap(description, width = 65)) + scale_y_continuous(n.breaks=10) + facet_grid(vars(go), scales=&quot;free_y&quot;, space=&quot;free_y&quot;) + theme_bw() + theme(panel.grid=element_blank(), text=element_text(size=11), legend.position=&quot;bottom&quot;) + coord_flip() ggsave(filename=&quot;Figures/viralRNA_goterm.jpg&quot;, go_fig, width=9, height=8, units=&quot;in&quot;) ggsave(filename = &quot;Figures/Figure6.pdf&quot;, go_fig, width = 9, height = 8, units = &quot;in&quot;, dpi = 600) 4.5.5.1 Presentation figure go_fig_pres &lt;- t_final %&gt;% mutate(go=factor( ifelse(go==&quot;bp&quot;, &quot;BP&quot;, ifelse(go==&quot;cc&quot;, &quot;CC&quot;, &quot;MF&quot;)), levels=c(&quot;BP&quot;, &quot;CC&quot;, &quot;MF&quot;)), enrichmentRatio=ifelse(direction==&quot;down&quot;, enrichmentRatio*-1, enrichmentRatio)) %&gt;% ggplot(data=., aes(x=fct_reorder(description, enrichmentRatio, .desc=TRUE), y=enrichmentRatio)) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;, fill=&quot;slategray&quot;) + labs(x=&quot;GO Term&quot;, y=&quot;Enrichment Ratio&quot;) + scale_x_discrete(labels = function(description) str_wrap(description, width = 65)) + scale_y_continuous(n.breaks=10) + facet_grid(vars(go), scales=&quot;free_y&quot;, space=&quot;free_y&quot;) + theme_bw() + theme(panel.grid=element_blank(), text=element_text(size=16), legend.position=&quot;bottom&quot;) + coord_flip() go_fig_pres ggsave(filename=&quot;Figures/viralRNA_goterm_t_pres.jpg&quot;, go_fig_pres, width=10, height=8, units=&quot;in&quot;) go_fig_pres2 &lt;- go_fig + theme(text = element_text(size = 16)) ggsave(filename=&quot;Figures/viralRNA_goterm_tg_pres.jpg&quot;, go_fig_pres2, width=10, height=9, units=&quot;in&quot;) 4.5.6 Immunne GO term Genes 4.5.6.1 Extracting Immune GO Genes Manually look up function of each gene &amp; categorize. Select subset of 16 genes for presentation in manuscript. immune_go_genes &lt;- go_all %&gt;% filter(grepl(&quot;immune|viral|inflammatory|interferon|leukocyte&quot;, description)) %&gt;% select(userId) %&gt;% mutate(genes = str_split_fixed(userId, &quot;;&quot;, n=18)) %&gt;% select(!userId) %&gt;% unlist() %&gt;% data.frame() %&gt;% setNames(&quot;genes&quot;) %&gt;% filter(!duplicated(genes)) %&gt;% filter(!genes==&quot;&quot;) %&gt;% arrange(genes) %&gt;% mutate(description = c( &quot;Innate Immunity&quot;, &quot;extra&quot;, &quot;Antiviral&quot;, &quot;Innate Immunity &amp; adaptive&quot;, &quot;extra&quot;, &quot;extra&quot;, &quot;Complement System&quot;, &quot;Complement System&quot;, &quot;Complement System&quot;, &quot;Complement System&quot;, &quot;adaptive&quot;, &quot;Complement System&quot;, &quot;Complement System&quot;, &quot;Immunoregulation&quot;, &quot;Innate Immunity&quot;, &quot;inflammation&quot;, &quot;mhc&quot;, &quot;Innate Immunity&quot;, &quot;Immunoregulation&quot;, &quot;Immunoregulation&quot;, &quot;Innate Immunity&quot;, &quot;Immunoregulation&quot;, &quot;Innate Immunity&quot;, &quot;extra&quot;, &quot;extra&quot;, &quot;Antiviral&quot;, &quot;Antiviral&quot;, &quot;Innate Immunity&quot;, &quot;extra&quot;, &quot;extra&quot;, &quot;extra&quot;, &quot;Antiviral&quot;, &quot;Immunoregulation&quot;, &quot;inflammation&quot;, &quot;extra&quot;, &quot;Innate Immunity&quot;, &quot;Immunoregulation&quot; )) immune_go_genes_subset &lt;- immune_go_genes %&gt;% filter(description == &quot;Innate Immunity&quot; | description == &quot;Complement System&quot; | description == &quot;Immunoregulation&quot; | description == &quot;Antiviral&quot;) %&gt;% filter(!genes == &quot;C2&quot; &amp; !genes == &quot;CFD&quot;, !genes == &quot;HSPA8&quot;, !genes == &quot;ACTB&quot;, !genes == &quot;DHX58&quot;) %&gt;% mutate(description = factor(description, levels=c(&quot;Innate Immunity&quot;, &quot;Immunoregulation&quot;, &quot;Antiviral&quot;, &quot;Complement System&quot;))) 4.5.6.2 Extract Expression Data t_immunegenes_subset &lt;- t_raw %&gt;% filter(gene %in% immune_go_genes_subset$genes) %&gt;% pivot_longer(!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% mutate(disease=ifelse(sample %in% meta$sample, meta[match(sample, meta$sample),4], sample), disease=factor(ifelse(disease==&quot;acute&quot;, &quot;A&quot;, ifelse(disease==&quot;peak&quot;, &quot;P&quot;, ifelse(disease==&quot;late&quot;, &quot;L&quot;, &quot;C&quot;))), levels=c(&quot;C&quot;, &quot;A&quot;, &quot;P&quot;, &quot;L&quot;)), description = ifelse(gene %in% immune_go_genes$genes, immune_go_genes[match(gene, immune_go_genes$genes),2], gene)) t_immune_genes_all &lt;- t_raw %&gt;% filter(gene %in% immune_go_genes$genes) %&gt;% pivot_longer(!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% mutate(disease=ifelse(sample %in% meta$sample, meta[match(sample, meta$sample),4], sample), disease=factor(ifelse(disease==&quot;acute&quot;, &quot;A&quot;, ifelse(disease==&quot;peak&quot;, &quot;P&quot;, ifelse(disease==&quot;late&quot;, &quot;L&quot;, &quot;C&quot;))), levels=c(&quot;C&quot;, &quot;A&quot;, &quot;P&quot;, &quot;L&quot;))) g_immune_genes_all &lt;- g_raw %&gt;% filter(gene %in% immune_go_genes$genes) %&gt;% pivot_longer(!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% mutate(disease=ifelse(sample %in% meta$sample, meta[match(sample, meta$sample),4], sample), disease=factor(ifelse(disease==&quot;acute&quot;, &quot;A&quot;, ifelse(disease==&quot;peak&quot;, &quot;P&quot;, ifelse(disease==&quot;late&quot;, &quot;L&quot;, &quot;C&quot;))), levels=c(&quot;C&quot;, &quot;A&quot;, &quot;P&quot;, &quot;L&quot;))) 4.5.6.3 Plot for manuscript t_plot_manuscript &lt;- t_immunegenes_subset %&gt;% ggplot(., aes(x=disease, y=expression)) + geom_boxplot() + facet_nested_wrap(vars(description, gene), nest_line=element_line(colour=&quot;black&quot;)) + theme(ggh4x.facet.nestline = element_line(linetype = 1)) + labs(x = &quot;Influenza Stage&quot;, y = &quot;log2(CPM)&quot;) + theme_bw() + theme(panel.grid=element_blank()) t_plot_manuscript ggsave(&quot;Figures/T_female_edgeR_immunegenes.jpg&quot;, t_plot_manuscript, width=8, height=8, units=&quot;in&quot;) 4.5.6.4 Plot for supplemental t_plot_supplemental &lt;- t_immune_genes_all %&gt;% ggplot(aes(x=disease, y=expression)) + geom_boxplot() + facet_wrap(~gene, scales=&quot;free&quot;, ncol=5) + labs(title=NULL, x=&quot;Influenza Stage&quot;, y=&quot;log2(CPM)&quot;) + theme_bw() + theme(panel.grid=element_blank()) ggsave(&quot;Figures/supplemental_T_female_edgeR_immunegenes.jpg&quot;, t_plot_supplemental, width=8, height=10, units=&quot;in&quot;) g_plot_supplemental &lt;- g_immune_genes_all %&gt;% ggplot(aes(x=disease, y=expression)) + geom_boxplot() + facet_wrap(~gene, scales=&quot;free&quot;, ncol=5) + labs(title=NULL, x=&quot;Influenza Stage&quot;, y=&quot;log2(CPM)&quot;) + theme_bw() + theme(panel.grid=element_blank()) ggsave(&quot;Figures/supplemental_G_female_edgeR_immunegenes.jpg&quot;, g_plot_supplemental, width=8, height=10, units=&quot;in&quot;) 4.5.7 KEGG Table - Manuscript t_kegg_table &lt;- txome_kegg_final %&gt;% mutate(`Pairwise Comparison (Approach)` = &quot;Virus+ vs Virus- (Transcriptome)&quot;, `KEGG Pathway` = description, `Enrichment Ratio (FDR)` = paste0(round(enrichmentRatio, digits=3), &quot; (&quot;, round(FDR, digits=4), &quot;)&quot;), Genes=userId) %&gt;% select(`Pairwise Comparison (Approach)`, `KEGG Pathway`, `Enrichment Ratio (FDR)`, Genes) g_kegg_table &lt;- gnome_kegg_final %&gt;% mutate(`Pairwise Comparison (Approach)` = &quot;Virus+ vs Virus- (Genome)&quot;, `KEGG Pathway` = description, `Enrichment Ratio (FDR)` = paste0(round(enrichmentRatio, digits=2), &quot; (&quot;, round(FDR, digits=4), &quot;)&quot;), Genes=userId) %&gt;% select(`Pairwise Comparison (Approach)`, `KEGG Pathway`, `Enrichment Ratio (FDR)`, Genes) kegg_table &lt;- rbind(t_kegg_table, g_kegg_table) write.csv(kegg_table, &quot;Output Files/manuscript_keggtable.csv&quot;, row.names=FALSE) 4.5.8 Supplemental Table 4.5.8.1 Biological Process t_sup_bp &lt;- txome_go %&gt;% filter(go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_bp_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_bp &lt;- gnome_go %&gt;% filter(go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_bp_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_bp &lt;- merge(t_sup_bp, g_sup_bp, all=TRUE) %&gt;% mutate(go=&quot;BP&quot;) 4.5.8.2 Cellular Component t_sup_cc &lt;- txome_go %&gt;% filter(go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_bp_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_cc &lt;- gnome_go %&gt;% filter(go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_bp_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_cc &lt;- merge(t_sup_cc, g_sup_cc, all=TRUE) %&gt;% mutate(go=&quot;CC&quot;) 4.5.8.3 Molecular Function t_sup_mf &lt;- txome_go %&gt;% filter(go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_bp_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_mf &lt;- gnome_go %&gt;% filter(go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_bp_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_mf &lt;- merge(t_sup_mf, g_sup_mf, all=TRUE) %&gt;% mutate(go=&quot;MF&quot;) 4.5.8.4 Save GO Tables sup &lt;- rbind(sup_bp, sup_cc, sup_mf) sup %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup, &quot;Output Files/supplemental_female_edgeR_viralRNA_go.csv&quot;, row.names=FALSE) 4.5.8.5 KEGG t_sup_kegg &lt;- txome_kegg %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Transcriptome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_kegg$value, &quot;x&quot;, &quot;&quot;), Transcriptome_Genes = userId) %&gt;% select(KEGG, Transcriptome, Transcriptome_null, Transcriptome_Genes) g_sup_kegg &lt;- gnome_kegg %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Genome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_kegg$value, &quot;x&quot;, &quot;&quot;), Genome_Genes = userId) %&gt;% select(KEGG, Genome, Genome_null, Genome_Genes) sup_kegg &lt;- merge(t_sup_kegg, g_sup_kegg, all=TRUE) sup_kegg %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup_kegg, &quot;Output Files/supplemental_female_edgeR_viralRNA_kegg.csv&quot;, row.names=FALSE) "],["influenza-stage-dge.html", "5 Influenza Stage DGE 5.1 Transcriptome - edgeR - Females 5.2 Genome - edgeR - Females 5.3 Comapre T &amp; G Approach - edgeR - Females 5.4 Transcriptome Null Set - edgeR - Females 5.5 Genome Null Set - edgeR - Females 5.6 Refine GO/KEGG", " 5 Influenza Stage DGE 5.1 Transcriptome - edgeR - Females 5.1.1 Libraries library(tidyverse) library(edgeR) library(ggfortify) library(kableExtra) library(knitr) library(WebGestaltR) 5.1.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) %&gt;% filter(!sex==&quot;male&quot;) Raw &lt;- read.csv(file = &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 5.1.3 Differential Gene Expression Analysis 5.1.3.1 DGElist DGE &lt;- DGEList(counts=Raw, group=SampleInfo$disease_stage) DGE$samples 5.1.3.2 Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] length(rownames(DGE$counts)) postfilter &lt;- rownames(DGE$counts) write.table(postfilter, &quot;Output Files/txome_female_edgeR_postfilter.txt&quot;, row.name=FALSE, col.name=FALSE, quote=FALSE) 5.1.3.3 Normalize based on library sizes DGE &lt;- calcNormFactors(DGE) 5.1.3.4 Estimate Dispersion On average, the true abundance for each gene can vary up or down by xx% (BCV) between replicates Differentially expressed = needs to vary by more than xx% # Overall common dispersion DGE &lt;- estimateCommonDisp(DGE, verbose = TRUE) # Dispersion trend based on gene abundance DGE &lt;- estimateTrendedDisp(DGE) # Tagwise dispersion - allows different dispersion for each gene DGE &lt;- estimateTagwiseDisp(DGE, verbose = TRUE) plotBCV(DGE) 5.1.4 Exploratory Plots 5.1.4.1 Normalized counts CPM &lt;- cpm(DGE, normalized.lib.sizes = TRUE, log = TRUE) %&gt;% data.frame() boxplot(CPM, las = 2, ylab = &quot;log2 CPM&quot;, main = &quot;Normalized Data&quot;) write.csv(CPM, &quot;Output Files/txome_female_edgeR_normcounts.csv&quot;) 5.1.4.2 Cluster dendrogram RawDist &lt;- dist(t(CPM), method = &quot;euclidean&quot;) plot(hclust(RawDist, method = &quot;average&quot;), xlab=&quot;Average Euclidean Distance&quot;) 5.1.4.3 PCA Plots PCA &lt;- prcomp(t(RawDist)) # PCs 1-2 autoplot(PCA, data=SampleInfo, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) # PCs 3-4 autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) 5.1.5 Test for DEGs et_acute &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;acute&quot;)) et_peak &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;peak&quot;)) et_late &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;late&quot;)) # Save for DESeq2 comparisons write.csv(et_acute, &quot;Output Files/txome_female_edgeR_DGE_results_acute.csv&quot;) write.csv(et_peak, &quot;Output Files/txome_female_edgeR_DGE_results_peak.csv&quot;) write.csv(et_late, &quot;Output Files/txome_female_edgeR_DGE_results_late.csv&quot;) 5.1.5.1 Select DEGs by fold change &amp; pvalue Uncorrected p &lt; 0.05 log2FC &gt; 1 (2-fold change) results_acute &lt;- topTags(et_acute, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results_acute) results_peak &lt;- topTags(et_peak, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results_peak) results_late &lt;- topTags(et_late, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results_late) write.csv(results_acute, &quot;Output Files/txome_female_edgeR_DEG_acute.csv&quot;) write.csv(results_peak, &quot;Output Files/txome_female_edgeR_DEG_peak.csv&quot;) write.csv(results_late, &quot;Output Files/txome_female_edgeR_DEG_late.csv&quot;) 5.1.5.2 Make sure genes are up/down regulated in APL vs Control Visually compare gene expression across disease stages to DEGs in acute, peak, late to ensure directional change is correct. CPM %&gt;% rownames_to_column(var=&quot;gene&quot;) %&gt;% filter(gene %in% results_acute$gene) %&gt;% pivot_longer(cols=!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% mutate(disease_stage=ifelse(sample %in% SampleInfo$sample, SampleInfo[match(sample, SampleInfo$sample), 4], NA)) %&gt;% filter(gene %in% results_acute$gene[1:10]) %&gt;% mutate(disease_stage=factor(disease_stage, levels=c(&quot;control&quot;, &quot;acute&quot;, &quot;peak&quot;, &quot;late&quot;))) %&gt;% ggplot(., aes(x=disease_stage, y=expression)) + geom_boxplot() + facet_wrap(~gene) 5.1.6 GO Enrichment Analysis 5.1.6.1 Configure Gene Lists background &lt;- rownames(CPM) acute_up &lt;- results_acute %&gt;% filter(logFC&gt;=1) acute_down &lt;- results_acute %&gt;% filter(logFC &lt; 1) peak_up &lt;- results_peak %&gt;% filter(logFC&gt;=1) peak_down &lt;- results_peak %&gt;% filter(logFC &lt; 1) late_up &lt;- results_late %&gt;% filter(logFC&gt;=1) late_down &lt;- results_late %&gt;% filter(logFC &lt; 1) 5.1.6.2 Up-regulated genes 5.1.6.2.1 Biological Process go_bp_up_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = acute_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;acute&quot;, go=&quot;bp&quot;) go_bp_up_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = peak_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;peak&quot;, go=&quot;bp&quot;) go_bp_up_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = late_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;late&quot;, go=&quot;bp&quot;) 5.1.6.2.2 Molecular Function go_mf_up_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = acute_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;acute&quot;, go=&quot;mf&quot;) go_mf_up_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = peak_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;peak&quot;, go=&quot;mf&quot;) go_mf_up_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = late_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;late&quot;, go=&quot;mf&quot;) 5.1.6.2.3 Cellular Component go_cc_up_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = acute_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;acute&quot;, go=&quot;cc&quot;) go_cc_up_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = peak_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;peak&quot;, go=&quot;cc&quot;) go_cc_up_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = late_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;late&quot;, go=&quot;cc&quot;) 5.1.6.3 Down-regulated genes 5.1.6.3.1 Biological Process go_bp_down_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = acute_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;acute&quot;, go=&quot;bp&quot;) go_bp_down_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = peak_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;peak&quot;, go=&quot;bp&quot;) go_bp_down_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = late_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;late&quot;, go=&quot;bp&quot;) 5.1.6.3.2 Molecular Function go_mf_down_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = acute_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;acute&quot;, go=&quot;mf&quot;) go_mf_down_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = peak_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;peak&quot;, go=&quot;mf&quot;) go_mf_down_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = late_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;late&quot;, go=&quot;mf&quot;) 5.1.6.3.3 Cellular Component go_cc_down_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = acute_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;acute&quot;, go=&quot;cc&quot;) go_cc_down_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = peak_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;peak&quot;, go=&quot;cc&quot;) go_cc_down_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = late_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;late&quot;, go=&quot;cc&quot;) 5.1.6.4 Save results go &lt;- bind_rows(go_bp_down_acute, go_bp_up_peak, go_bp_down_peak, go_bp_up_late, go_mf_down_acute, go_mf_up_peak, go_mf_down_peak, go_mf_up_late, go_cc_down_acute, go_cc_up_peak, go_cc_down_peak, go_cc_up_late) go &lt;- go %&gt;% select(!link &amp; !overlapId) go %&gt;% mutate(across(where(is.numeric), \\(x) round(x, digits=5))) %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;, font_size=9) write.csv(go, &quot;Output Files/txome_female_edgeR_go.csv&quot;) 5.1.7 KEGG Analysis 5.1.7.1 Acute kegg_acute &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results_acute$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) %&gt;% mutate(disease_stage=&quot;acute&quot;) 5.1.7.2 Peak kegg_peak &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results_peak$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) %&gt;% mutate(disease_stage=&quot;peak&quot;) 5.1.7.3 Late kegg_late &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results_late$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) #%&gt;% #mutate(disease_stage=&quot;late&quot;) 5.1.7.4 Save results kegg &lt;- bind_rows(kegg_acute, kegg_peak) write.csv(kegg, &quot;Output Files/txome_female_edgeR_kegg.csv&quot;) 5.2 Genome - edgeR - Females 5.2.1 Libraries library(tidyverse) library(edgeR) library(ggfortify) library(kableExtra) library(knitr) library(WebGestaltR) 5.2.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) %&gt;% filter(!sex==&quot;male&quot;) Raw &lt;- read.csv(file = &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 5.2.3 Differential Gene Expression Analysis 5.2.3.1 DGElist DGE &lt;- DGEList(counts=Raw, group=SampleInfo$disease_stage) DGE$samples 5.2.3.2 Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] length(rownames(DGE$counts)) postfilter &lt;- rownames(DGE$counts) write.table(postfilter, &quot;Output Files/gnome_female_edgeR_postfilter.txt&quot;, row.name=FALSE, col.name=FALSE, quote=FALSE) 5.2.3.3 Normalize based on library sizes DGE &lt;- calcNormFactors(DGE) 5.2.3.4 Estimate Dispersion On average, the true abundance for each gene can vary up or down by xx% (BCV) between replicates Differentially expressed = needs to vary by more than xx% # Overall common dispersion DGE &lt;- estimateCommonDisp(DGE, verbose = TRUE) # Dispersion trend based on gene abundance DGE &lt;- estimateTrendedDisp(DGE) # Tagwise dispersion - allows different dispersion for each gene DGE &lt;- estimateTagwiseDisp(DGE, verbose = TRUE) plotBCV(DGE) 5.2.4 Exploratory Plots 5.2.4.1 Normalized counts CPM &lt;- cpm(DGE, normalized.lib.sizes = TRUE, log = TRUE) %&gt;% data.frame() boxplot(CPM, las = 2, ylab = &quot;log2 CPM&quot;, main = &quot;Normalized Data&quot;) write.csv(CPM, &quot;Output Files/gnome_female_edgeR_normcounts.csv&quot;) 5.2.4.2 Cluster dendrogram Males = 1274, 1407, 1402, 270 Unknown = 1265 RawDist &lt;- dist(t(CPM), method = &quot;euclidean&quot;) plot(hclust(RawDist, method = &quot;average&quot;), xlab=&quot;Average Euclidean Distance&quot;) 5.2.4.3 PCA Plots PCA &lt;- prcomp(t(RawDist)) # PCs 1-2 autoplot(PCA, data=SampleInfo, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) # PCs 3-4 autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;disease_stage&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;sex&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;year&quot;) + theme(legend.position=&quot;bottom&quot;) autoplot(PCA, data=SampleInfo, x=3, y=4, colour=&quot;molt&quot;) + theme(legend.position=&quot;bottom&quot;) 5.2.5 Test for DEGs et_acute &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;acute&quot;)) et_peak &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;peak&quot;)) et_late &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;late&quot;)) # Save for DESeq2 comparisons write.csv(et_acute, &quot;Output Files/gnome_female_edgeR_DGE_results_acute.csv&quot;) write.csv(et_peak, &quot;Output Files/gnome_female_edgeR_DGE_results_peak.csv&quot;) write.csv(et_late, &quot;Output Files/gnome_female_edgeR_DGE_results_late.csv&quot;) 5.2.5.1 Select DEGs by fold change &amp; pvalue Uncorrected p &lt; 0.05 log2FC &gt; 1 (2-fold change) results_acute &lt;- topTags(et_acute, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results_acute) results_peak &lt;- topTags(et_peak, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results_peak) results_late &lt;- topTags(et_late, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) nrow(results_late) write.csv(results_acute, &quot;Output Files/gnome_female_edgeR_DEG_acute.csv&quot;) write.csv(results_peak, &quot;Output Files/gnome_female_edgeR_DEG_peak.csv&quot;) write.csv(results_late, &quot;Output Files/gnome_female_edgeR_DEG_late.csv&quot;) 5.2.5.2 Make sure genes are up/down regulated in APL vs Control Visually compare gene expression across disease stages to DEGs in acute, peak, late to ensure directional change is correct. CPM %&gt;% rownames_to_column(var=&quot;gene&quot;) %&gt;% filter(gene %in% results_acute$gene) %&gt;% pivot_longer(cols=!gene, names_to=&quot;sample&quot;, values_to=&quot;expression&quot;) %&gt;% mutate(disease_stage=ifelse(sample %in% SampleInfo$sample, SampleInfo[match(sample, SampleInfo$sample), 4], NA)) %&gt;% filter(gene %in% results_acute$gene[1:10]) %&gt;% mutate(disease_stage=factor(disease_stage, levels=c(&quot;control&quot;, &quot;acute&quot;, &quot;peak&quot;, &quot;late&quot;))) %&gt;% ggplot(., aes(x=disease_stage, y=expression)) + geom_boxplot() + facet_wrap(~gene) 5.2.6 GO Enrichment Analysis 5.2.6.1 Configure Gene Lists background &lt;- rownames(CPM) acute_up &lt;- results_acute %&gt;% filter(logFC&gt;=1) acute_down &lt;- results_acute %&gt;% filter(logFC &lt; 1) peak_up &lt;- results_peak %&gt;% filter(logFC&gt;=1) peak_down &lt;- results_peak %&gt;% filter(logFC &lt; 1) late_up &lt;- results_late %&gt;% filter(logFC&gt;=1) late_down &lt;- results_late %&gt;% filter(logFC &lt; 1) 5.2.6.2 Up-regulated genes 5.2.6.2.1 Biological Process go_bp_up_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = acute_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;acute&quot;, go=&quot;bp&quot;) go_bp_up_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = peak_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;peak&quot;, go=&quot;bp&quot;) go_bp_up_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = late_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;late&quot;, go=&quot;bp&quot;) 5.2.6.2.2 Molecular Function go_mf_up_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = acute_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;acute&quot;, go=&quot;mf&quot;) go_mf_up_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = peak_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;peak&quot;, go=&quot;mf&quot;) go_mf_up_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = late_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;late&quot;, go=&quot;mf&quot;) 5.2.6.2.3 Cellular Component go_cc_up_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = acute_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;acute&quot;, go=&quot;cc&quot;) go_cc_up_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = peak_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;peak&quot;, go=&quot;cc&quot;) go_cc_up_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = late_up$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;up&quot;, disease_stage=&quot;late&quot;, go=&quot;cc&quot;) 5.2.6.3 Down-regulated genes 5.2.6.3.1 Biological Process go_bp_down_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = acute_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;acute&quot;, go=&quot;bp&quot;) go_bp_down_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = peak_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;peak&quot;, go=&quot;bp&quot;) go_bp_down_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = late_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;late&quot;, go=&quot;bp&quot;) 5.2.6.3.2 Molecular Function go_mf_down_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = acute_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;acute&quot;, go=&quot;mf&quot;) go_mf_down_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = peak_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;peak&quot;, go=&quot;mf&quot;) go_mf_down_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = late_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;late&quot;, go=&quot;mf&quot;) 5.2.6.3.3 Cellular Component go_cc_down_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = acute_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;acute&quot;, go=&quot;cc&quot;) go_cc_down_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = peak_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;peak&quot;, go=&quot;cc&quot;) go_cc_down_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = late_down$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) %&gt;% mutate(direction=&quot;down&quot;, disease_stage=&quot;late&quot;, go=&quot;cc&quot;) 5.2.6.4 Save results go &lt;- bind_rows( go_bp_up_peak, go_bp_up_late, go_mf_up_peak, go_mf_up_late, go_cc_down_acute, go_cc_up_peak ) go &lt;- go %&gt;% select(!link &amp; !overlapId) go %&gt;% mutate(across(where(is.numeric), \\(x) round(x, digits=5))) %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;, font_size=9) write.csv(go, &quot;Output Files/gnome_female_edgeR_go.csv&quot;) 5.2.7 KEGG Analysis 5.2.7.1 Acute kegg_acute &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results_acute$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) 5.2.7.2 Peak kegg_peak &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results_peak$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) %&gt;% mutate(disease_stage=&quot;peak&quot;) 5.2.7.3 Late kegg_late &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = results_late$gene, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) 5.2.7.4 Save results kegg &lt;- bind_rows(kegg_peak) write.csv(kegg, &quot;Output Files/gnome_female_edgeR_kegg.csv&quot;) 5.3 Comapre T &amp; G Approach - edgeR - Females 5.3.1 Libraries library(tidyverse) library(VennDiagram) library(gridExtra) 5.3.2 Data 5.3.2.1 Transcriptome results t_virus &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_DGE_results.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) t_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DGE_results_acute.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) t_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DGE_results_peak.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) t_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DGE_results_late.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) 5.3.2.2 Transcriptome DEGs tvirus_up &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_DEG.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) tvirus_down &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_DEG.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) t_acute_up &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_acute.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) t_acute_down &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_acute.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) t_peak_up &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_peak.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) t_peak_down &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_peak.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) t_late_up &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_late.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) t_late_down &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_late.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) 5.3.2.3 Genome results g_virus &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_DGE_results.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot;= &quot;X&quot;) g_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DGE_results_acute.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) g_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DGE_results_peak.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) g_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DGE_results_late.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) 5.3.2.4 Genome DEGs gvirus_up &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_DEG.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) gvirus_down &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_DEG.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) g_acute_up &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_acute.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) g_acute_down &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_acute.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) g_peak_up &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_peak.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) g_peak_down &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_peak.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) g_late_up &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_late.csv&quot;, row.name=1) %&gt;% filter(logFC&gt;0) g_late_down &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_late.csv&quot;, row.name=1) %&gt;% filter(logFC&lt;0) 5.3.3 Number of up &amp; down reg genes 5.3.3.1 Set up data frame gene_num &lt;- data.frame( approach = c(&quot;T&quot;, &quot;T&quot;, &quot;T&quot;, &quot;T&quot;, &quot;T&quot;, &quot;T&quot;, &quot;T&quot;, &quot;T&quot;, &quot;G&quot;, &quot;G&quot;, &quot;G&quot;, &quot;G&quot;, &quot;G&quot;, &quot;G&quot;, &quot;G&quot;, &quot;G&quot;), stage = c(&quot;V+ v V-&quot;, &quot;V+ v V-&quot;, &quot;Acute&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Peak&quot;, &quot;Late&quot;, &quot;Late&quot;, &quot;V+ v V-&quot;, &quot;V+ v V-&quot;, &quot;Acute&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Peak&quot;, &quot;Late&quot;, &quot;Late&quot;), direction = c(&quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;, &quot;Down&quot;), genes = c(nrow(tvirus_up), nrow(tvirus_down), nrow(t_acute_up), nrow(t_acute_down), nrow(t_peak_up), nrow(t_peak_down), nrow(t_late_up), nrow(t_late_down), nrow(gvirus_up), nrow(gvirus_down), nrow(g_acute_up), nrow(g_acute_down), nrow(g_peak_up), nrow(g_peak_down), nrow(g_late_up), nrow(g_late_down))) %&gt;% mutate(stage=factor(stage, levels=c(&quot;V+ v V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;)), direction=factor(direction, levels=c(&quot;Up&quot;, &quot;Down&quot;)), approach=factor(approach, levels=c(&quot;T&quot;, &quot;G&quot;))) 5.3.3.2 Plot gene_plot &lt;- ggplot(gene_num, aes(x=approach, y=genes, fill=direction)) + geom_col() + facet_grid(~stage) + labs(x=&quot;Approach&quot;, y = &quot;Number of Genes&quot;) + scale_fill_manual(values=c(&quot;gray75&quot;, &quot;gray42&quot;), name=NULL) + theme_bw() + theme(panel.grid=element_blank()) ggsave(&quot;Figures/TG_F_edgeR_approachcomp.jpeg&quot;, gene_plot, width=4, height=3, units=&quot;in&quot;) 5.3.3.3 Plot Presentation gene_plot_pres &lt;- gene_num %&gt;% filter(stage == &quot;V+ v V-&quot;) %&gt;% filter(approach == &quot;T&quot;) %&gt;% mutate(direction = ifelse(direction == &quot;Up&quot;, &quot;Down&quot;, &quot;Up&quot;), direction = factor(direction, levels=c(&quot;Up&quot;, &quot;Down&quot;))) %&gt;% ggplot(., aes(x=direction, y=genes, fill = direction)) + geom_col(position = position_dodge()) + labs(x=NULL, y = &quot;Number of Genes&quot;) + scale_fill_manual(values=c(&quot;Up&quot; = &quot;#ACD7CA&quot;, &quot;Down&quot; = &quot;#AAA7BC&quot;)) + theme_bw() + theme(panel.grid=element_blank(), text=element_text(size=18), legend.position = &quot;none&quot;) gene_plot_pres ggsave(&quot;Figures/T_F_edgeR_numgenes_pres_exp.jpeg&quot;, gene_plot_pres, width=6, height=5, units=&quot;in&quot;) gene_plot_pres &lt;- gene_num %&gt;% filter(stage == &quot;V+ v V-&quot;) %&gt;% filter(approach == &quot;T&quot;) %&gt;% mutate(direction = factor(direction, levels=c(&quot;Up&quot;, &quot;Down&quot;))) %&gt;% ggplot(., aes(x=direction, y=genes, fill = direction)) + geom_col(position = position_dodge()) + labs(x=NULL, y = &quot;Number of Genes&quot;) + scale_fill_manual(values=c(&quot;Up&quot; = &quot;#ACD7CA&quot;, &quot;Down&quot; = &quot;#AAA7BC&quot;)) + theme_bw() + theme(panel.grid=element_blank(), text=element_text(size=18), legend.position = &quot;none&quot;) gene_plot_pres ggsave(&quot;Figures/T_F_edgeR_numgenes_pres.jpeg&quot;, gene_plot_pres, width=6, height=5, units=&quot;in&quot;) 5.3.4 Gene identities 5.3.4.1 Set up lists gene_list &lt;- list( t_acute_up = t_acute_up$gene, t_acute_down = t_acute_down$gene, t_peak_up = t_peak_up$gene, t_peak_down = t_peak_down$gene, t_late_up = t_late_up$gene, t_late_down = t_late_down$gene, t_virus_up = tvirus_up$gene, t_virus_down = tvirus_down$gene, g_acute_up = g_acute_up$gene, g_acute_down = g_acute_down$gene, g_peak_up = g_peak_up$gene, g_peak_down = g_peak_down$gene, g_late_up = g_late_up$gene, g_late_down = g_late_down$gene, g_virus_up = gvirus_up$gene, g_virus_down = gvirus_down$gene ) 5.3.4.2 Venn diagram virus_up &lt;- venn.diagram(gene_list[c(7,15)], filename=NULL, disable.logging=TRUE, main=&quot;V+ v V- Up&quot;, main.pos=c(0.5,0.85), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0,0), cat.just=list(c(0.5,0) , c(0.5,0)), invert=TRUE, margin=0.3, height=3, width=3, units=&quot;in&quot;) virus_down &lt;- venn.diagram(gene_list[c(8,16)], filename=NULL, disable.logging=TRUE, main=&quot;V+ v V- Down&quot;, main.pos=c(0.5,0.78), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0, 0), cat.just=list(c(0.5,0) , c(0.5,0)), margin=0.3, height=3, width=3, units=&quot;in&quot;) acute_up &lt;- venn.diagram(gene_list[c(1,9)], filename=NULL, disable.logging=TRUE, main=&quot;Acute Up&quot;, main.pos=c(0.5,0.85), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0, 0), cat.just=list(c(0.5,0) , c(0.5,0)), invert=TRUE, margin=0.3, height=3, width=3, units=&quot;in&quot;) acute_down&lt;- venn.diagram(gene_list[c(2,10)], filename=NULL, disable.logging=TRUE, main=&quot;Acute Down&quot;, main.pos=c(0.5,0.8), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0, 0), cat.just=list(c(0.5,0) , c(0.5,0)), margin=0.3, height=3, width=3, units=&quot;in&quot;) peak_up &lt;- venn.diagram(gene_list[c(3,11)], filename=NULL, disable.logging=TRUE, main=&quot;Peak Up&quot;, main.pos=c(0.5,0.85), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0,0), cat.just=list(c(0.5,0) , c(0.5,0)), invert=TRUE, margin=0.3, height=3, width=3, units=&quot;in&quot;) peak_down &lt;- venn.diagram(gene_list[c(4,12)], filename=NULL, disable.logging=TRUE, main=&quot;Peak Down&quot;, main.pos=c(0.5,0.8), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0,0), cat.just=list(c(0.5,0) , c(0.5,0)), margin=0.3, height=3, width=3, units=&quot;in&quot;) late_up &lt;- venn.diagram(gene_list[c(5,13)], filename=NULL, disable.logging=TRUE, main=&quot;Late Up&quot;, main.pos=c(0.5,0.85), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0,0), cat.just=list(c(0.5,0) , c(0.5,0)), invert=TRUE, margin=0.3, height=3, width=3, units=&quot;in&quot;) late_down &lt;- venn.diagram(gene_list[c(6,14)], filename=NULL, disable.logging=TRUE, main=&quot;Late Down&quot;, main.pos=c(0.5,0.8), category.names = c(&quot;T&quot;, &quot;G&quot;), cat.pos=c(0,0), cat.just=list(c(0.5,0) , c(0.5,0)), invert=TRUE, margin=0.3, height=3, width=3, units=&quot;in&quot;) venn &lt;- grid.arrange(gTree(children=virus_up), gTree(children=acute_up), gTree(children=peak_up), gTree(children=late_up), gTree(children=virus_down), gTree(children=acute_down), gTree(children=peak_down), gTree(children=late_down), ncol=4, rectGrob(x=c(0.5, 1.5, 2.5, 3.5, 0.5, 1.5, 2.5, 3.5), y=c(2.5, 2.5, 2.5, 2.5, 1.5, 1.5, 1.5, 1.5), gp=gpar(lwd=1, fill=NA))) ggsave(&quot;Figures/TG_F_edgeR_approachcomp_venn.jpeg&quot;, venn, width=8, height=5, units=&quot;in&quot;) 5.4 Transcriptome Null Set - edgeR - Females 5.4.1 Libraries library(tidyverse) library(edgeR) library(WebGestaltR) 5.4.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) %&gt;% filter(!sex==&quot;male&quot;) Raw &lt;- read.csv(file = &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 5.4.3 Loop Differential Gene Expression Analysis 5.4.3.1 Configure inputs &amp; set up results lists diseasestage &lt;- SampleInfo$disease_stage acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) postfilter &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 5.4.3.2 Loop Random number generator used to generate 9 for set.seed() function. set.seed(9) for (i in 1:1000) { #Shuffle group assignments without replacement groups &lt;- sample(diseasestage, replace = FALSE, prob = NULL) # Create DGE Object DGE &lt;- DGEList(counts=Raw, group=groups) # Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] postfilter[[i]] &lt;- DGE %&gt;% &#39;[[&#39;(1) %&gt;% rownames() # Normalize based on library sizes &amp; calculate dispersion DGE &lt;- calcNormFactors(DGE) DGE &lt;- estimateCommonDisp(DGE) DGE &lt;- estimateTrendedDisp(DGE) DGE &lt;- estimateTagwiseDisp(DGE) # Test for DEGs et_acute &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;acute&quot;)) et_peak &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;peak&quot;)) et_late &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;late&quot;)) # Select DEGs by fold change &amp; pvalue results_acute &lt;- topTags(et_acute, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) results_peak &lt;- topTags(et_peak, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) results_late &lt;- topTags(et_late, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) # Save output to list acute[[i]] &lt;- results_acute$gene peak[[i]] &lt;- results_peak$gene late[[i]] &lt;- results_late$gene # End loop } 5.4.3.3 Save lists of DEGs # Postfilter Lists postfilter_df &lt;- data.frame(postfilter[[1]]) write.csv(postfilter_df, file = &quot;Output Files/txome_female_edgeR_null_DEG_postfilter.csv&quot;, row.names = FALSE) # Acute max_length &lt;- max(unlist(lapply(acute, length))) acute_filled &lt;- lapply(acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) acute_df &lt;- do.call(cbind, acute_filled) write.csv(acute_df, file = &quot;Output Files/txome_female_edgeR_null_DEG_acute.csv&quot;, row.names = FALSE) # Peak max_length &lt;- max(unlist(lapply(peak, length))) peak_filled &lt;- lapply(peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) peak_df &lt;- do.call(cbind, peak_filled) write.csv(peak_df, file = &quot;Output Files/txome_female_edgeR_null_DEG_peak.csv&quot;, row.names = FALSE) # Late max_length &lt;- max(unlist(lapply(late, length))) late_filled &lt;- lapply(late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) late_df &lt;- do.call(cbind, late_filled) write.csv(late_df, file = &quot;Output Files/txome_female_edgeR_null_DEG_late.csv&quot;, row.names = FALSE) 5.4.4 GO Enrichment Analysis 5.4.4.1 Import data acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_acute.csv&quot;) peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_peak.csv&quot;) late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_late.csv&quot;) postfilter &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_postfilter.csv&quot;) 5.4.4.2 Set up results lists go_bp_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_bp_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_bp_late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf_late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc_late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 5.4.4.3 Loops! # Acute for (i in 1:1000) { genes &lt;- acute[[i]] background &lt;- postfilter[,1] bp_test_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp_acute[[i]] &lt;- bp_test_acute$description mf_test_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf_acute[[i]] &lt;- mf_test_acute$description cc_test_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc_acute[[i]] &lt;- cc_test_acute$description } # Peak for (i in 1:1000) { genes &lt;- peak[[i]] background &lt;- postfilter[,1] bp_test_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp_peak[[i]] &lt;- bp_test_peak$description mf_test_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf_peak[[i]] &lt;- mf_test_peak$description cc_test_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc_peak[[i]] &lt;- cc_test_peak$description } ## Late for (i in 1:1000) { genes &lt;- late[[i]] background &lt;- postfilter[,1] bp_test_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp_late[[i]] &lt;- bp_test_late$description mf_test_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf_late[[i]] &lt;- mf_test_late$description cc_test_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc_late[[i]] &lt;- cc_test_late$description } 5.4.4.4 Save acute files max_length &lt;- max(unlist(lapply(go_bp_acute, length))) go_bp_acute_filled &lt;- lapply(go_bp_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_acute_final &lt;- do.call(cbind, go_bp_acute_filled) write.csv(go_bp_acute_final, file = &quot;Output Files/txome_female_edgeR_null_GO_bp_acute.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf_acute, length))) go_mf_acute_filled &lt;- lapply(go_mf_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_acute_final &lt;- do.call(cbind, go_mf_acute_filled) write.csv(go_mf_acute_final, file = &quot;Output Files/txome_female_edgeR_null_GO_mf_acute.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc_acute, length))) go_cc_acute_filled &lt;- lapply(go_cc_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_acute_final &lt;- do.call(cbind, go_cc_acute_filled) write.csv(go_cc_acute_final, file = &quot;Output Files/txome_female_edgeR_null_GO_cc_acute.csv&quot;, row.names = FALSE) 5.4.4.5 Save peak files max_length &lt;- max(unlist(lapply(go_bp_peak, length))) go_bp_peak_filled &lt;- lapply(go_bp_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_peak_final &lt;- do.call(cbind, go_bp_peak_filled) write.csv(go_bp_peak_final, file = &quot;Output Files/txome_female_edgeR_null_GO_bp_peak.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf_peak, length))) go_mf_peak_filled &lt;- lapply(go_mf_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_peak_final &lt;- do.call(cbind, go_mf_peak_filled) write.csv(go_mf_peak_final, file = &quot;Output Files/txome_female_edgeR_null_GO_mf_peak.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc_peak, length))) go_cc_peak_filled &lt;- lapply(go_cc_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_peak_final &lt;- do.call(cbind, go_cc_peak_filled) write.csv(go_cc_peak_final, file = &quot;Output Files/txome_female_edgeR_null_GO_cc_peak.csv&quot;, row.names = FALSE) 5.4.4.6 Save late files max_length &lt;- max(unlist(lapply(go_bp_late, length))) go_bp_late_filled &lt;- lapply(go_bp_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_late_final &lt;- do.call(cbind, go_bp_late_filled) write.csv(go_bp_late_final, file = &quot;Output Files/txome_female_edgeR_null_GO_bp_late.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf_late, length))) go_mf_late_filled &lt;- lapply(go_mf_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_late_final &lt;- do.call(cbind, go_mf_late_filled) write.csv(go_mf_late_final, file = &quot;Output Files/txome_female_edgeR_null_GO_mf_late.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc_late, length))) go_cc_late_filled &lt;- lapply(go_cc_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_late_final &lt;- do.call(cbind, go_cc_late_filled) write.csv(go_cc_late_final, file = &quot;Output Files/txome_female_edgeR_null_GO_cc_late.csv&quot;, row.names = FALSE) 5.4.5 KEGG Analysis 5.4.5.1 Set up results lists kegg_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) kegg_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) kegg_late &lt;-setNames(vector(&#39;list&#39;, 1000), 1:1000) 5.4.5.2 Acute for (i in 1:1000) { genes &lt;- acute[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg_acute[[i]] &lt;- NA, kegg_acute[[i]] &lt;- test$description) } # Save results max_length &lt;- max(unlist(lapply(kegg_acute, length))) kegg_acute &lt;- lapply(kegg_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg_acute &lt;- do.call(cbind, kegg_acute) write.csv(kegg_acute, file = &quot;Output Files/txome_female_edgeR_null_kegg_acute.csv&quot;, row.names = FALSE) 5.4.5.3 Peak for (i in 1:1000) { genes &lt;- peak[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg_peak[[i]] &lt;- NA, kegg_peak[[i]] &lt;- test$description) } # Save results max_length &lt;- max(unlist(lapply(kegg_peak, length))) kegg_peak &lt;- lapply(kegg_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg_peak &lt;- do.call(cbind, kegg_peak) write.csv(kegg_peak, file = &quot;Output Files/txome_female_edgeR_null_kegg_peak.csv&quot;, row.names = FALSE) 5.4.5.4 Late for (i in 1:1000) { genes &lt;- late[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg_late[[i]] &lt;- NA, kegg_late[[i]] &lt;- test$description) } # Save results max_length &lt;- max(unlist(lapply(kegg_late, length))) kegg_late &lt;- lapply(kegg_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg_late &lt;- do.call(cbind, kegg_late) write.csv(kegg_late, file = &quot;Output Files/txome_female_edgeR_null_kegg_late.csv&quot;, row.names = FALSE) 5.5 Genome Null Set - edgeR - Females 5.5.1 Libraries library(tidyverse) library(edgeR) library(WebGestaltR) 5.5.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) %&gt;% filter(!sex==&quot;male&quot;) Raw &lt;- read.csv(file = &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) 5.5.3 Loop Differential Gene Expression Analysis 5.5.3.1 Configure inputs &amp; set up results lists diseasestage &lt;- SampleInfo$disease_stage acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) postfilter &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 5.5.3.2 Loop Random number generator used to generate 9 for set.seed() function. set.seed(9) for (i in 1:1000) { #Shuffle group assignments without replacement groups &lt;- sample(diseasestage, replace = FALSE, prob = NULL) # Create DGE Object DGE &lt;- DGEList(counts=Raw, group=groups) # Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] postfilter[[i]] &lt;- DGE %&gt;% &#39;[[&#39;(1) %&gt;% rownames() # Normalize based on library sizes &amp; calculate dispersion DGE &lt;- calcNormFactors(DGE) DGE &lt;- estimateCommonDisp(DGE) DGE &lt;- estimateTrendedDisp(DGE) DGE &lt;- estimateTagwiseDisp(DGE) # Test for DEGs et_acute &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;acute&quot;)) et_peak &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;peak&quot;)) et_late &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;late&quot;)) # Select DEGs by fold change &amp; pvalue results_acute &lt;- topTags(et_acute, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) results_peak &lt;- topTags(et_peak, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) results_late &lt;- topTags(et_late, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) # Save output to list acute[[i]] &lt;- results_acute$gene peak[[i]] &lt;- results_peak$gene late[[i]] &lt;- results_late$gene # End loop } 5.5.3.3 Save lists of DEGs # Postfilter Lists postfilter_df &lt;- data.frame(postfilter[[1]]) write.csv(postfilter_df, file = &quot;Output Files/gnome_female_edgeR_null_DEG_postfilter.csv&quot;, row.names = FALSE) # Acute max_length &lt;- max(unlist(lapply(acute, length))) acute_filled &lt;- lapply(acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) acute_df &lt;- do.call(cbind, acute_filled) write.csv(acute_df, file = &quot;Output Files/gnome_female_edgeR_null_DEG_acute.csv&quot;, row.names = FALSE) # Peak max_length &lt;- max(unlist(lapply(peak, length))) peak_filled &lt;- lapply(peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) peak_df &lt;- do.call(cbind, peak_filled) write.csv(peak_df, file = &quot;Output Files/gnome_female_edgeR_null_DEG_peak.csv&quot;, row.names = FALSE) # Late max_length &lt;- max(unlist(lapply(late, length))) late_filled &lt;- lapply(late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) late_df &lt;- do.call(cbind, late_filled) write.csv(late_df, file = &quot;Output Files/gnome_female_edgeR_null_DEG_late.csv&quot;, row.names = FALSE) 5.5.4 GO Enrichment Analysis 5.5.4.1 Import data acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_acute.csv&quot;) peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_peak.csv&quot;) late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_late.csv&quot;) postfilter &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_postfilter.csv&quot;) 5.5.4.2 Set up results lists go_bp_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_bp_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_bp_late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_mf_late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) go_cc_late &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) 5.5.4.3 Acute Loop for (i in 1:1000) { genes &lt;- acute[[i]] background &lt;- postfilter[,1] bp_test_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp_acute[[i]] &lt;- bp_test_acute$description mf_test_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf_acute[[i]] &lt;- mf_test_acute$description cc_test_acute &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc_acute[[i]] &lt;- cc_test_acute$description } for (i in 1:1000) { genes &lt;- peak[[i]] background &lt;- postfilter[,1] bp_test_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp_peak[[i]] &lt;- bp_test_peak$description mf_test_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf_peak[[i]] &lt;- mf_test_peak$description cc_test_peak &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc_peak[[i]] &lt;- cc_test_peak$description } for (i in 1:1000) { genes &lt;- late[[i]] background &lt;- postfilter[,1] bp_test_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Biological_Process&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_bp_late[[i]] &lt;- bp_test_late$description mf_test_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Molecular_Function&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_mf_late[[i]] &lt;- mf_test_late$description cc_test_late &lt;- WebGestaltR(enrichMethod=&quot;ORA&quot;, organism=&quot;hsapiens&quot;, enrichDatabase=&quot;geneontology_Cellular_Component&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, sigMethod = &quot;fdr&quot;, fdrThr = 0.05, isOutput = FALSE) go_cc_late[[i]] &lt;- cc_test_late$description } 5.5.4.4 Save acute files max_length &lt;- max(unlist(lapply(go_bp_acute, length))) go_bp_acute_filled &lt;- lapply(go_bp_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_acute_final &lt;- do.call(cbind, go_bp_acute_filled) write.csv(go_bp_acute_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_bp_acute.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf_acute, length))) go_mf_acute_filled &lt;- lapply(go_mf_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_acute_final &lt;- do.call(cbind, go_mf_acute_filled) write.csv(go_mf_acute_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_mf_acute.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc_acute, length))) go_cc_acute_filled &lt;- lapply(go_cc_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_acute_final &lt;- do.call(cbind, go_cc_acute_filled) write.csv(go_cc_acute_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_cc_acute.csv&quot;, row.names = FALSE) 5.5.4.5 Save peak files max_length &lt;- max(unlist(lapply(go_bp_peak, length))) go_bp_peak_filled &lt;- lapply(go_bp_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_peak_final &lt;- do.call(cbind, go_bp_peak_filled) write.csv(go_bp_peak_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_bp_peak.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf_peak, length))) go_mf_peak_filled &lt;- lapply(go_mf_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_peak_final &lt;- do.call(cbind, go_mf_peak_filled) write.csv(go_mf_peak_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_mf_peak.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc_peak, length))) go_cc_peak_filled &lt;- lapply(go_cc_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_peak_final &lt;- do.call(cbind, go_cc_peak_filled) write.csv(go_cc_peak_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_cc_peak.csv&quot;, row.names = FALSE) 5.5.4.6 Save late files max_length &lt;- max(unlist(lapply(go_bp_late, length))) go_bp_late_filled &lt;- lapply(go_bp_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_bp_late_final &lt;- do.call(cbind, go_bp_late_filled) write.csv(go_bp_late_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_bp_late.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_mf_late, length))) go_mf_late_filled &lt;- lapply(go_mf_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_mf_late_final &lt;- do.call(cbind, go_mf_late_filled) write.csv(go_mf_late_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_mf_late.csv&quot;, row.names = FALSE) max_length &lt;- max(unlist(lapply(go_cc_late, length))) go_cc_late_filled &lt;- lapply(go_cc_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) go_cc_late_final &lt;- do.call(cbind, go_cc_late_filled) write.csv(go_cc_late_final, file = &quot;Output Files/gnome_female_edgeR_null_GO_cc_late.csv&quot;, row.names = FALSE) 5.5.5 KEGG Analysis 5.5.5.1 Set up results lists kegg_acute &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) kegg_peak &lt;- setNames(vector(&#39;list&#39;, 1000), 1:1000) kegg_late &lt;-setNames(vector(&#39;list&#39;, 1000), 1:1000) 5.5.5.2 Acute for (i in 1:1000) { genes &lt;- acute[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg_acute[[i]] &lt;- NA, kegg_acute[[i]] &lt;- test$description) } # Save results max_length &lt;- max(unlist(lapply(kegg_acute, length))) kegg_acute &lt;- lapply(kegg_acute, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg_acute &lt;- do.call(cbind, kegg_acute) write.csv(kegg_acute, file = &quot;Output Files/gnome_female_edgeR_null_kegg_acute.csv&quot;, row.names = FALSE) 5.5.5.3 Peak for (i in 1:1000) { genes &lt;- peak[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg_peak[[i]] &lt;- NA, kegg_peak[[i]] &lt;- test$description) } # Save results max_length &lt;- max(unlist(lapply(kegg_peak, length))) kegg_peak &lt;- lapply(kegg_peak, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg_peak &lt;- do.call(cbind, kegg_peak) write.csv(kegg_peak, file = &quot;Output Files/gnome_female_edgeR_null_kegg_peak.csv&quot;, row.names = FALSE) 5.5.5.4 Late for (i in 1:1000) { genes &lt;- late[[i]] background &lt;- postfilter[,1] test &lt;- WebGestaltR(enrichMethod = &quot;ORA&quot;, organism = &quot;hsapiens&quot;, enrichDatabase = &quot;pathway_KEGG&quot;, interestGene = genes, interestGeneType = &quot;genesymbol&quot;, referenceGene = background, referenceGeneType = &quot;genesymbol&quot;, minNum = 5, sigMethod = &quot;fdr&quot;, isOutput = FALSE) ifelse(is.data.frame(test)==&quot;FALSE&quot;, kegg_late[[i]] &lt;- NA, kegg_late[[i]] &lt;- test$description) } # Save results max_length &lt;- max(unlist(lapply(kegg_late, length))) kegg_late &lt;- lapply(kegg_late, function(x) {ans &lt;- rep(NA,length=max_length); ans[0:length(x)]&lt;- x; return(ans)}) kegg_late &lt;- do.call(cbind, kegg_late) write.csv(kegg_late, file = &quot;Output Files/gnome_female_edgeR_null_kegg_late.csv&quot;, row.names = FALSE) 5.6 Refine GO/KEGG *Based on Null Set results 5.6.1 Libraries library(tidyverse) library(kableExtra) library(knitr) library(ggh4x) library(gridExtra) 5.6.2 Data 5.6.2.1 GO and KEGG txome_go &lt;- read.csv(&quot;Output Files/txome_female_edgeR_go.csv&quot;) t_null_bp_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_bp_acute.csv&quot;) t_null_mf_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_mf_acute.csv&quot;) t_null_cc_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_cc_acute.csv&quot;) t_null_bp_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_bp_peak.csv&quot;) t_null_mf_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_mf_peak.csv&quot;) t_null_cc_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_cc_peak.csv&quot;) t_null_bp_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_bp_late.csv&quot;) t_null_mf_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_mf_late.csv&quot;) t_null_cc_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_cc_late.csv&quot;) txome_kegg &lt;- read.csv(&quot;Output Files/txome_female_edgeR_kegg.csv&quot;) t_kegg_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_kegg_acute.csv&quot;) t_kegg_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_kegg_peak.csv&quot;) t_kegg_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_kegg_late.csv&quot;) gnome_go &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_go.csv&quot;) g_null_bp_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_bp_acute.csv&quot;) g_null_mf_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_mf_acute.csv&quot;) g_null_cc_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_cc_acute.csv&quot;) g_null_bp_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_bp_peak.csv&quot;) g_null_mf_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_mf_peak.csv&quot;) g_null_cc_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_cc_peak.csv&quot;) g_null_bp_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_bp_late.csv&quot;) g_null_mf_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_mf_late.csv&quot;) g_null_cc_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_cc_late.csv&quot;) gnome_kegg &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_kegg.csv&quot;) g_kegg_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_kegg_acute.csv&quot;) g_kegg_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_kegg_peak.csv&quot;) g_kegg_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_kegg_late.csv&quot;) 5.6.2.2 Raw Gene Expression t_raw &lt;- read.csv(&quot;Output Files/txome_female_edgeR_normcounts.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) meta &lt;- read.csv(&quot;Input Files/metadata.csv&quot;) 5.6.3 Transcriptome 5.6.3.1 GO Term 5.6.3.1.1 What terms are overrepresented in &gt;10% of nullsets? 5.6.3.1.1.1 Acute # BP t_null_bp_acute_10 &lt;- t_null_bp_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF t_null_mf_acute_10 &lt;- t_null_mf_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC t_null_cc_acute_10 &lt;- t_null_cc_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.3.1.1.2 Peak # BP t_null_bp_peak_10 &lt;- t_null_bp_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF t_null_mf_peak_10 &lt;- t_null_mf_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC t_null_cc_peak_10 &lt;- t_null_cc_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.3.1.1.3 Late # BP t_null_bp_late_10 &lt;- t_null_bp_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF t_null_mf_late_10 &lt;- t_null_mf_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC t_null_cc_late_10 &lt;- t_null_cc_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.3.1.2 Filter results 5.6.3.1.2.1 Acute final_t_bp_acute &lt;- txome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;bp&quot; &amp; !description %in% t_null_bp_acute_10$value) final_t_mf_acute &lt;- txome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;mf&quot; &amp; !description %in% t_null_mf_acute_10$value) final_t_cc_acute &lt;- txome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;cc&quot; &amp; !description %in% t_null_cc_acute_10$value) 5.6.3.1.2.2 Peak final_t_bp_peak &lt;- txome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;bp&quot; &amp; !description %in% t_null_bp_peak_10$value) final_t_mf_peak &lt;- txome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;mf&quot; &amp; !description %in% t_null_mf_peak_10$value) final_t_cc_peak &lt;- txome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;cc&quot; &amp; !description %in% t_null_cc_peak_10$value) 5.6.3.1.2.3 Late final_t_bp_late &lt;- txome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;bp&quot; &amp; !description %in% t_null_bp_late_10$value) final_t_mf_late &lt;- txome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;mf&quot; &amp; !description %in% t_null_mf_late_10$value) final_t_cc_late &lt;- txome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;cc&quot; &amp; !description %in% t_null_cc_late_10$value) 5.6.3.2 KEGG Pathway 5.6.3.2.1 What pathways are overrepreesented in &gt;10% of nullsets? t_kegg_acute &lt;- t_kegg_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) t_kegg_peak &lt;- t_kegg_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) t_kegg_late &lt;- t_kegg_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.3.2.2 Filter Results txome_kegg_acute &lt;- txome_kegg %&gt;% filter(disease_stage==&quot;acute&quot; &amp; !description %in% t_kegg_acute$value) txome_kegg_acute %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) txome_kegg_peak &lt;- txome_kegg %&gt;% filter(disease_stage==&quot;peak&quot; &amp; !description %in% t_kegg_peak$value) txome_kegg_peak %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) 5.6.4 Genome 5.6.4.1 GO Term 5.6.4.1.1 What terms are overrepresented in &gt;10% of nullsets? 5.6.4.1.1.1 Acute # BP g_null_bp_acute_10 &lt;- g_null_bp_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF g_null_mf_acute_10 &lt;- g_null_mf_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC g_null_cc_acute_10 &lt;- g_null_cc_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.4.1.1.2 Peak # BP g_null_bp_peak_10 &lt;- g_null_bp_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF g_null_mf_peak_10 &lt;- g_null_mf_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC g_null_cc_peak_10 &lt;- g_null_cc_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.4.1.1.3 Late # BP g_null_bp_late_10 &lt;- g_null_bp_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # MF g_null_mf_late_10 &lt;- g_null_mf_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) # CC g_null_cc_late_10 &lt;- g_null_cc_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.4.1.2 Filter results 5.6.4.1.2.1 Acute final_g_bp_acute &lt;- gnome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;bp&quot; &amp; !description %in% g_null_bp_acute_10$value) final_g_mf_acute &lt;- gnome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;mf&quot; &amp; !description %in% g_null_mf_acute_10$value) final_g_cc_acute &lt;- gnome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;cc&quot; &amp; !description %in% g_null_cc_acute_10$value) 5.6.4.1.2.2 Peak final_g_bp_peak &lt;- gnome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;bp&quot; &amp; !description %in% g_null_bp_peak_10$value) final_g_mf_peak &lt;- gnome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;mf&quot; &amp; !description %in% g_null_mf_peak_10$value) final_g_cc_peak &lt;- gnome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;cc&quot; &amp; !description %in% g_null_cc_peak_10$value) 5.6.4.1.2.3 Late final_g_bp_late &lt;- gnome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;bp&quot; &amp; !description %in% g_null_bp_late_10$value) final_g_mf_late &lt;- gnome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;mf&quot; &amp; !description %in% g_null_mf_late_10$value) final_g_cc_late &lt;- gnome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;cc&quot; &amp; !description %in% g_null_cc_late_10$value) 5.6.4.2 KEGG Pathway 5.6.4.2.1 What pathways are overrepreesented in &gt;10% of nullsets? g_kegg_acute &lt;- g_kegg_acute %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) g_kegg_peak &lt;- g_kegg_peak %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) g_kegg_late &lt;- g_kegg_late %&gt;% pivot_longer(cols=1:1000) %&gt;% na.omit(value) %&gt;% group_by(value) %&gt;% summarise(count=n()) %&gt;% filter(count&gt;100) 5.6.4.2.2 Filter Results gnome_kegg_peak &lt;- gnome_kegg %&gt;% filter(disease_stage==&quot;peak&quot; &amp; !description %in% g_kegg_peak$value) gnome_kegg_peak %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) 5.6.5 GO Term Figure t_final &lt;- rbind(final_t_bp_acute, final_t_bp_peak, final_t_bp_late, final_t_mf_acute, final_t_mf_peak, final_t_mf_late, final_t_cc_acute, final_t_cc_peak, final_t_cc_late) %&gt;% mutate(approach=&quot;Transcriptome&quot;) write.csv(t_final, &quot;Output Files/txome_female_edgeR_go_refined.csv&quot;, row.names=FALSE) g_final &lt;- rbind(final_g_bp_acute, final_g_bp_peak, final_g_bp_late, final_g_mf_acute, final_g_mf_peak, final_g_mf_late, final_g_cc_acute, final_g_cc_peak, final_g_cc_late) %&gt;% mutate(approach= &quot;Genome&quot;) write.csv(g_final, &quot;Output Files/gnome_female_edgeR_go_refined.csv&quot;, row.names=FALSE) go_fig &lt;- rbind(t_final, g_final) %&gt;% mutate(disease_stage=factor( ifelse(disease_stage==&quot;acute&quot;, &quot;Acute&quot;, ifelse(disease_stage==&quot;peak&quot;, &quot;Peak&quot;, &quot;Late&quot;)), levels=c(&quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;)), go=factor( ifelse(go==&quot;bp&quot;, &quot;BP&quot;, ifelse(go==&quot;cc&quot;, &quot;CC&quot;, &quot;MF&quot;)), levels=c(&quot;BP&quot;, &quot;CC&quot;, &quot;MF&quot;)), enrichmentRatio=ifelse(direction==&quot;down&quot;, enrichmentRatio*-1, enrichmentRatio)) %&gt;% ggplot(data=., aes(x=fct_reorder(description, enrichmentRatio, .desc=TRUE), y=enrichmentRatio, fill=factor(approach))) + geom_bar(stat=&quot;identity&quot;, position=&quot;dodge&quot;) + scale_fill_manual(values=c(&quot;slategray3&quot;, &quot;slategrey&quot;), name=NULL) + labs(x=&quot;GO Term&quot;, y=&quot;Enrichment Ratio&quot;) + # scale_x_discrete(labels = function(description) str_wrap(description, width = 65))+ #scale_y_continuous(limits=c(-5,37), expand=c(0,0), n.breaks=8) + facet_nested_wrap(vars(disease_stage, go), dir=&quot;v&quot;, scales=&quot;free_y&quot;, strip.position=&quot;right&quot;, ncol=1, drop=TRUE) + force_panelsizes(rows = c(3.75, 2.5, 5.25, 5.25, 0.35, 0.75)) + theme_bw() + theme(panel.grid=element_blank(), text=element_text(size=11), legend.position=&quot;bottom&quot;, legend.justification=&quot;left&quot;, axis.title.x=element_text(vjust=-3), axis.title.y=element_text(vjust=2)) + geom_hline(yintercept=0, colour=&quot;gray40&quot;) + geom_vline(xintercept=c(1.5:20.5), colour=&quot;gray88&quot;) + coord_flip() go_fig ggsave(filename=&quot;Figures/goterm.jpg&quot;, go_fig, width=10, height=10, units=&quot;in&quot;) ggsave(filename = &quot;Figures/Figure7.pdf&quot;, go_fig, width = 10, height = 10, units = &quot;in&quot;, dpi = 600) 5.6.6 Supplemental Table 5.6.6.1 Acute GO 5.6.6.1.1 Biological Process t_sup_a_bp &lt;- txome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_bp_acute_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_a_bp &lt;- gnome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_bp_acute_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_a_bp &lt;- merge(t_sup_a_bp, g_sup_a_bp, all=TRUE) %&gt;% mutate(go=&quot;BP&quot;) 5.6.6.1.2 Cellular Component t_sup_a_cc &lt;- txome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_cc_acute_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_a_cc &lt;- gnome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_cc_acute_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_a_cc &lt;- merge(t_sup_a_cc, g_sup_a_cc, all=TRUE) %&gt;% mutate(go=&quot;CC&quot;) 5.6.6.1.3 Molecular Function t_sup_a_mf &lt;- txome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_mf_acute_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_a_mf &lt;- gnome_go %&gt;% filter(disease_stage==&quot;acute&quot; &amp; go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_mf_acute_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_a_mf &lt;- merge(t_sup_a_mf, g_sup_a_mf, all=TRUE) %&gt;% mutate(go=&quot;MF&quot;) 5.6.6.1.4 Save Tables sup_a &lt;- rbind(sup_a_bp, sup_a_cc, sup_a_mf) sup_a %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup_a, &quot;Output Files/supplemental_female_edgeR_go_acute.csv&quot;, row.names=FALSE) 5.6.6.2 Peak GO 5.6.6.2.1 Biological Process t_sup_p_bp &lt;- txome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_bp_peak_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_p_bp &lt;- gnome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_bp_peak_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_p_bp &lt;- merge(t_sup_p_bp, g_sup_p_bp, all=TRUE) %&gt;% mutate(go=&quot;BP&quot;) 5.6.6.2.2 Cellular Component t_sup_p_cc &lt;- txome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_cc_peak_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_p_cc &lt;- gnome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_cc_peak_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_p_cc &lt;- merge(t_sup_p_cc, g_sup_p_cc, all=TRUE) %&gt;% mutate(go=&quot;CC&quot;) 5.6.6.2.3 Molecular Function t_sup_p_mf &lt;- txome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_mf_peak_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_p_mf &lt;- gnome_go %&gt;% filter(disease_stage==&quot;peak&quot; &amp; go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_mf_peak_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_p_mf &lt;- merge(t_sup_p_mf, g_sup_p_mf, all=TRUE) %&gt;% mutate(go=&quot;MF&quot;) 5.6.6.2.4 Save Tables sup_p &lt;- rbind(sup_p_bp, sup_p_cc, sup_p_mf) sup_p %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup_p, &quot;Output Files/supplemental_female_edgeR_go_peak.csv&quot;, row.names=FALSE) 5.6.6.3 Late GO 5.6.6.3.1 Biological Process t_sup_l_bp &lt;- txome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_bp_late_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_l_bp &lt;- gnome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;bp&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_bp_late_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_l_bp &lt;- merge(t_sup_l_bp, g_sup_l_bp, all=TRUE) %&gt;% mutate(go=&quot;BP&quot;) 5.6.6.3.2 Cellular Component t_sup_l_cc &lt;- txome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_cc_late_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_l_cc &lt;- gnome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;cc&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_cc_late_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_l_cc &lt;- merge(t_sup_l_cc, g_sup_l_cc, all=TRUE) %&gt;% mutate(go=&quot;CC&quot;) 5.6.6.3.3 Molecular Function t_sup_l_mf &lt;- txome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Transcriptome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_null_mf_late_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Transcriptome, Transcriptome_null) g_sup_l_mf &lt;- gnome_go %&gt;% filter(disease_stage==&quot;late&quot; &amp; go==&quot;mf&quot;) %&gt;% mutate(GOTerm = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), enrichmentRatio = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), enrichmentRatio = ifelse(direction==&quot;down&quot;, paste(&quot;-&quot;, enrichmentRatio, sep=&quot;&quot;), paste(&quot;+&quot;, enrichmentRatio, sep=&quot;&quot;)), Genome = paste(enrichmentRatio, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_null_mf_late_10$value, &quot;x&quot;, &quot;&quot;)) %&gt;% select(GOTerm, Genome, Genome_null) sup_l_mf &lt;- merge(t_sup_l_mf, g_sup_l_mf, all=TRUE) %&gt;% mutate(go=&quot;MF&quot;) 5.6.6.3.4 Save Tables sup_l &lt;- rbind(sup_l_bp, sup_l_cc, sup_l_mf) sup_l %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup_l, &quot;Output Files/supplemental_female_edgeR_go_late.csv&quot;, row.names=FALSE) 5.6.6.4 KEGG 5.6.6.4.1 Acute t_sup_kegg_a &lt;- txome_kegg %&gt;% filter(disease_stage==&quot;acute&quot;) %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Transcriptome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_kegg_acute$value, &quot;x&quot;, &quot;&quot;), Transcriptome_Genes = userId) %&gt;% select(KEGG, Transcriptome, Transcriptome_null, Transcriptome_Genes) g_sup_kegg_a &lt;- gnome_kegg %&gt;% filter(disease_stage==&quot;acute&quot;) %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Genome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_kegg_acute$value, &quot;x&quot;, &quot;&quot;), Genome_Genes = userId) %&gt;% select(KEGG, Genome, Genome_null, Genome_Genes) sup_kegg_a &lt;- merge(t_sup_kegg_a, g_sup_kegg_a, all=TRUE) sup_kegg_a %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup_kegg_a, &quot;Output Files/supplemental_female_edgeR_kegg_acute.csv&quot;, row.names=FALSE) 5.6.6.4.2 Peak t_sup_kegg_p &lt;- txome_kegg %&gt;% filter(disease_stage==&quot;peak&quot;) %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Transcriptome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_kegg_peak$value, &quot;x&quot;, &quot;&quot;), Transcriptome_Genes = userId) %&gt;% select(KEGG, Transcriptome, Transcriptome_null, Transcriptome_Genes) g_sup_kegg_p &lt;- gnome_kegg %&gt;% filter(disease_stage==&quot;peak&quot;) %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Genome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_kegg_peak$value, &quot;x&quot;, &quot;&quot;), Genome_Genes = userId) %&gt;% select(KEGG, Genome, Genome_null, Genome_Genes) sup_kegg_p &lt;- merge(t_sup_kegg_p, g_sup_kegg_p, all=TRUE) sup_kegg_p %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup_kegg_p, &quot;Output Files/supplemental_female_edgeR_kegg_peak.csv&quot;, row.names=FALSE) 5.6.6.4.3 Late t_sup_kegg_l &lt;- txome_kegg %&gt;% filter(disease_stage==&quot;late&quot;) %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Transcriptome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Transcriptome_null = ifelse(description %in% t_kegg_late$value, &quot;x&quot;, &quot;&quot;), Transcriptome_Genes = userId) %&gt;% select(KEGG, Transcriptome, Transcriptome_null, Transcriptome_Genes) g_sup_kegg_l &lt;- gnome_kegg %&gt;% filter(disease_stage==&quot;late&quot;) %&gt;% mutate(KEGG = paste(description, &quot; &quot;, &quot;(&quot;, geneSet, &quot;)&quot;, sep=&quot;&quot;), Enrichment = round(enrichmentRatio, digits=1), FDR = round(FDR, digits=3), Genome = paste(Enrichment, &quot; &quot;, &quot;(&quot;, FDR, &quot;)&quot;, sep=&quot;&quot;), Genome_null = ifelse(description %in% g_kegg_late$value, &quot;x&quot;, &quot;&quot;), Genome_Genes = userId) %&gt;% select(KEGG, Genome, Genome_null, Genome_Genes) sup_kegg_l &lt;- merge(t_sup_kegg_l, g_sup_kegg_l, all=TRUE) sup_kegg_l %&gt;% kable() %&gt;% kable_styling(&quot;basic&quot;) write.csv(sup_kegg_l, &quot;Output Files/supplemental_female_edgeR_kegg_late.csv&quot;, row.names=FALSE) "],["supplemental-null-set-exploratory-statistics.html", "6 Supplemental Null Set Exploratory Statistics 6.1 Libaries 6.2 Number of DEGs 6.3 DEG Frequency 6.4 Number of GO terms 6.5 Number of KEGG Pathways", " 6 Supplemental Null Set Exploratory Statistics 6.1 Libaries library(tidyverse) library(ggh4x) 6.2 Number of DEGs 6.2.1 Data t_virus_genes &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_DEG.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;V+ vs V-&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) t_acute_genes &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Acute&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) t_peak_genes &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Peak&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) t_late_genes &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Late&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_virus_genes &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_DEG.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;V+ vs V-&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_acute_genes &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Acute&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_peak_genes &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Peak&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_late_genes &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Late&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) genes &lt;- rbind(t_virus_genes, g_virus_genes, t_acute_genes, t_peak_genes, t_late_genes, g_acute_genes, g_peak_genes, g_late_genes) %&gt;% mutate(approach=factor(approach, levels=c(&quot;Transcriptome&quot;, &quot;Genome&quot;)), stage=factor(stage, levels=c(&quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;))) 6.2.2 Quick Stats range(t_virus_genes$genes) range(g_virus_genes$genes) range(t_acute_genes$genes) range(t_peak_genes$genes) range(t_late_genes$genes) range(g_acute_genes$genes) range(g_peak_genes$genes) range(g_late_genes$genes) 6.2.3 Plot null_genes_plot &lt;- ggplot(genes, aes(x=stage, y=log(genes))) + geom_boxplot() + facet_grid(~approach) + labs(x= NULL, y=&quot;log(# DEGs) per Trial&quot;) + theme_bw() + theme(panel.grid=element_blank()) 6.3 DEG Frequency 6.3.1 Data t_virus_genefreq &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_DEG.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;V+ vs V-&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) t_acute_genefreq &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Acute&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) t_peak_genefreq &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Peak&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) t_late_genefreq &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_DEG_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Late&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_virus_genefreq &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_DEG.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;V+ vs V-&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_acute_genefreq &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Acute&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_peak_genefreq &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Peak&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) g_late_genefreq &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_DEG_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% unlist() %&gt;% table() %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Late&quot;) %&gt;% dplyr::rename(&quot;genes&quot; = &quot;.&quot;) genefreq &lt;- rbind(t_virus_genefreq, g_virus_genefreq, t_acute_genefreq, t_peak_genefreq, t_late_genefreq, g_acute_genefreq, g_peak_genefreq, g_late_genefreq) %&gt;% mutate(approach=factor(approach, levels=c(&quot;Transcriptome&quot;, &quot;Genome&quot;)), stage=factor(stage, levels=c(&quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;))) 6.3.2 Quick Stats range(t_acute_genefreq$Freq) range(t_peak_genefreq$Freq) range(t_late_genefreq$Freq) range(g_acute_genefreq$Freq) range(g_peak_genefreq$Freq) range(g_late_genefreq$Freq) 6.3.3 Plot null_genefreq_plot &lt;- ggplot(genefreq, aes(x=stage, y=log(Freq))) + geom_boxplot() + facet_grid(~approach) + labs(x = NULL, y=&quot;log(Gene Frequency)&quot;) + theme_bw() + theme(panel.grid=element_blank()) 6.3.4 Combine gene number &amp; frequency plots gene_numfreq &lt;- grid.arrange(null_genes_plot, null_genefreq_plot, ncol=1, bottom=&quot;Influenza Stage&quot;) ggsave(&quot;Figures/supplemental_TG_F_null_genenum-freq.jpg&quot;, gene_numfreq, width=6, height=6, units=&quot;in&quot;) 6.4 Number of GO terms 6.4.1 Data - Import &amp; Configure t_virus_bp &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_GO_bp.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;V+ vs V-&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_virus_cc &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_GO_cc.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;V+ vs V-&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_virus_mf &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_GO_mf.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;V+ vs V-&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_acute_bp &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_bp_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Acute&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_acute_cc &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_cc_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Acute&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_acute_mf &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_mf_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Acute&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_peak_bp &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_bp_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Peak&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_peak_cc &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_cc_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Peak&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_peak_mf &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_mf_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Peak&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_late_bp &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_bp_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Late&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_late_cc &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_cc_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Late&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_late_mf &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_GO_mf_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Late&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_virus_bp &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_bp.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;V+ vs V-&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_virus_cc &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_cc.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;V+ vs V-&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_virus_mf &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_GO_mf.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;V+ vs V-&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_acute_bp &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_bp_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Acute&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_acute_cc &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_cc_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Acute&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_acute_mf &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_mf_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Acute&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_peak_bp &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_bp_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Peak&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_peak_cc &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_cc_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Peak&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_peak_mf &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_mf_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Peak&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_late_bp &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_bp_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Late&quot;, go=&quot;Biological Process&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_late_cc &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_cc_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Late&quot;, go=&quot;Cellular Component&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_late_mf &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_GO_mf_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Late&quot;, go=&quot;Molecular Function&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) goterms &lt;- rbind(t_virus_bp, t_virus_cc, t_virus_mf, t_acute_bp, t_acute_cc, t_acute_mf, t_peak_bp, t_peak_cc, t_peak_mf, t_late_bp, t_late_cc, t_late_mf, g_virus_bp, g_virus_cc, g_virus_mf, g_acute_bp, g_acute_cc, g_acute_mf, g_peak_bp, g_peak_cc, g_peak_mf, g_late_bp, g_late_cc, g_late_mf) %&gt;% mutate(approach=factor(approach, levels=c(&quot;Transcriptome&quot;, &quot;Genome&quot;)), stage=factor(stage, levels=c(&quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;))) 6.4.2 Plot null_go_plot &lt;- ggplot(goterms, aes(x=stage, y=log(terms))) + geom_boxplot() + facet_nested_wrap(vars(approach, go), dir=&quot;h&quot;, strip.position=&quot;top&quot;, ncol=3, drop=TRUE) + labs(x=&quot;Influenza Stage&quot;, y=&quot;log(# GO Terms) per Trial&quot;) + theme_bw() + theme(panel.grid=element_blank()) ggsave(&quot;Figures/supplemental_TG_F_null_#gotermsplot.jpg&quot;, null_go_plot, width=5, height=7, units=&quot;in&quot;) 6.5 Number of KEGG Pathways 6.5.1 Data t_virus_kegg &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_null_kegg.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;V+ vs V-&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_acute_kegg &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_kegg_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Acute&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_peak_kegg &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_kegg_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Peak&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) t_late_kegg &lt;- read.csv(&quot;Output Files/txome_female_edgeR_null_kegg_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Transcriptome&quot;, stage=&quot;Late&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_virus_kegg &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_null_kegg.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;V+ vs V-&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_acute_kegg &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_kegg_acute.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Acute&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_peak_kegg &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_kegg_peak.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Peak&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) g_late_kegg &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_null_kegg_late.csv&quot;) %&gt;% as.list() %&gt;% lapply(., function(x) x[!is.na(x)]) %&gt;% lengths(., use.names=TRUE) %&gt;% data.frame() %&gt;% mutate(approach=&quot;Genome&quot;, stage=&quot;Late&quot;) %&gt;% dplyr::rename(&quot;terms&quot; = &quot;.&quot;) kegg &lt;- rbind(t_virus_kegg, t_acute_kegg, t_peak_kegg, t_late_kegg, g_virus_kegg, g_acute_kegg, g_peak_kegg, g_late_kegg) %&gt;% mutate(approach=factor(approach, levels=c(&quot;Transcriptome&quot;, &quot;Genome&quot;)), stage=factor(stage, levels=c( &quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;))) 6.5.2 Plot null_kegg_plot &lt;- ggplot(kegg, aes(x=stage, y=log(terms))) + geom_boxplot() + facet_grid(~approach) + labs(x=&quot;Influenza Stage&quot;, y=&quot;log(# KEGG Pathways) per Trial&quot;) + theme_bw() + theme(panel.grid=element_blank()) ggsave(&quot;Figures/supplemental_TG_F_null_#keggplot.jpg&quot;, null_kegg_plot, width=6, height=3, units=&quot;in&quot;) "],["influenza-dge-deseq2.html", "7 Influenza DGE DESeq2 7.1 Transcriptome - DESeq2 - Females 7.2 Genome - DESeq2 - Females", " 7 Influenza DGE DESeq2 7.1 Transcriptome - DESeq2 - Females 7.1.1 Libraries library(tidyverse) library(DESeq2) library(ggpubr) 7.1.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) %&gt;% filter(!sex==&quot;male&quot;) %&gt;% mutate(RNA = ifelse(disease_stage == &quot;acute&quot;, &quot;viruspos&quot;, ifelse(disease_stage == &quot;peak&quot;, &quot;viruspos&quot;, &quot;virusneg&quot;))) Raw &lt;- read.csv(file = &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) SampleInfo &lt;- SampleInfo %&gt;% column_to_rownames(var=&quot;sample&quot;) 7.1.3 Viral RNA 7.1.3.1 Create DESeq Dataset (dds) count_matrix &lt;- as.matrix(Raw) dds_virus &lt;- DESeqDataSetFromMatrix(countData = round(count_matrix), colData = SampleInfo, design = ~ RNA) dds_virus 7.1.3.2 Filter to remove lowly expressed genes (&lt;10 counts) keep &lt;- rowSums(counts(dds_virus)) &gt;= 10 dds_virus &lt;- dds_virus[keep,] 7.1.3.3 Set reference level to virus neg group - which group to compare against dds_virus$RNA &lt;- factor(dds_virus$RNA, levels = c(&quot;virusneg&quot;,&quot;viruspos&quot;)) dds_virus$RNA &lt;- relevel(dds_virus$RNA, ref = &quot;virusneg&quot;) 7.1.3.4 Test for differentially expressed genes cooksCutoff = results function automatically flags genes that contain a Cook’s distance above a cutoff for samples which have 3 or more replicates dds_virus &lt;- DESeq(dds_virus) results_virus &lt;- results(dds_virus, contrast=c(&quot;RNA&quot;, &quot;viruspos&quot;, &quot;virusneg&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) 7.1.3.5 Save results write.csv(results_virus, &quot;Output Files/txome_female_deseq_viralRNA_DGE_results.csv&quot;, row.names=FALSE) 7.1.3.6 Select DE genes with absolute logFC&gt;1 and p-value&lt;0.05 de_virus &lt;- results_virus %&gt;% filter(pvalue&lt;0.05 &amp; abs(log2FoldChange)&gt;1) 7.1.3.7 Save results write.csv(de_virus, &quot;Output Files/txome_female_deseq_viralRNA_DEG.csv&quot;, row.names=FALSE) 7.1.4 Influenza Stage 7.1.4.1 Create DESeq Dataset (dds) count_matrix &lt;- as.matrix(Raw) dds &lt;- DESeqDataSetFromMatrix(countData = round(count_matrix), colData = SampleInfo, design = ~ disease_stage) dds 7.1.4.2 Filter to remove lowly expressed genes (&lt;10 counts) keep &lt;- rowSums(counts(dds)) &gt;= 10 dds &lt;- dds[keep,] 7.1.4.3 Set reference level to control group - which group to compare against dds$disease_stage &lt;- factor(dds$disease_stage, levels = c(&quot;control&quot;,&quot;acute&quot;,&quot;peak&quot;,&quot;late&quot;)) dds$disease_stage &lt;- relevel(dds$disease_stage, ref = &quot;control&quot;) 7.1.4.4 Test for differentially expressed genes cooksCutoff = results function automatically flags genes that contain a Cook’s distance above a cutoff for samples which have 3 or more replicates dds &lt;- DESeq(dds) results_acute &lt;- results(dds, contrast=c(&quot;disease_stage&quot;, &quot;acute&quot;, &quot;control&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) results_peak &lt;- results(dds, contrast=c(&quot;disease_stage&quot;, &quot;peak&quot;, &quot;control&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) results_late &lt;- results(dds, contrast=c(&quot;disease_stage&quot;, &quot;late&quot;, &quot;control&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) 7.1.4.5 Save results write.csv(results_acute, &quot;Output Files/txome_female_deseq_DGE_results_acute.csv&quot;, row.names=FALSE) write.csv(results_peak, &quot;Output Files/txome_female_deseq_DGE_results_peak.csv&quot;, row.names=FALSE) write.csv(results_late, &quot;Output Files/txome_female_deseq_DGE_results_late.csv&quot;, row.names=FALSE) 7.1.4.6 Select DE genes with absolute logFC&gt;1 and p-value&lt;0.05 de_acute &lt;- results_acute %&gt;% filter(pvalue&lt;0.05 &amp; abs(log2FoldChange)&gt;1) de_peak &lt;- results_peak %&gt;% filter(pvalue&lt;0.05, abs(log2FoldChange)&gt;1) de_late &lt;- results_late %&gt;% filter(pvalue&lt;0.05, abs(log2FoldChange)&gt;1) 7.1.4.7 Save results write.csv(de_acute, &quot;Output Files/txome_female_deseq_DEG_acute.csv&quot;, row.names=FALSE) write.csv(de_peak, &quot;Output Files/txome_female_deseq_DEG_peak.csv&quot;, row.names=FALSE) write.csv(de_late, &quot;Output Files/txome_female_deseq_DEG_late.csv&quot;, row.names=FALSE) 7.2 Genome - DESeq2 - Females 7.2.1 Libraries library(tidyverse) library(DESeq2) library(ggpubr) 7.2.2 Data Unknown = female SampleInfo &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% mutate(year=as.factor(year)) %&gt;% filter(!sex==&quot;male&quot;) %&gt;% mutate(RNA = ifelse(disease_stage == &quot;acute&quot;, &quot;viruspos&quot;, ifelse(disease_stage == &quot;peak&quot;, &quot;viruspos&quot;, &quot;virusneg&quot;))) Raw &lt;- read.csv(file = &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, stringsAsFactors = FALSE, header = TRUE, row.names = 1) %&gt;% select(SampleInfo$sample) SampleInfo &lt;- SampleInfo %&gt;% column_to_rownames(var=&quot;sample&quot;) 7.2.3 Viral RNA 7.2.3.1 Create DESeq Dataset (dds) count_matrix &lt;- as.matrix(Raw) dds_virus &lt;- DESeqDataSetFromMatrix(countData = round(count_matrix), colData = SampleInfo, design = ~ RNA) dds_virus 7.2.3.2 Filter to remove lowly expressed genes (&lt;10 counts) keep &lt;- rowSums(counts(dds_virus)) &gt;= 10 dds_virus &lt;- dds_virus[keep,] 7.2.3.3 Set reference level to virus neg group - which group to compare against dds_virus$RNA &lt;- factor(dds_virus$RNA, levels = c(&quot;virusneg&quot;,&quot;viruspos&quot;)) dds_virus$RNA &lt;- relevel(dds_virus$RNA, ref = &quot;virusneg&quot;) 7.2.3.4 Test for differentially expressed genes cooksCutoff = results function automatically flags genes that contain a Cook’s distance above a cutoff for samples which have 3 or more replicates dds_virus &lt;- DESeq(dds_virus) results_virus &lt;- results(dds_virus, contrast=c(&quot;RNA&quot;, &quot;viruspos&quot;, &quot;virusneg&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) 7.2.3.5 Save results write.csv(results_virus, &quot;Output Files/gnome_female_deseq_viralRNA_DGE_results.csv&quot;, row.names=FALSE) 7.2.3.6 Select DE genes with absolute logFC&gt;1 and p-value&lt;0.05 de_virus &lt;- results_virus %&gt;% filter(pvalue&lt;0.05 &amp; abs(log2FoldChange)&gt;1) 7.2.3.7 Save results write.csv(de_virus, &quot;Output Files/gnome_female_deseq_viralRNA_DEG.csv&quot;, row.names=FALSE) 7.2.4 Influenza Stage 7.2.4.1 Create DESeq Dataset (dds) count_matrix &lt;- as.matrix(Raw) dds &lt;- DESeqDataSetFromMatrix(countData = round(count_matrix), colData = SampleInfo, design = ~ disease_stage) dds 7.2.4.2 Filter to remove lowly expressed genes (&lt;10 counts) keep &lt;- rowSums(counts(dds)) &gt;= 10 dds &lt;- dds[keep,] 7.2.4.3 Set reference level to control group - which group to compare against dds$disease_stage &lt;- factor(dds$disease_stage, levels = c(&quot;control&quot;,&quot;acute&quot;,&quot;peak&quot;,&quot;late&quot;)) dds$disease_stage &lt;- relevel(dds$disease_stage, ref = &quot;control&quot;) 7.2.4.4 Test for differentially expressed genes cooksCutoff = results function automatically flags genes that contain a Cook’s distance above a cutoff for samples which have 3 or more replicates dds &lt;- DESeq(dds) results_acute &lt;- results(dds, contrast=c(&quot;disease_stage&quot;, &quot;acute&quot;, &quot;control&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) results_peak &lt;- results(dds, contrast=c(&quot;disease_stage&quot;, &quot;peak&quot;, &quot;control&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) results_late &lt;- results(dds, contrast=c(&quot;disease_stage&quot;, &quot;late&quot;, &quot;control&quot;), cooksCutoff=FALSE) %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;gene&quot;) 7.2.4.5 Save results write.csv(results_acute, &quot;Output Files/gnome_female_deseq_DGE_results_acute.csv&quot;, row.names=FALSE) write.csv(results_peak, &quot;Output Files/gnome_female_deseq_DGE_results_peak.csv&quot;, row.names=FALSE) write.csv(results_late, &quot;Output Files/gnome_female_deseq_DGE_results_late.csv&quot;, row.names=FALSE) 7.2.4.6 Select DE genes with absolute logFC&gt;1 and p-value&lt;0.05 de_acute &lt;- results_acute %&gt;% filter(pvalue&lt;0.05 &amp; abs(log2FoldChange)&gt;1) de_peak &lt;- results_peak %&gt;% filter(pvalue&lt;0.05, abs(log2FoldChange)&gt;1) de_late &lt;- results_late %&gt;% filter(pvalue&lt;0.05, abs(log2FoldChange)&gt;1) 7.2.4.7 Save results write.csv(de_acute, &quot;Output Files/gnome_female_deseq_DEG_acute.csv&quot;, row.names=FALSE) write.csv(de_peak, &quot;Output Files/gnome_female_deseq_DEG_peak.csv&quot;, row.names=FALSE) write.csv(de_late, &quot;Output Files/gnome_female_deseq_DEG_late.csv&quot;, row.names=FALSE) "],["r-package-comparison---edger-vs-deseq2.html", "8 R Package Comparison - edgeR vs DESeq2 8.1 Libraries 8.2 Data 8.3 edgeR vs DESeq2 8.4 Transcriptome vs Genome", " 8 R Package Comparison - edgeR vs DESeq2 8.1 Libraries library(tidyverse) library(ggpubr) library(VennDiagram) library(ggfortify) library(gridExtra) 8.2 Data 8.2.1 Metadata metadata &lt;- read.csv(&quot;Input Files/metadata.csv&quot;) %&gt;% filter(!sex==&quot;male&quot;) %&gt;% mutate(disease_stage=factor(disease_stage, levels=c(&quot;control&quot;,&quot;acute&quot;,&quot;peak&quot;,&quot;late&quot;)), year=factor(year), RNA = ifelse(disease_stage == &quot;acute&quot;, &quot;virus+&quot;, ifelse(disease_stage == &quot;peak&quot;, &quot;virus+&quot;, &quot;virus-&quot;))) 8.2.2 Results from DGE testing txome_edge_virus &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_DGE_results.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_edge_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DGE_results_acute.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_edge_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DGE_results_peak.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_edge_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DGE_results_late.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_deseq_virus &lt;- read.csv(&quot;Output Files/txome_female_deseq_viralRNA_DGE_results.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) txome_deseq_acute &lt;- read.csv(&quot;Output Files/txome_female_deseq_DGE_results_acute.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) txome_deseq_peak &lt;- read.csv(&quot;Output Files/txome_female_deseq_DGE_results_peak.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) txome_deseq_late &lt;- read.csv(&quot;Output Files/txome_female_deseq_DGE_results_late.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_edge_virus &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_DGE_results.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_edge_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DGE_results_acute.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_edge_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DGE_results_peak.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_edge_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DGE_results_late.csv&quot;) %&gt;% dplyr::rename(&quot;gene&quot; = &quot;X&quot;) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_deseq_virus &lt;- read.csv(&quot;Output Files/gnome_female_deseq_viralRNA_DGE_results.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_deseq_acute &lt;- read.csv(&quot;Output Files/gnome_female_deseq_DGE_results_acute.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_deseq_peak &lt;- read.csv(&quot;Output Files/gnome_female_deseq_DGE_results_peak.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_deseq_late &lt;- read.csv(&quot;Output Files/gnome_female_deseq_DGE_results_late.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) 8.2.3 Differentially expressed genes only txome_edge_DEG_virus &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_DEG.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_edge_DEG_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_acute.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_edge_DEG_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_peak.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_edge_DEG_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_late.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) txome_deseq_DEG_virus &lt;- read.csv(&quot;Output Files/txome_female_deseq_viralRNA_DEG.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) txome_deseq_DEG_acute &lt;- read.csv(&quot;Output Files/txome_female_deseq_DEG_acute.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) txome_deseq_DEG_peak &lt;- read.csv(&quot;Output Files/txome_female_deseq_DEG_peak.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) txome_deseq_DEG_late &lt;- read.csv(&quot;Output Files/txome_female_deseq_DEG_late.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_edge_DEG_virus &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_DEG.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_edge_DEG_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_acute.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_edge_DEG_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_peak.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_edge_DEG_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_late.csv&quot;, row.names=1) %&gt;% rename_with(~paste0(&quot;edge_&quot;, .)) gnome_deseq_DEG_virus &lt;- read.csv(&quot;Output Files/gnome_female_deseq_viralRNA_DEG.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_deseq_DEG_acute &lt;- read.csv(&quot;Output Files/gnome_female_deseq_DEG_acute.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_deseq_DEG_peak &lt;- read.csv(&quot;Output Files/gnome_female_deseq_DEG_peak.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) gnome_deseq_DEG_late &lt;- read.csv(&quot;Output Files/gnome_female_deseq_DEG_late.csv&quot;) %&gt;% mutate(logbaseMean=log(baseMean)) %&gt;% rename_with(~paste0(&quot;deseq_&quot;, .)) 8.2.4 Pre-filter lists txome_raw &lt;- read.table(&quot;Input Files/txome_genecounts.txt&quot;) gnome_raw &lt;- read.table(&quot;Input Files/gnome_genecounts.txt&quot;) 8.2.5 Normalized gene counts txome_norm &lt;- read.csv(&quot;Output Files/txome_female_edgeR_normcounts.csv&quot;, row.names=1) txome_norm_virus &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_normcounts.csv&quot;, row.names=1) gnome_norm &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_normcounts.csv&quot;, row.names=1) gnome_norm_virus &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_normcounts.csv&quot;, row.names=1) 8.3 edgeR vs DESeq2 8.3.1 Number of Pre vs Post Filter Genes nrow(txome_raw) nrow(txome_edge_virus) nrow(txome_raw)-nrow(txome_edge_virus) (nrow(txome_raw)-nrow(txome_edge_virus))/nrow(txome_raw) nrow(txome_edge_acute) nrow(txome_raw)-nrow(txome_edge_acute) (nrow(txome_raw)-nrow(txome_edge_acute))/nrow(txome_raw) nrow(txome_deseq_virus) nrow(txome_raw)-nrow(txome_deseq_virus) (nrow(txome_raw)-nrow(txome_deseq_virus))/nrow(txome_raw) nrow(txome_deseq_acute) nrow(txome_raw)-nrow(txome_deseq_acute) (nrow(txome_raw)-nrow(txome_deseq_acute))/nrow(txome_raw) nrow(gnome_raw) nrow(gnome_edge_virus) nrow(gnome_raw)-nrow(gnome_edge_virus) (nrow(gnome_raw)-nrow(gnome_edge_virus))/nrow(gnome_raw) nrow(gnome_edge_acute) nrow(gnome_raw)-nrow(gnome_edge_acute) (nrow(gnome_raw)-nrow(gnome_edge_acute))/nrow(gnome_raw) nrow(gnome_deseq_virus) nrow(gnome_raw)-nrow(gnome_deseq_virus) (nrow(gnome_raw)-nrow(gnome_deseq_virus))/nrow(gnome_raw) nrow(gnome_deseq_acute) nrow(gnome_raw)-nrow(gnome_deseq_acute) (nrow(gnome_raw)-nrow(gnome_deseq_acute))/nrow(gnome_raw) 8.3.2 Merge results txome_virus &lt;- merge(txome_edge_virus, txome_deseq_virus, all.x=FALSE, by.x=&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) txome_acute &lt;- merge(txome_edge_acute, txome_deseq_acute, all.x=FALSE, by.x =&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) txome_peak &lt;- merge(txome_edge_peak, txome_deseq_peak, all.x=FALSE, by.x =&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) txome_late &lt;- merge(txome_edge_late, txome_deseq_late, all.x=FALSE, by.x =&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) gnome_virus &lt;- merge(gnome_edge_virus, gnome_deseq_virus, all.x=FALSE, by.x=&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) gnome_acute &lt;- merge(gnome_edge_acute, gnome_deseq_acute, all.x=FALSE, by.x =&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) gnome_peak &lt;- merge(gnome_edge_peak, gnome_deseq_peak, all.x=FALSE, by.x =&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) gnome_late &lt;- merge(gnome_edge_late, gnome_deseq_late, all.x=FALSE, by.x =&quot;edge_gene&quot;, by.y=&quot;deseq_gene&quot;) 8.3.3 p-value 8.3.3.1 Transcriptome txome_pvalue_virus &lt;- ggscatter(txome_virus, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Transcriptome Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_pvalue_acute &lt;- ggscatter(txome_acute, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Transcriptome Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_pvalue_peak &lt;- ggscatter(txome_peak, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Transcriptome Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_pvalue_late &lt;- ggscatter(txome_late, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Transcriptome Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_pvalue &lt;- ggarrange(txome_pvalue_virus, txome_pvalue_acute, txome_pvalue_peak, txome_pvalue_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.3.3.2 Genome gnome_pvalue_virus &lt;- ggscatter(gnome_virus, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Genome Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_pvalue_acute &lt;- ggscatter(gnome_acute, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Genome Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_pvalue_peak &lt;- ggscatter(gnome_peak, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Genome Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_pvalue_late &lt;- ggscatter(gnome_late, x = &quot;edge_PValue&quot;, y = &quot;deseq_pvalue&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR p-value&quot;, ylab = &quot;DESeq2 p-value&quot;, main = &quot;Genome Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_pvalue &lt;- ggarrange(gnome_pvalue_virus, gnome_pvalue_acute, gnome_pvalue_peak, gnome_pvalue_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.3.3.3 Combine method_pvalue &lt;- ggarrange(txome_pvalue, gnome_pvalue, ncol=1) ggsave(&quot;Figures/supplemental_TG_methodcomp_pvalue.jpeg&quot;, method_pvalue, width=18, height=9, units=&quot;in&quot;) 8.3.4 log(FC) 8.3.4.1 Transcriptome txome_fc_virus &lt;- ggscatter(txome_virus, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Transcriptome Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_fc_acute &lt;- ggscatter(txome_acute, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Transcriptome Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_fc_peak &lt;- ggscatter(txome_peak, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Transcriptome Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_fc_late &lt;- ggscatter(txome_late, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Transcriptome Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_fc &lt;- ggarrange(txome_fc_virus, txome_fc_acute, txome_fc_peak, txome_fc_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.3.4.2 Genome gnome_fc_virus &lt;- ggscatter(gnome_virus, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Genome Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_fc_acute &lt;- ggscatter(gnome_acute, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Genome Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_fc_peak &lt;- ggscatter(gnome_peak, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Genome Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_fc_late &lt;- ggscatter(gnome_late, x = &quot;edge_logFC&quot;, y = &quot;deseq_log2FoldChange&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, xlab = &quot;edgeR log2(Fold Change)&quot;, ylab = &quot;DESeq2 log2(Fold Change)&quot;, main = &quot;Genome Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_fc &lt;- ggarrange(gnome_fc_virus, gnome_fc_acute, gnome_fc_peak, gnome_fc_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.3.4.3 Combine method_fc &lt;- ggarrange(txome_fc, gnome_fc, ncol=1) ggsave(&quot;Figures/supplemental_TG_methodcomp_foldchange.jpeg&quot;, method_fc, width=18, height=9, units=&quot;in&quot;) 8.3.5 log mean expression 8.3.5.1 Transcriptome txome_virus_exp &lt;- ggscatter(txome_virus, x = &quot;edge_logCPM&quot;, y = &quot;deseq_logbaseMean&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;edgeR log2(CPM)&quot;, ylab = &quot;DESeq2 log2(baseMean)&quot;, main = &quot;Transcriptome Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) txome_exp &lt;- ggscatter(txome_acute, x = &quot;edge_logCPM&quot;, y = &quot;deseq_logbaseMean&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;edgeR log2(CPM)&quot;, ylab = &quot;DESeq2 log2(baseMean)&quot;, main = &quot;Transcriptome Control vs Acute, Peak, Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.3.5.2 Genome gnome_virus_exp &lt;- ggscatter(gnome_virus, x = &quot;edge_logCPM&quot;, y = &quot;deseq_logbaseMean&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;edgeR log2(CPM)&quot;, ylab = &quot;DESeq2 log2(baseMean)&quot;, main = &quot;Genome Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) gnome_exp &lt;- ggscatter(gnome_acute, x = &quot;edge_logCPM&quot;, y = &quot;deseq_logbaseMean&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;edgeR log2(CPM)&quot;, ylab = &quot;DESeq2 log2(baseMean)&quot;, main = &quot;Genome Control vs Acute, Peak, Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.3.5.3 Combine method_exp &lt;- ggarrange(txome_virus_exp, txome_exp, gnome_virus_exp, gnome_exp, ncol=2, nrow=2) ggsave(&quot;Figures/supplemental_TG_methodcomp_expression.jpeg&quot;, method_exp, width=10, height=10, units=&quot;in&quot;) 8.3.6 DGE explortory stats 8.3.6.1 Pre vs Post Filter filter_stats &lt;- data.frame( approach=c(&quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;), method=c(&quot;Raw&quot;, &quot;edgeR_Virus&quot;, &quot;DESeq2_Virus&quot;, &quot;edgeR_CAPL&quot;, &quot;DESeq2_CAPL&quot;, &quot;Raw&quot;, &quot;edgeR_Virus&quot;, &quot;DESeq2_Virus&quot;, &quot;edgeR_CAPL&quot;, &quot;DESeq2_CAPL&quot;), genes=c(nrow(txome_raw), nrow(txome_edge_virus), nrow(txome_deseq_virus), nrow(txome_edge_acute), nrow(txome_deseq_acute), nrow(gnome_raw), nrow(gnome_edge_virus), nrow(gnome_deseq_virus), nrow(gnome_edge_acute), nrow(gnome_deseq_acute))) %&gt;% mutate(method=factor(method, levels=c(&quot;Raw&quot;, &quot;edgeR_Virus&quot;, &quot;DESeq2_Virus&quot;, &quot;edgeR_CAPL&quot;, &quot;DESeq2_CAPL&quot;)), approach=factor(approach, levels=c(&quot;Transcriptome&quot;, &quot;Genome&quot;))) filter_stats_plot &lt;- ggplot(filter_stats, aes(x=method, y=genes)) + geom_col() + facet_grid(~approach) + labs(x=NULL, y = &quot;Number of Genes&quot;) + theme_bw() + theme(panel.grid=element_blank(), axis.text.x = element_text(angle=45, hjust=0.9)) ggsave(&quot;Figures/TG_method_prepostfilter.jpg&quot;, plot=filter_stats_plot, width=5, height=4, units=&quot;in&quot;) 8.3.6.2 Method comparison method_stats &lt;- data.frame( approach=c(&quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Transcriptome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;, &quot;Genome&quot;), method=c(&quot;edgeR&quot;, &quot;edgeR&quot;, &quot;edgeR&quot;, &quot;edgeR&quot;, &quot;DESeq2&quot;, &quot;DESeq2&quot;, &quot;DESeq2&quot;, &quot;DESeq2&quot;, &quot;edgeR&quot;, &quot;edgeR&quot;, &quot;edgeR&quot;, &quot;edgeR&quot;, &quot;DESeq2&quot;, &quot;DESeq2&quot;, &quot;DESeq2&quot;, &quot;DESeq2&quot;), disease=c(&quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;, &quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;, &quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;, &quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;), genes=c(nrow(txome_edge_DEG_virus), nrow(txome_edge_DEG_acute), nrow(txome_edge_DEG_peak), nrow(txome_edge_DEG_late), nrow(txome_deseq_DEG_virus), nrow(txome_deseq_DEG_acute), nrow(txome_deseq_DEG_peak), nrow(txome_deseq_DEG_late), nrow(gnome_edge_DEG_virus), nrow(gnome_edge_DEG_acute), nrow(gnome_edge_DEG_peak), nrow(gnome_edge_DEG_late), nrow(gnome_deseq_DEG_virus), nrow(gnome_deseq_DEG_acute), nrow(gnome_deseq_DEG_peak), nrow(gnome_deseq_DEG_late))) %&gt;% mutate(approach=factor(approach, levels=c(&quot;Transcriptome&quot;, &quot;Genome&quot;)), method=factor(method, levels=c(&quot;edgeR&quot;, &quot;DESeq2&quot;)), disease=factor(disease, levels=c(&quot;V+ vs V-&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;))) method_stats %&gt;% pivot_wider(names_from=approach, values_from=genes) method_stats_plot &lt;- ggplot(method_stats, aes(x=method, y=genes, fill=disease)) + geom_col(position=&quot;dodge&quot;) + scale_fill_manual(values=c(&quot;darkslategray2&quot;, &quot;darkslategray3&quot;, &quot;darkslategray4&quot;, &quot;darkslategray&quot;), name=&quot;Disease Stage&quot;) + facet_grid(~approach) + labs(x=&quot;R Package&quot;, y=&quot;Number of DEGs&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;) ggsave(&quot;Figures/TG_method_degcomp.jpg&quot;, plot=method_stats_plot, width=5, height=4, units=&quot;in&quot;) 8.3.7 Method Gene IDs 8.3.7.1 Virus virus &lt;- list(`T-edgeR` = txome_edge_DEG_virus$edge_gene, `T-DESeq2` = txome_deseq_DEG_virus$deseq_gene, `G-edgeR` = gnome_edge_DEG_virus$edge_gene, `G-DESeq2` = gnome_deseq_DEG_virus$deseq_gene) venn.diagram(virus, filename=&quot;Figures/TG_method_degID_virus.jpg&quot;, disable.logging=TRUE, main=&quot;Virus+ vs Virus-&quot;, main.pos=c(0.5,0.77), fill=c(&quot;#66c2a5&quot;, &quot;#fc8d62&quot;, &quot;#8da0cb&quot;, &quot;#e78ac3&quot;), margin=0.3, height=6, width=8, units=&quot;in&quot;) 8.3.7.2 Acute acute &lt;- list(`T-edgeR` = txome_edge_DEG_acute$edge_gene, `T-DESeq2` = txome_deseq_DEG_acute$deseq_gene, `G-edgeR` = gnome_edge_DEG_acute$edge_gene, `G-DESeq2` = gnome_deseq_DEG_acute$deseq_gene) venn.diagram(acute, filename=&quot;Figures/TG_method_degID_acute.jpg&quot;, disable.logging=TRUE, main=&quot;Control vs Acute&quot;, main.pos=c(0.5,0.77), fill=c(&quot;#66c2a5&quot;, &quot;#fc8d62&quot;, &quot;#8da0cb&quot;, &quot;#e78ac3&quot;), margin=0.3, height=6, width=8, units=&quot;in&quot;) 8.3.7.3 Peak peak &lt;- list(`T-edgeR` = txome_edge_DEG_peak$edge_gene, `T-DESeq2` = txome_deseq_DEG_peak$deseq_gene, `G-edgeR` = gnome_edge_DEG_peak$edge_gene, `G-DESeq2` = gnome_deseq_DEG_peak$deseq_gene) venn.diagram(peak, filename=&quot;Figures/TG_method_degID_peak.jpg&quot;, disable.logging=TRUE, main=&quot;Control vs Peak&quot;, main.pos=c(0.5,0.77), fill=c(&quot;#66c2a5&quot;, &quot;#fc8d62&quot;, &quot;#8da0cb&quot;, &quot;#e78ac3&quot;), margin=0.3, height=6, width=8, units=&quot;in&quot;) 8.3.7.4 Late late &lt;- list(`T-edgeR` = txome_edge_DEG_late$edge_gene, `T-DESeq2` = txome_deseq_DEG_late$deseq_gene, `G-edgeR` = gnome_edge_DEG_late$edge_gene, `G-DESeq2` = gnome_deseq_DEG_late$deseq_gene) venn.diagram(late, filename=&quot;Figures/TG_method_degID_late.jpg&quot;, disable.logging=TRUE, main=&quot;Control vs Late&quot;, main.pos=c(0.5,0.77), fill=c(&quot;#66c2a5&quot;, &quot;#fc8d62&quot;, &quot;#8da0cb&quot;, &quot;#e78ac3&quot;), margin=0.3, height=6, width=8, units=&quot;in&quot;) 8.4 Transcriptome vs Genome 8.4.1 Merge results edge_virus &lt;- merge(txome_edge_virus, gnome_edge_virus, all.x=FALSE, by=&quot;edge_gene&quot;) edge_acute &lt;- merge(txome_edge_acute, gnome_edge_acute, all.x=FALSE, by=&quot;edge_gene&quot;) edge_peak &lt;- merge(txome_edge_peak, gnome_edge_peak, all.x=FALSE, by=&quot;edge_gene&quot;) edge_late &lt;- merge(txome_edge_late, gnome_edge_late, all.x=FALSE, by=&quot;edge_gene&quot;) deseq_virus &lt;- merge(txome_deseq_virus, gnome_deseq_virus, all.x=FALSE, by=&quot;deseq_gene&quot;) deseq_acute &lt;- merge(txome_deseq_acute, gnome_deseq_acute, all.x=FALSE, by=&quot;deseq_gene&quot;) deseq_peak &lt;- merge(txome_deseq_peak, gnome_deseq_peak, all.x=FALSE, by=&quot;deseq_gene&quot;) deseq_late &lt;- merge(txome_deseq_late, gnome_deseq_late, all.x=FALSE, by=&quot;deseq_gene&quot;) 8.4.2 p-value 8.4.2.1 edgeR edge_pvalue_virus &lt;- ggscatter(edge_virus, x = &quot;edge_PValue.x&quot;, y = &quot;edge_PValue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;edgeR Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_pvalue_acute &lt;- ggscatter(edge_acute, x = &quot;edge_PValue.x&quot;, y = &quot;edge_PValue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;edgeR Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_pvalue_peak &lt;- ggscatter(edge_peak, x = &quot;edge_PValue.x&quot;, y = &quot;edge_PValue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;edgeR Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_pvalue_late &lt;- ggscatter(edge_late, x = &quot;edge_PValue.x&quot;, y = &quot;edge_PValue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;edgeR Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_pvalue &lt;- ggarrange(edge_pvalue_virus, edge_pvalue_acute, edge_pvalue_peak, edge_pvalue_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.4.2.2 DESeq2 deseq_pvalue_virus &lt;- ggscatter(deseq_virus, x = &quot;deseq_pvalue.x&quot;, y = &quot;deseq_pvalue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;DESeq2 Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_pvalue_acute &lt;- ggscatter(deseq_acute, x = &quot;deseq_pvalue.x&quot;, y = &quot;deseq_pvalue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;DESeq2 Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_pvalue_peak &lt;- ggscatter(deseq_peak, x = &quot;deseq_pvalue.x&quot;, y = &quot;deseq_pvalue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;DESeq2 Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_pvalue_late &lt;- ggscatter(deseq_late, x = &quot;deseq_pvalue.x&quot;, y = &quot;deseq_pvalue.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), cor.coef.coord = c(0, 1.05), xlab = &quot;Transcriptome p-value&quot;, ylab = &quot;Genome p-value&quot;, main = &quot;DESeq2 Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_pvalue &lt;- ggarrange(deseq_pvalue_virus, deseq_pvalue_acute, deseq_pvalue_peak, deseq_pvalue_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.4.2.3 Combine approach_pvalue &lt;- ggarrange(edge_pvalue, deseq_pvalue, ncol=1) ggsave(&quot;Figures/supplemental_TG_approachcomp_pvalue.jpeg&quot;, approach_pvalue, width=18, height=9, units=&quot;in&quot;) 8.4.3 log(FC) 8.4.3.1 edgeR edge_fc_virus &lt;- ggscatter(edge_virus, x = &quot;edge_logFC.x&quot;, y = &quot;edge_logFC.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;edgeR Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_fc_acute &lt;- ggscatter(edge_acute, x = &quot;edge_logFC.x&quot;, y = &quot;edge_logFC.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;edgeR Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_fc_peak &lt;- ggscatter(edge_peak, x = &quot;edge_logFC.x&quot;, y = &quot;edge_logFC.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;edgeR Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_fc_late &lt;- ggscatter(edge_late, x = &quot;edge_logFC.x&quot;, y = &quot;edge_logFC.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;edgeR Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_fc &lt;- ggarrange(edge_fc_virus, edge_fc_acute, edge_fc_peak, edge_fc_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.4.3.2 DESeq2 deseq_fc_virus &lt;- ggscatter(deseq_virus, x = &quot;deseq_log2FoldChange.x&quot;, y = &quot;deseq_log2FoldChange.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;DESeq2 Virus+ vs Virus-&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_fc_acute &lt;- ggscatter(deseq_acute, x = &quot;deseq_log2FoldChange.x&quot;, y = &quot;deseq_log2FoldChange.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;DESeq2 Control vs Acute&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_fc_peak &lt;- ggscatter(deseq_peak, x = &quot;deseq_log2FoldChange.x&quot;, y = &quot;deseq_log2FoldChange.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;DESeq2 Control vs Peak&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_fc_late &lt;- ggscatter(deseq_late, x = &quot;deseq_log2FoldChange.x&quot;, y = &quot;deseq_log2FoldChange.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome log2(Fold Change)&quot;, ylab = &quot;Genome log2(Fold Change)&quot;, main = &quot;DESeq2 Control vs Late&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_fc &lt;- ggarrange(deseq_fc_virus, deseq_fc_acute, deseq_fc_peak, deseq_fc_late, ncol=4) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.4.3.3 Combine approach_fc &lt;- ggarrange(edge_fc, deseq_fc, ncol=1) ggsave(&quot;Figures/supplemental_TG_approachcomp_foldchange.jpeg&quot;, approach_fc, width=18, height=9, units=&quot;in&quot;) 8.4.4 log mean expression 8.4.4.1 edgeR edge_virus_exp &lt;- ggscatter(edge_virus, x = &quot;edge_logCPM.x&quot;, y = &quot;edge_logCPM.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome&quot;, ylab = &quot;Genome&quot;, main = &quot; Virus+ vs Virus- edgeR log2(CPM)&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) edge_exp &lt;- ggscatter(edge_acute, x = &quot;edge_logCPM.x&quot;, y = &quot;edge_logCPM.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome&quot;, ylab = &quot;Genome&quot;, main = &quot;C vs A,P,L edgeR log2(CPM)&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.4.4.2 DESeq2 deseq_virus_exp &lt;- ggscatter(deseq_virus, x = &quot;deseq_logbaseMean.x&quot;, y = &quot;deseq_logbaseMean.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome&quot;, ylab = &quot;Genome&quot;, main = &quot; Virus+ vs Virus- DESeq2 log2(baseMean)&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) deseq_exp &lt;- ggscatter(deseq_acute, x = &quot;deseq_logbaseMean.x&quot;, y = &quot;deseq_logbaseMean.y&quot;, add = &quot;reg.line&quot;, add.params = list(color = &quot;darkslategray4&quot;), conf.int = TRUE, cor.coef = TRUE, cor.method = &quot;pearson&quot;, cor.coeff.args = list(color=&quot;black&quot;), xlab = &quot;Transcriptome&quot;, ylab = &quot;Genome&quot;, main = &quot; C vs A,P,L DESeq2 log2(baseMean)&quot;) + theme(plot.background = element_rect(color = &quot;black&quot;)) 8.4.4.3 Combine approach_exp &lt;- ggarrange(edge_virus_exp, edge_exp, deseq_virus_exp, deseq_exp, ncol=2, nrow=2) + theme(plot.background = element_rect(color = &quot;black&quot;)) ggsave(&quot;Figures/supplemental_TG_approachcomp_expression.jpeg&quot;, approach_exp, width=10, height=10, units=&quot;in&quot;) 8.4.5 PCA plots 8.4.5.1 Viral RNA 8.4.5.1.1 PCA tPCA_virus &lt;- prcomp(t(txome_norm_virus)) gPCA_virus &lt;- prcomp(t(gnome_norm_virus)) 8.4.5.1.2 Manuscript t_pca_disease_virus &lt;- autoplot(tPCA_virus, data=metadata, shape=&quot;RNA&quot;) + scale_shape_manual(values=c(1,16), labels=c(&quot;Virus-&quot;, &quot;Virus+&quot;), name=&quot;IAV RNA&quot;) + labs(title=&quot;A. Transcriptome&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;), text = element_text(size = 12)) rna_legend &lt;- get_legend(t_pca_disease_virus) t_pca_disease_virus &lt;- t_pca_disease_virus + theme(legend.position=&quot;none&quot;) g_pca_disease_virus &lt;- autoplot(gPCA_virus, data=metadata, shape=&quot;RNA&quot;) + scale_shape_manual(values=c(1,16), labels=c(&quot;Virus-&quot;, &quot;Virus+&quot;), name=&quot;IAV RNA&quot;) + labs(title=&quot;B. Genome&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;), text = element_text(size = 12)) pca_disease_virus &lt;- grid.arrange(arrangeGrob(t_pca_disease_virus, g_pca_disease_virus, ncol=2), arrangeGrob(rna_legend, ncol=1), heights=c(10, 2)) ggsave(&quot;Figures/TG_pca_disease_virus.jpg&quot;, pca_disease_virus, width=8, height=4, units=&quot;in&quot;) ggsave(&quot;Figures/Figure2.pdf&quot;, pca_disease_virus, width = 150, height = 70, units = &quot;mm&quot;, dpi = 600, scale = 1.5) 8.4.5.1.3 Presentation t_pca_pres &lt;- t_pca_disease_virus + theme(plot.title=element_blank(), text = element_text(size=15), legend.position = &quot;right&quot;) ggsave(&quot;Figures/T_pca_disease_virus_pres.jpg&quot;, t_pca_pres, width=6, height=4, units=&quot;in&quot;) 8.4.5.1.4 Supplemental 8.4.5.1.4.1 Transcriptome - Year a_virus &lt;- autoplot(tPCA_virus, data=metadata, shape=&quot;year&quot;) + scale_shape_manual(values=c(0, 8, 6, 16, 3), name=NULL) + labs(title=&quot;A. Year&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;)) year_legend &lt;- get_legend(a_virus) a_virus &lt;- a_virus + theme(legend.position=&quot;none&quot;) 8.4.5.1.4.2 Transcriptome - Molt Stage b_virus &lt;- autoplot(tPCA_virus, data=metadata, shape=&quot;molt&quot;) + scale_shape_manual(values=c(0, 16, 8), name=NULL) + labs(title=&quot;B. Molt Stage&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;)) molt_legend &lt;- get_legend(b_virus) b_virus &lt;- b_virus + theme(legend.position=&quot;none&quot;) 8.4.5.1.4.3 Transcriptome - Location c_virus &lt;- autoplot(tPCA_virus, data=metadata, shape=&quot;location&quot;) + scale_shape_manual(values=c(16, 8), name=NULL, labels=c(&quot;Monomoy&quot;, &quot;Muskeget&quot;)) + labs(title=&quot;C. Location&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;)) location_legend &lt;- get_legend(c_virus) c_virus &lt;- c_virus + theme(legend.position=&quot;none&quot;) 8.4.5.1.4.4 Genome - Year d_virus &lt;- autoplot(gPCA_virus, data=metadata, shape=&quot;year&quot;) + scale_shape_manual(values=c(0, 8, 6, 16, 3), name=&quot;Year&quot;) + labs(title=&quot;D. Year&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;) 8.4.5.1.4.5 Genome - Molt Stage e_virus &lt;- autoplot(gPCA_virus, data=metadata, shape=&quot;molt&quot;) + scale_shape_manual(values=c(0, 16, 8), name=&quot;Molt Stage&quot;) + labs(title=&quot;E. Molt Stage&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;) 8.4.5.1.4.6 Genome - Location f_virus &lt;- autoplot(gPCA_virus, data=metadata, shape=&quot;location&quot;) + scale_shape_manual(values=c(16, 8), name=&quot;Location&quot;) + labs(title=&quot;F. Location&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;) 8.4.5.1.4.7 Combine pca_grid &lt;- grid.arrange(arrangeGrob(a_virus, b_virus, c_virus, ncol=3), arrangeGrob(year_legend, molt_legend, location_legend, ncol=3), arrangeGrob(d_virus, e_virus, f_virus, ncol=3), nrow=3, heights=c(8,2,8)) ggsave(&quot;Figures/supplemental_TG_pca_grid_virus.jpg&quot;, pca_grid, width=14, height=7, units=&quot;in&quot;) 8.4.5.2 Influenza Stages 8.4.5.2.1 PCA tPCA &lt;- prcomp(t(txome_norm)) gPCA &lt;- prcomp(t(gnome_norm)) 8.4.5.2.2 Transcriptome - Influenza Stages a &lt;- autoplot(tPCA, data=metadata, shape=&quot;disease_stage&quot;) + scale_shape_manual(values=c(2,17,16,1), labels=c(&quot;C&quot;, &quot;A&quot;, &quot;P&quot;, &quot;L&quot;), name=NULL) + labs(title=&quot;A. Influenza Stage&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;)) disease_legend &lt;- get_legend(a) a &lt;- a + theme(legend.position=&quot;none&quot;) 8.4.5.2.3 Transcriptome - Year b &lt;- autoplot(tPCA, data=metadata, shape=&quot;year&quot;) + scale_shape_manual(values=c(0, 8, 6, 16, 3), name=NULL) + labs(title=&quot;B. Year&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;)) year_legend &lt;- get_legend(b) b &lt;- b + theme(legend.position=&quot;none&quot;) 8.4.5.2.4 Transcriptome - Molt Stage c &lt;- autoplot(tPCA, data=metadata, shape=&quot;molt&quot;) + scale_shape_manual(values=c(0, 16, 8), name=NULL) + labs(title=&quot;C. Molt Stage&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;)) molt_legend &lt;- get_legend(c) c &lt;- c + theme(legend.position=&quot;none&quot;) 8.4.5.2.5 Transcriptome - Location d &lt;- autoplot(tPCA, data=metadata, shape=&quot;location&quot;) + scale_shape_manual(values=c(16, 8), name=NULL, labels=c(&quot;Monomoy&quot;, &quot;Muskeget&quot;)) + labs(title=&quot;D. Location&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;bottom&quot;, legend.background=element_rect(linewidth=0.5, linetype=&quot;solid&quot;, colour =&quot;black&quot;)) location_legend &lt;- get_legend(d) d &lt;- d + theme(legend.position=&quot;none&quot;) 8.4.5.2.6 Genome - Influenza Stages e &lt;- autoplot(gPCA, data=metadata, shape=&quot;disease_stage&quot;) + scale_shape_manual(values=c(2,17,16,1), labels=c(&quot;Control&quot;, &quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;), name=&quot;Influenza Stage&quot;) + labs(title=&quot;E. Influenza Stage&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;) 8.4.5.2.7 Genome - Year f &lt;- autoplot(gPCA, data=metadata, shape=&quot;year&quot;) + scale_shape_manual(values=c(0, 8, 6, 16, 3), name=&quot;Year&quot;) + labs(title=&quot;F. Year&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;) 8.4.5.2.8 Transcriptome - Molt Stage g &lt;- autoplot(gPCA, data=metadata, shape=&quot;molt&quot;) + scale_shape_manual(values=c(0, 16, 8), name=&quot;Molt Stage&quot;) + labs(title=&quot;G. Molt Stage&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;) 8.4.5.2.9 Transcriptome - Location h &lt;- autoplot(gPCA, data=metadata, shape=&quot;location&quot;) + scale_shape_manual(values=c(16, 8), name=&quot;Location&quot;) + labs(title=&quot;H. Location&quot;) + theme_bw() + theme(panel.grid=element_blank(), legend.position=&quot;none&quot;) 8.4.5.2.10 Combine pca_grid &lt;- grid.arrange(arrangeGrob(a, b, c, d, ncol=4), arrangeGrob(disease_legend, year_legend, molt_legend, location_legend, ncol=4), arrangeGrob(e, f, g, h, ncol=4), nrow=3, heights=c(8,2,8)) ggsave(&quot;Figures/supplemental_TG_pca_grid_influenzastage.jpg&quot;, pca_grid, width=14, height=7, units=&quot;in&quot;) "],["iav-kegg-pathway-candidate-gene-analysis.html", "9 IAV Kegg Pathway Candidate Gene Analysis 9.1 Libraries 9.2 Data 9.3 Extract genes from KEGG Pathway 9.4 Overlap with Gene Lists 9.5 Plot pathway map", " 9 IAV Kegg Pathway Candidate Gene Analysis 9.1 Libraries library(limma) library(org.Hs.eg.db) library(AnnotationDbi) library(tidyverse) library(ggkegg) library(tidygraph) 9.2 Data t_postfilter &lt;- read.table(&quot;Output Files/txome_female_edgeR_postfilter.txt&quot;) t_acute &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_acute.csv&quot;, row.names=1) t_peak &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_peak.csv&quot;, row.names=1) t_late &lt;- read.csv(&quot;Output Files/txome_female_edgeR_DEG_late.csv&quot;, row.names=1) g_postfilter &lt;- read.table(&quot;Output Files/gnome_female_edgeR_postfilter.txt&quot;) g_acute &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_acute.csv&quot;, row.names=1) g_peak &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_peak.csv&quot;, row.names=1) g_late &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_DEG_late.csv&quot;, row.names=1) t_virus_postfilter &lt;- read.table(&quot;Output Files/txome_female_edgeR_viralRNA_postfilter.txt&quot;) t_virus_degs &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_DEG.csv&quot;, row.names=1) g_virus_postfilter &lt;- read.table(&quot;Output Files/gnome_female_edgeR_viralRNA_postfilter.txt&quot;) g_virus_degs &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_DEG.csv&quot;, row.names=1) 9.3 Extract genes from KEGG Pathway iav &lt;- getGeneKEGGLinks(species=&quot;hsa&quot;) %&gt;% filter(PathwayID == &quot;hsa05164&quot;) iav$Symbol &lt;- mapIds(org.Hs.eg.db, iav$GeneID, column=&quot;SYMBOL&quot;, keytype=&quot;ENTREZID&quot;) 9.4 Overlap with Gene Lists 9.4.1 Postfilter postfilter &lt;- rbind(t_postfilter, g_postfilter, t_virus_postfilter) %&gt;% filter(!duplicated(V1)) iav_postfilter &lt;- intersect(iav$Symbol, postfilter$V1) 9.4.2 Differentially Expressed Genes acute &lt;- data.frame( genes=c(intersect(iav$Symbol, t_acute$gene), intersect(iav$Symbol, g_acute$gene)), category=&quot;acute&quot;) peak &lt;- data.frame( genes=c(intersect(iav$Symbol, t_peak$gene), intersect(iav$Symbol, g_peak$gene)), category=&quot;peak&quot;) late &lt;- data.frame( genes=c(intersect(iav$Symbol, t_late$gene), intersect(iav$Symbol, g_late$gene)), category=&quot;late&quot;) %&gt;% filter(!duplicated(genes)) virus &lt;- data.frame( genes=c(intersect(iav$Symbol, t_virus_degs$gene), intersect(iav$Symbol, g_virus_degs$gene)), category=&quot;virus&quot;) %&gt;% filter(!duplicated(genes)) 9.4.3 Compile gene IDs deg &lt;- rbind(acute, peak, late, virus) %&gt;% mutate(id = paste0(&quot;hsa:&quot;, ifelse(genes %in% iav$Symbol, iav[match(genes, iav$Symbol),1], genes))) expressed &lt;- data.frame(genes=iav_postfilter) %&gt;% filter(!genes %in% deg$genes) %&gt;% mutate(id = paste0(&quot;hsa:&quot;, ifelse(genes %in% iav$Symbol, iav[match(genes, iav$Symbol),1], genes))) notexpressed &lt;- data.frame(iav) %&gt;% filter(!Symbol %in% expressed$genes) %&gt;% filter(!Symbol %in% deg$genes) %&gt;% mutate(id = paste0(&quot;hsa:&quot;, ifelse(Symbol %in% iav$Symbol, iav[match(Symbol, iav$Symbol),1], Symbol))) 9.5 Plot pathway map ** no longer used - cannot figure out coloring for some genes. Created map online. graph_info &lt;- pathway(&quot;hsa05164&quot;) %&gt;% activate(nodes) %&gt;% mutate(convert_hsa=convert_id(&quot;hsa&quot;), convert_map=convert_id(&quot;pathway&quot;)) bgcolor=ifelse(convert_hsa %in% expressed$id, &quot;#FFFFE0&quot;, bgcolor)) graph &lt;- ggraph(graph_info, x=x, y=y) + geom_node_rect(aes(filter=type==&quot;gene&quot;, color=bgcolor)) + overlay_raw_map() + theme_void() graph #ggkeggsave(filename=&quot;Figures/iavkegg.jpg&quot;, graph, dpi=300) 9.5.1 Create Legend png(filename=&quot;Figures/iavkeggleg.png&quot;, width = 6, height=7, units=&quot;in&quot;, res=300) plot(NULL ,xaxt=&#39;n&#39;,yaxt=&#39;n&#39;,bty=&#39;n&#39;,ylab=&#39;&#39;,xlab=&#39;&#39;, , xlim=c(0,100), ylim=c(0,10)) legend(&quot;topleft&quot;, legend =c(&quot;Acute&quot;, &quot;Peak&quot;, &quot;Late&quot;, &quot;Virus&quot;, &quot;Expressed&quot;, &quot;Not Expressed&quot;), pch=15, pt.cex=7, cex=3, bty=&#39;o&#39;, col = c(&quot;darkslategray1&quot;, &quot;darkslategray3&quot;, &quot;darkslategray4&quot;, &quot;gray80&quot;, &quot;coral&quot;, &quot;wheat2&quot;), horiz=F) dev.off() "],["outlier-analysis.html", "10 Outlier Analysis 10.1 Libraries 10.2 Data 10.3 PCA", " 10 Outlier Analysis 10.1 Libraries library(tidyverse) library(ggfortify) 10.2 Data tcpm &lt;- read.csv(&quot;Output Files/txome_female_edgeR_viralRNA_normcounts.csv&quot;, row.names=1) %&gt;% relocate(Hg862a, .before=1) %&gt;% relocate(Hg1351, .before=2) %&gt;% relocate(Hg1380, .before=3) gcpm &lt;- read.csv(&quot;Output Files/gnome_female_edgeR_viralRNA_normcounts.csv&quot;, row.names=1) %&gt;% relocate(Hg862a, .before=1) %&gt;% relocate(Hg1351, .before=2) %&gt;% relocate(Hg1380, .before=3) meta &lt;- read.csv(&quot;Input Files/metadata.csv&quot;) %&gt;% filter(!sex==&quot;male&quot;) %&gt;% mutate(RNA = ifelse(disease_stage==&quot;acute&quot;, &quot;virus+&quot;, ifelse(disease_stage==&quot;peak&quot;, &quot;virus+&quot;, &quot;virus-&quot;))) %&gt;% mutate(year=factor(year), disease_stage=factor(disease_stage, levels=c(&quot;control&quot;, &quot;acute&quot;, &quot;peak&quot;, &quot;late&quot;))) %&gt;% mutate(sample=factor(sample, levels=colnames(tcpm))) meta_out &lt;- meta %&gt;% filter(!sample==&quot;Hg862a&quot; &amp; !sample==&quot;Hg1380&quot; &amp; !sample==&quot;Hg1351&quot;) traw &lt;- read.csv(&quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, row.names=1) %&gt;% select(meta$sample) graw &lt;- read.csv(&quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, row.names=1) %&gt;% select(meta$sample) 10.3 PCA 10.3.1 Transcriptome 10.3.1.1 PCA Original tdist &lt;- dist(t(tcpm), method = &quot;euclidean&quot;) tpca &lt;- prcomp(t(tdist)) autoplot(tpca, data=meta, shape=FALSE) 10.3.1.2 PCA w/o Outliers tcpm_out &lt;- tcpm %&gt;% select(!c(Hg1380, Hg862a, Hg1351)) tdist_out &lt;- dist(t(tcpm_out), method = &quot;euclidean&quot;) tpca_out &lt;- prcomp(t(tdist_out)) autoplot(tpca_out, data=meta_out, shape=FALSE) autoplot(tpca_out, data=meta_out, colour=&quot;RNA&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(tpca_out, data=meta_out, colour=&quot;disease_stage&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(tpca_out, data=meta_out, colour=&quot;year&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(tpca_out, data=meta_out, colour=&quot;molt&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(tpca_out, data=meta_out, x=3, y=4, colour=&quot;RNA&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(tpca_out, data=meta_out, x=3, y=4, colour=&quot;disease_stage&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(tpca_out, data=meta_out, x=3, y=4, colour=&quot;year&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(tpca_out, data=meta_out, x=3, y=4, colour=&quot;molt&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) 10.3.2 Genome 10.3.2.1 PCA Original gdist &lt;- dist(t(gcpm), method = &quot;euclidean&quot;) gpca &lt;- prcomp(t(tdist)) autoplot(gpca, data=meta, shape=FALSE) 10.3.2.2 PCA w/o Outliers gcpm_out &lt;- gcpm %&gt;% select(!c(Hg1380, Hg862a, Hg1351)) gdist_out &lt;- dist(t(gcpm_out), method = &quot;euclidean&quot;) gpca_out &lt;- prcomp(t(gdist_out)) autoplot(gpca_out, data=meta_out, shape=FALSE) autoplot(gpca_out, data=meta_out, colour=&quot;RNA&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(gpca_out, data=meta_out, colour=&quot;disease_stage&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(gpca_out, data=meta_out, colour=&quot;year&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(gpca_out, data=meta_out, colour=&quot;molt&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(gpca_out, data=meta_out, x=3, y=4, colour=&quot;RNA&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(gpca_out, data=meta_out, x=3, y=4, colour=&quot;disease_stage&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(gpca_out, data=meta_out, x=3, y=4, colour=&quot;year&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) autoplot(gpca_out, data=meta_out, x=3, y=4, colour=&quot;molt&quot;, size=3) + theme(legend.position=&quot;bottom&quot;) 10.3.3 Number of Reads 10.3.3.1 Raw Reads treads &lt;- traw %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% pivot_longer(!genes, names_to=&quot;sample&quot;, values_to=&quot;reads&quot;) ggplot(treads, aes(x=factor(sample, levels=colnames(tcpm)), y=log(reads))) + geom_boxplot() + theme(axis.text.x = element_text(angle=90)) greads &lt;- graw %&gt;% rownames_to_column(var=&quot;genes&quot;) %&gt;% pivot_longer(!genes, names_to=&quot;sample&quot;, values_to=&quot;reads&quot;) ggplot(greads, aes(x=factor(sample, levels=colnames(gcpm)), y=log(reads))) + geom_boxplot() + theme(axis.text.x = element_text(angle=90)) 10.3.3.2 Read sum treadsum &lt;- treads %&gt;% group_by(sample) %&gt;% summarize(totalreads=sum(reads)) ggplot(treadsum, aes(x=factor(sample, levels=colnames(tcpm)), y=totalreads)) + geom_col() + theme(axis.text.x = element_text(angle=90)) greadsum &lt;- greads %&gt;% group_by(sample) %&gt;% summarize(totalreads=sum(reads)) ggplot(greadsum, aes(x=factor(sample, levels=colnames(gcpm)), y=totalreads)) + geom_col() + theme(axis.text.x = element_text(angle=90)) "],["downsample-late-group-to-test-degs.html", "11 Downsample Late Group to test # DEGs 11.1 Libraries 11.2 Data 11.3 Transcriptome 11.4 Genome", " 11 Downsample Late Group to test # DEGs 11.1 Libraries library(tidyverse) library(edgeR) 11.2 Data meta &lt;- read.csv(&quot;Input Files/metadata.csv&quot;, stringsAsFactors = FALSE) %&gt;% filter(!sex==&quot;male&quot;) traw &lt;- read.csv(file = &quot;Output Files/txome_genecounts_locid_nohemo.csv&quot;, header = TRUE, row.names = 1) %&gt;% select(meta$sample) graw &lt;- read.csv(file = &quot;Output Files/gnome_genecounts_locid_nohemo.csv&quot;, header = TRUE, row.names = 1) %&gt;% select(meta$sample) 11.3 Transcriptome 11.3.1 Downsample &amp; Loop # Set up results list tresults &lt;- setNames(vector(&#39;list&#39;, 100), 1:100) # Set seed for reproducibility set.seed(2) for (i in 1:100) { # Subsample late individuals late &lt;- meta %&gt;% filter(disease_stage==&quot;late&quot;) %&gt;% group_by(disease_stage) %&gt;% sample_n(size=5) # Create new metadata meta_new &lt;- meta %&gt;% filter(!disease_stage==&quot;late&quot;) %&gt;% rbind(late) # Create new count matrix raw_new &lt;- traw %&gt;% select(meta_new$sample) # Create DGE Object DGE &lt;- DGEList(counts=raw_new, group=meta_new$disease_stage) # Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] # Normalize based on library sizes &amp; calculate dispersion DGE &lt;- calcNormFactors(DGE) DGE &lt;- estimateCommonDisp(DGE) DGE &lt;- estimateTrendedDisp(DGE) DGE &lt;- estimateTagwiseDisp(DGE) # Test for DEGs et_late &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;late&quot;)) # Select DEGs by fold change &amp; pvalue results_late &lt;- topTags(et_late, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) # Save output to list tresults[[i]] &lt;- results_late$gene } tnum &lt;- data.frame( genes = lengths(tresults), approach = &quot;Transcriptome&quot;) 11.4 Genome 11.4.1 Downsample &amp; Loop # Set up results list gresults &lt;- setNames(vector(&#39;list&#39;, 100), 1:100) # Set seed for reproducibility set.seed(2) for (i in 1:100) { # Subsample late individuals late &lt;- meta %&gt;% filter(disease_stage==&quot;late&quot;) %&gt;% group_by(disease_stage) %&gt;% sample_n(size=5) # Create new metadata meta_new &lt;- meta %&gt;% filter(!disease_stage==&quot;late&quot;) %&gt;% rbind(late) # Create new count matrix raw_new &lt;- graw %&gt;% select(meta_new$sample) # Create DGE Object DGE &lt;- DGEList(counts=raw_new, group=meta_new$disease_stage) # Filter out lowly expressed genes keep &lt;- filterByExpr(DGE) DGE &lt;- DGE[keep, , keep.lib.sizes=FALSE] # Normalize based on library sizes &amp; calculate dispersion DGE &lt;- calcNormFactors(DGE) DGE &lt;- estimateCommonDisp(DGE) DGE &lt;- estimateTrendedDisp(DGE) DGE &lt;- estimateTagwiseDisp(DGE) # Test for DEGs et_late &lt;- exactTest(DGE, pair=c(&quot;control&quot;, &quot;late&quot;)) # Select DEGs by fold change &amp; pvalue results_late &lt;- topTags(et_late, n = dim(DGE)[1]) %&gt;% data.frame() %&gt;% filter(abs(logFC) &gt; 1 &amp; PValue &lt; 0.05) %&gt;% rownames_to_column(var=&quot;gene&quot;) # Save output to list gresults[[i]] &lt;- results_late$gene } gnum &lt;- data.frame( genes = lengths(gresults), approach = &quot;Genome&quot;) 11.4.2 Summarize # DEGs num &lt;- rbind(tnum, gnum) num_plot &lt;- ggplot(num, aes(x=approach, y=genes)) + geom_boxplot() + labs(x=&quot;Approach&quot;, y=&quot;Number of DEGs&quot;) + scale_y_continuous(n.breaks=10) + stat_summary(fun.y=mean, colour=&quot;black&quot;, geom=&quot;text&quot;, show_guide = FALSE, vjust=c(8,4.8), aes( label=round(..y.., digits=0))) + theme_classic() num_plot ggsave(filename=&quot;Figures/supplemental_latedownsample.jpg&quot;, num_plot, width=4, height=4, units=&quot;in&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
